{"ast":null,"code":"var _jsxFileName = \"/home/demon/distributed-architecture/central-infrastructure/frontend/src/auth/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { setAuthToken } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  // Initialize token from localStorage to persist login across page refreshes\n  const [token, setToken] = useState(() => localStorage.getItem('authToken'));\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // This effect synchronizes the token with localStorage and the api client header\n  useEffect(() => {\n    if (token) {\n      localStorage.setItem('authToken', token);\n      setAuthToken(token);\n    } else {\n      localStorage.removeItem('authToken');\n      setAuthToken(null);\n    }\n  }, [token]);\n  const login = newToken => {\n    var _location$state, _location$state$from;\n    setToken(newToken);\n    // Redirect user to the page they were trying to access, or to the homepage\n    const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || '/';\n    navigate(from, {\n      replace: true\n    });\n  };\n  const logout = () => {\n    setToken(null);\n    navigate('/login');\n  };\n  const value = {\n    token,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n}\n_s(AuthProvider, \"71wJDFPJ0UDUn+BpyLq8utHbdy0=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","useLocation","setAuthToken","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","localStorage","getItem","navigate","location","setItem","removeItem","login","newToken","_location$state","_location$state$from","from","state","pathname","replace","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/home/demon/distributed-architecture/central-infrastructure/frontend/src/auth/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { setAuthToken } from '../api';\n\nconst AuthContext = createContext(null);\n\nexport function AuthProvider({ children }) {\n  // Initialize token from localStorage to persist login across page refreshes\n  const [token, setToken] = useState(() => localStorage.getItem('authToken'));\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // This effect synchronizes the token with localStorage and the api client header\n  useEffect(() => {\n    if (token) {\n      localStorage.setItem('authToken', token);\n      setAuthToken(token);\n    } else {\n      localStorage.removeItem('authToken');\n      setAuthToken(null);\n    }\n  }, [token]);\n\n  const login = (newToken) => {\n    setToken(newToken);\n    // Redirect user to the page they were trying to access, or to the homepage\n    const from = location.state?.from?.pathname || '/';\n    navigate(from, { replace: true });\n  };\n\n  const logout = () => {\n    setToken(null);\n    navigate('/login');\n  };\n\n  const value = { token, login, logout };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,YAAY,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,WAAW,gBAAGT,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,SAASU,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,MAAMa,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;EAC3E,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC;;EAE9B;EACAF,SAAS,CAAC,MAAM;IACd,IAAIU,KAAK,EAAE;MACTE,YAAY,CAACI,OAAO,CAAC,WAAW,EAAEN,KAAK,CAAC;MACxCP,YAAY,CAACO,KAAK,CAAC;IACrB,CAAC,MAAM;MACLE,YAAY,CAACK,UAAU,CAAC,WAAW,CAAC;MACpCd,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC,EAAE,CAACO,KAAK,CAAC,CAAC;EAEX,MAAMQ,KAAK,GAAIC,QAAQ,IAAK;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IAC1BV,QAAQ,CAACQ,QAAQ,CAAC;IAClB;IACA,MAAMG,IAAI,GAAG,EAAAF,eAAA,GAAAL,QAAQ,CAACQ,KAAK,cAAAH,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBE,IAAI,cAAAD,oBAAA,uBAApBA,oBAAA,CAAsBG,QAAQ,KAAI,GAAG;IAClDV,QAAQ,CAACQ,IAAI,EAAE;MAAEG,OAAO,EAAE;IAAK,CAAC,CAAC;EACnC,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBf,QAAQ,CAAC,IAAI,CAAC;IACdG,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMa,KAAK,GAAG;IAAEjB,KAAK;IAAEQ,KAAK;IAAEQ;EAAO,CAAC;EAEtC,oBAAOrB,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAnB,QAAA,EAAEA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E;AAACvB,EAAA,CAhCeF,YAAY;EAAA,QAGTN,WAAW,EACXC,WAAW;AAAA;AAAA+B,EAAA,GAJd1B,YAAY;AAkC5B,OAAO,SAAS2B,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACxB,OAAOrC,UAAU,CAACQ,WAAW,CAAC;AAChC;AAAC6B,GAAA,CAFeD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}