{"ast":null,"code":"var _jsxFileName = \"/home/demon/distributed-architecture/central-infrastructure/frontend/src/components/ProtocolWidget.js\";\nimport React from 'react';\nimport { Doughnut, Bar } from 'react-chartjs-2';\nimport './ProtocolWidget.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtocolWidget = ({\n  threatStats,\n  loading = false\n}) => {\n  var _topProtocol$protocol;\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"protocol-widget loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Protocol Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading protocol data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n  if (!threatStats || !threatStats.byProtocol || Object.keys(threatStats.byProtocol).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"protocol-widget empty\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Protocol Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"empty-icon\",\n          children: \"\\uD83D\\uDCCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No protocol data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n  const protocols = threatStats.byProtocol;\n  const totalEvents = Object.values(protocols).reduce((sum, count) => sum + count, 0);\n\n  // Prepare chart data\n  const chartData = {\n    labels: Object.keys(protocols),\n    datasets: [{\n      data: Object.values(protocols),\n      backgroundColor: ['#dc3545',\n      // Red - HTTPS\n      '#ffc107',\n      // Yellow - SSH\n      '#28a745',\n      // Green - FTP\n      '#17a2b8',\n      // Cyan - Telnet\n      '#6f42c1',\n      // Purple - HTTP\n      '#fd7e14',\n      // Orange - Other\n      '#20c997',\n      // Teal\n      '#6610f2' // Indigo\n      ],\n      borderWidth: 2,\n      borderColor: '#fff'\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          color: '#cbd5e1',\n          usePointStyle: true,\n          pointStyle: 'circle',\n          padding: 15,\n          font: {\n            size: 11\n          }\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const percentage = (context.parsed / totalEvents * 100).toFixed(1);\n            return `${context.label}: ${context.parsed} (${percentage}%)`;\n          }\n        }\n      }\n    },\n    layout: {\n      padding: {\n        top: 20,\n        bottom: 20,\n        left: 20,\n        right: 20\n      }\n    }\n  };\n\n  // Calculate protocol statistics\n  const protocolStats = Object.entries(protocols).sort(([, a], [, b]) => b - a).map(([protocol, count]) => ({\n    protocol,\n    count,\n    percentage: (count / totalEvents * 100).toFixed(1)\n  }));\n  const topProtocol = protocolStats[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"protocol-widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widget-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Protocol Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"total-protocols\",\n          children: [Object.keys(protocols).length, \" protocols\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"total-events\",\n          children: [totalEvents, \" events\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widget-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: /*#__PURE__*/_jsxDEV(Doughnut, {\n              data: chartData,\n              options: chartOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"primary-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"primary-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Most Targeted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"protocol-name\",\n                children: (topProtocol === null || topProtocol === void 0 ? void 0 : (_topProtocol$protocol = topProtocol.protocol) === null || _topProtocol$protocol === void 0 ? void 0 : _topProtocol$protocol.toUpperCase()) || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"protocol-count\",\n                children: [(topProtocol === null || topProtocol === void 0 ? void 0 : topProtocol.count) || 0, \" events\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quick-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quick-stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"quick-label\",\n                children: \"Total Events\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"quick-value\",\n                children: totalEvents\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quick-stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"quick-label\",\n                children: \"Active Protocols\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"quick-value\",\n                children: Object.keys(protocols).length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"protocol-breakdown-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Protocol Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"protocol-breakdown\",\n          children: protocolStats.slice(0, 4).map((stat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"protocol-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"protocol-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"protocol-label\",\n                children: stat.protocol.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"protocol-percentage\",\n                children: [stat.percentage, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"protocol-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"protocol-fill\",\n                style: {\n                  width: `${stat.percentage}%`,\n                  backgroundColor: chartData.datasets[0].backgroundColor[index]\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)]\n          }, stat.protocol, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"security-insights-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Security Insights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"insights-list\",\n          children: getSecurityInsights(protocolStats).map((insight, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `insight-item ${insight.severity}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"insight-icon\",\n              children: insight.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"insight-text\",\n              children: insight.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n// Generate security insights based on protocol data\n_c = ProtocolWidget;\nconst getSecurityInsights = protocolStats => {\n  const insights = [];\n  if (protocolStats.length === 0) return insights;\n  const topProtocol = protocolStats[0];\n  const sshAttacks = protocolStats.find(p => p.protocol.toLowerCase() === 'ssh');\n  const httpsAttacks = protocolStats.find(p => p.protocol.toLowerCase() === 'https');\n  const ftpAttacks = protocolStats.find(p => p.protocol.toLowerCase() === 'ftp');\n\n  // Top protocol insight\n  if (topProtocol.percentage > 50) {\n    insights.push({\n      severity: 'high',\n      icon: '⚠️',\n      text: `${topProtocol.protocol.toUpperCase()} is heavily targeted (${topProtocol.percentage}%)`\n    });\n  } else {\n    insights.push({\n      severity: 'info',\n      icon: 'ℹ️',\n      text: `${topProtocol.protocol.toUpperCase()} is most targeted protocol`\n    });\n  }\n\n  // SSH specific insights\n  if (sshAttacks && sshAttacks.percentage > 20) {\n    insights.push({\n      severity: 'medium',\n      icon: '🔑',\n      text: `High SSH brute force activity detected`\n    });\n  }\n\n  // HTTPS specific insights\n  if (httpsAttacks && httpsAttacks.percentage > 30) {\n    insights.push({\n      severity: 'medium',\n      icon: '🌐',\n      text: `Significant web service reconnaissance`\n    });\n  }\n\n  // FTP specific insights\n  if (ftpAttacks && ftpAttacks.percentage > 15) {\n    insights.push({\n      severity: 'medium',\n      icon: '📁',\n      text: `FTP service being actively probed`\n    });\n  }\n\n  // Diversity insight\n  if (protocolStats.length >= 4) {\n    insights.push({\n      severity: 'info',\n      icon: '🎯',\n      text: `Multi-protocol attack pattern detected`\n    });\n  }\n  return insights.slice(0, 3); // Limit to 3 insights\n};\nexport default ProtocolWidget;\nvar _c;\n$RefreshReg$(_c, \"ProtocolWidget\");","map":{"version":3,"names":["React","Doughnut","Bar","jsxDEV","_jsxDEV","ProtocolWidget","threatStats","loading","_topProtocol$protocol","className","children","fileName","_jsxFileName","lineNumber","columnNumber","byProtocol","Object","keys","length","protocols","totalEvents","values","reduce","sum","count","chartData","labels","datasets","data","backgroundColor","borderWidth","borderColor","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","color","usePointStyle","pointStyle","padding","font","size","tooltip","callbacks","label","context","percentage","parsed","toFixed","layout","top","bottom","left","right","protocolStats","entries","sort","a","b","map","protocol","topProtocol","options","toUpperCase","slice","stat","index","style","width","getSecurityInsights","insight","severity","icon","text","_c","insights","sshAttacks","find","p","toLowerCase","httpsAttacks","ftpAttacks","push","$RefreshReg$"],"sources":["/home/demon/distributed-architecture/central-infrastructure/frontend/src/components/ProtocolWidget.js"],"sourcesContent":["import React from 'react';\nimport { Doughnut, Bar } from 'react-chartjs-2';\nimport './ProtocolWidget.css';\n\nconst ProtocolWidget = ({ threatStats, loading = false }) => {\n  if (loading) {\n    return (\n      <div className=\"protocol-widget loading\">\n        <div className=\"widget-header\">\n          <h3>Protocol Analysis</h3>\n        </div>\n        <div className=\"loading-content\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading protocol data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!threatStats || !threatStats.byProtocol || Object.keys(threatStats.byProtocol).length === 0) {\n    return (\n      <div className=\"protocol-widget empty\">\n        <div className=\"widget-header\">\n          <h3>Protocol Analysis</h3>\n        </div>\n        <div className=\"empty-state\">\n          <span className=\"empty-icon\">📊</span>\n          <p>No protocol data available</p>\n        </div>\n      </div>\n    );\n  }\n\n  const protocols = threatStats.byProtocol;\n  const totalEvents = Object.values(protocols).reduce((sum, count) => sum + count, 0);\n\n  // Prepare chart data\n  const chartData = {\n    labels: Object.keys(protocols),\n    datasets: [{\n      data: Object.values(protocols),\n      backgroundColor: [\n        '#dc3545', // Red - HTTPS\n        '#ffc107', // Yellow - SSH\n        '#28a745', // Green - FTP\n        '#17a2b8', // Cyan - Telnet\n        '#6f42c1', // Purple - HTTP\n        '#fd7e14', // Orange - Other\n        '#20c997', // Teal\n        '#6610f2'  // Indigo\n      ],\n      borderWidth: 2,\n      borderColor: '#fff'\n    }]\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          color: '#cbd5e1',\n          usePointStyle: true,\n          pointStyle: 'circle',\n          padding: 15,\n          font: {\n            size: 11\n          }\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            const percentage = ((context.parsed / totalEvents) * 100).toFixed(1);\n            return `${context.label}: ${context.parsed} (${percentage}%)`;\n          }\n        }\n      }\n    },\n    layout: {\n      padding: {\n        top: 20,\n        bottom: 20,\n        left: 20,\n        right: 20\n      }\n    }\n  };\n\n  // Calculate protocol statistics\n  const protocolStats = Object.entries(protocols)\n    .sort(([,a], [,b]) => b - a)\n    .map(([protocol, count]) => ({\n      protocol,\n      count,\n      percentage: ((count / totalEvents) * 100).toFixed(1)\n    }));\n\n  const topProtocol = protocolStats[0];\n\n  return (\n    <div className=\"protocol-widget\">\n      <div className=\"widget-header\">\n        <h3>Protocol Analysis</h3>\n        <div className=\"widget-stats\">\n          <span className=\"total-protocols\">{Object.keys(protocols).length} protocols</span>\n          <span className=\"total-events\">{totalEvents} events</span>\n        </div>\n      </div>\n\n      <div className=\"widget-content\">\n        {/* Top Section: Chart and Primary Stats */}\n        <div className=\"top-section\">\n          <div className=\"chart-section\">\n            <div className=\"chart-container\">\n              <Doughnut data={chartData} options={chartOptions} />\n            </div>\n          </div>\n\n          <div className=\"primary-stats\">\n            <div className=\"primary-stat\">\n              <div className=\"stat-label\">Most Targeted</div>\n              <div className=\"stat-value\">\n                <span className=\"protocol-name\">{topProtocol?.protocol?.toUpperCase() || 'N/A'}</span>\n                <span className=\"protocol-count\">{topProtocol?.count || 0} events</span>\n              </div>\n            </div>\n            \n            <div className=\"quick-stats\">\n              <div className=\"quick-stat\">\n                <span className=\"quick-label\">Total Events</span>\n                <span className=\"quick-value\">{totalEvents}</span>\n              </div>\n              <div className=\"quick-stat\">\n                <span className=\"quick-label\">Active Protocols</span>\n                <span className=\"quick-value\">{Object.keys(protocols).length}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Middle Section: Protocol Breakdown */}\n        <div className=\"protocol-breakdown-section\">\n          <h4>Protocol Distribution</h4>\n          <div className=\"protocol-breakdown\">\n            {protocolStats.slice(0, 4).map((stat, index) => (\n              <div key={stat.protocol} className=\"protocol-item\">\n                <div className=\"protocol-info\">\n                  <span className=\"protocol-label\">{stat.protocol.toUpperCase()}</span>\n                  <span className=\"protocol-percentage\">{stat.percentage}%</span>\n                </div>\n                <div className=\"protocol-bar\">\n                  <div \n                    className=\"protocol-fill\" \n                    style={{ \n                      width: `${stat.percentage}%`,\n                      backgroundColor: chartData.datasets[0].backgroundColor[index]\n                    }}\n                  ></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Bottom Section: Security Insights */}\n        <div className=\"security-insights-section\">\n          <h4>Security Insights</h4>\n          <div className=\"insights-list\">\n            {getSecurityInsights(protocolStats).map((insight, index) => (\n              <div key={index} className={`insight-item ${insight.severity}`}>\n                <span className=\"insight-icon\">{insight.icon}</span>\n                <span className=\"insight-text\">{insight.text}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Generate security insights based on protocol data\nconst getSecurityInsights = (protocolStats) => {\n  const insights = [];\n  \n  if (protocolStats.length === 0) return insights;\n  \n  const topProtocol = protocolStats[0];\n  const sshAttacks = protocolStats.find(p => p.protocol.toLowerCase() === 'ssh');\n  const httpsAttacks = protocolStats.find(p => p.protocol.toLowerCase() === 'https');\n  const ftpAttacks = protocolStats.find(p => p.protocol.toLowerCase() === 'ftp');\n  \n  // Top protocol insight\n  if (topProtocol.percentage > 50) {\n    insights.push({\n      severity: 'high',\n      icon: '⚠️',\n      text: `${topProtocol.protocol.toUpperCase()} is heavily targeted (${topProtocol.percentage}%)`\n    });\n  } else {\n    insights.push({\n      severity: 'info',\n      icon: 'ℹ️',\n      text: `${topProtocol.protocol.toUpperCase()} is most targeted protocol`\n    });\n  }\n  \n  // SSH specific insights\n  if (sshAttacks && sshAttacks.percentage > 20) {\n    insights.push({\n      severity: 'medium',\n      icon: '🔑',\n      text: `High SSH brute force activity detected`\n    });\n  }\n  \n  // HTTPS specific insights\n  if (httpsAttacks && httpsAttacks.percentage > 30) {\n    insights.push({\n      severity: 'medium',\n      icon: '🌐',\n      text: `Significant web service reconnaissance`\n    });\n  }\n  \n  // FTP specific insights\n  if (ftpAttacks && ftpAttacks.percentage > 15) {\n    insights.push({\n      severity: 'medium',\n      icon: '📁',\n      text: `FTP service being actively probed`\n    });\n  }\n  \n  // Diversity insight\n  if (protocolStats.length >= 4) {\n    insights.push({\n      severity: 'info',\n      icon: '🎯',\n      text: `Multi-protocol attack pattern detected`\n    });\n  }\n  \n  return insights.slice(0, 3); // Limit to 3 insights\n};\n\nexport default ProtocolWidget;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}