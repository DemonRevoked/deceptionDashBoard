{"ast":null,"code":"import React from'react';import{Bar,Doughnut}from'react-chartjs-2';import'./NmapDetectionWidget.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NmapDetectionWidget=_ref=>{let{threatStats,combinedEvents=[],loading=false}=_ref;if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"nmap-widget loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"widget-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Nmap Detection Analysis\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"loading-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading Nmap data...\"})]})]});}// Filter Nmap-related events\nconst nmapEvents=combinedEvents.filter(event=>{var _event$event_type,_event$user_agent;return((_event$event_type=event.event_type)===null||_event$event_type===void 0?void 0:_event$event_type.includes('nmap'))||event.scan_type||((_event$user_agent=event.user_agent)===null||_event$user_agent===void 0?void 0:_event$user_agent.toLowerCase().includes('nmap'));});if(nmapEvents.length===0){return/*#__PURE__*/_jsxs(\"div\",{className:\"nmap-widget empty\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"widget-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Nmap Detection Analysis\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"empty-icon\",children:\"\\uD83D\\uDD0D\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No Nmap scans detected\"})]})]});}// Analyze scan types\nconst scanTypes={};const scanMethods={};const timeDistribution={};const sourceIPs={};nmapEvents.forEach(event=>{// Scan types\nconst scanType=event.scan_type||'unknown';scanTypes[scanType]=(scanTypes[scanType]||0)+1;// Scan methods (from event_type)\nconst method=event.event_type||'unknown';scanMethods[method]=(scanMethods[method]||0)+1;// Time distribution (last 24 hours)\nconst eventTime=new Date(event.timestamp);const hour=eventTime.getHours();timeDistribution[hour]=(timeDistribution[hour]||0)+1;// Source IPs\nif(event.source_ip){sourceIPs[event.source_ip]=(sourceIPs[event.source_ip]||0)+1;}});// Prepare scan types chart data\nconst scanTypesData={labels:Object.keys(scanTypes).map(type=>type.replace(/[-_]/g,' ').replace(/\\b\\w/g,l=>l.toUpperCase())),datasets:[{data:Object.values(scanTypes),backgroundColor:['#dc3545',// Red\n'#ffc107',// Yellow\n'#28a745',// Green\n'#17a2b8',// Cyan\n'#6f42c1',// Purple\n'#fd7e14'// Orange\n],borderWidth:2,borderColor:'#fff'}]};// Prepare time distribution chart data\nconst hours=Array.from({length:24},(_,i)=>i);const timeData={labels:hours.map(h=>`${h}:00`),datasets:[{label:'Nmap Scans',data:hours.map(h=>timeDistribution[h]||0),backgroundColor:'rgba(220, 53, 69, 0.8)',borderColor:'#dc3545',borderWidth:1}]};const chartOptions={responsive:true,maintainAspectRatio:false,plugins:{legend:{display:false}},scales:{x:{ticks:{color:'#64748b',maxTicksLimit:12},grid:{color:'#334155'}},y:{ticks:{color:'#64748b'},grid:{color:'#334155'}}}};const doughnutOptions={responsive:true,maintainAspectRatio:false,plugins:{legend:{position:'bottom',labels:{color:'#cbd5e1',usePointStyle:true,pointStyle:'circle',padding:10,font:{size:11}}}}};// Calculate statistics\nconst totalScans=nmapEvents.length;const uniqueIPs=Object.keys(sourceIPs).length;const avgScansPerIP=(totalScans/uniqueIPs).toFixed(1);const topScanner=Object.entries(sourceIPs).sort((_ref2,_ref3)=>{let[,a]=_ref2;let[,b]=_ref3;return b-a;})[0];// Recent activity (last hour)\nconst oneHourAgo=new Date(Date.now()-60*60*1000);const recentScans=nmapEvents.filter(event=>new Date(event.timestamp)>oneHourAgo).length;// Threat level assessment\nconst getThreatLevel=()=>{if(totalScans>50)return{level:'high',color:'#dc3545',text:'High'};if(totalScans>20)return{level:'medium',color:'#ffc107',text:'Medium'};if(totalScans>5)return{level:'low',color:'#28a745',text:'Low'};return{level:'minimal',color:'#6c757d',text:'Minimal'};};const threatLevel=getThreatLevel();return/*#__PURE__*/_jsxs(\"div\",{className:\"nmap-widget\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"widget-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Nmap Detection Analysis\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"widget-stats\",children:[/*#__PURE__*/_jsxs(\"span\",{className:`threat-level ${threatLevel.level}`,style:{color:threatLevel.color},children:[threatLevel.text,\" Activity\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"total-scans\",children:[totalScans,\" scans\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"widget-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Scan Overview\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card primary\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:totalScans}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Total Scans\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:uniqueIPs}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Unique IPs\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:avgScansPerIP}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Avg/IP\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:recentScans}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Last Hour\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"charts-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Scan Types Distribution\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container small\",children:/*#__PURE__*/_jsx(Doughnut,{data:scanTypesData,options:doughnutOptions})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"24-Hour Activity Timeline\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:/*#__PURE__*/_jsx(Bar,{data:timeData,options:chartOptions})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"details-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Top Scanner\"}),topScanner?/*#__PURE__*/_jsxs(\"div\",{className:\"scanner-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"scanner-ip\",children:topScanner[0]}),/*#__PURE__*/_jsxs(\"span\",{className:\"scanner-count\",children:[topScanner[1],\" scans\"]})]}):/*#__PURE__*/_jsx(\"span\",{className:\"no-data\",children:\"No data\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Detection Signatures\"}),/*#__PURE__*/_jsx(\"div\",{className:\"signatures-list\",children:Object.entries(scanTypes).slice(0,3).map(_ref4=>{let[type,count]=_ref4;return/*#__PURE__*/_jsxs(\"div\",{className:\"signature-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"signature-name\",children:type.replace(/[-_]/g,' ').replace(/\\b\\w/g,l=>l.toUpperCase())}),/*#__PURE__*/_jsx(\"span\",{className:\"signature-count\",children:count})]},type);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Threat Indicators\"}),/*#__PURE__*/_jsx(\"div\",{className:\"indicators-list\",children:getThreatIndicators(nmapEvents,threatLevel.level).map((indicator,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`indicator-item ${indicator.severity}`,children:[/*#__PURE__*/_jsx(\"span\",{className:\"indicator-icon\",children:indicator.icon}),/*#__PURE__*/_jsx(\"span\",{className:\"indicator-text\",children:indicator.text})]},index))})]})]})]})]});};// Generate threat indicators based on Nmap activity\nconst getThreatIndicators=(nmapEvents,threatLevel)=>{const indicators=[];// Aggressive scans\nconst aggressiveScans=nmapEvents.filter(e=>{var _e$scan_type;return e.event_type==='nmap_aggressive'||((_e$scan_type=e.scan_type)===null||_e$scan_type===void 0?void 0:_e$scan_type.toLowerCase().includes('aggressive'));}).length;if(aggressiveScans>0){indicators.push({severity:'high',icon:'‚ö†Ô∏è',text:`${aggressiveScans} aggressive scan(s) detected`});}// Reconnaissance patterns\nconst reconScans=nmapEvents.filter(e=>{var _e$scan_type2;return e.event_type==='nmap_recon'||((_e$scan_type2=e.scan_type)===null||_e$scan_type2===void 0?void 0:_e$scan_type2.toLowerCase().includes('recon'));}).length;if(reconScans>10){indicators.push({severity:'medium',icon:'üîç',text:`High reconnaissance activity (${reconScans} scans)`});}// Repeated targeting\nconst uniqueIPs=[...new Set(nmapEvents.map(e=>e.source_ip))];if(nmapEvents.length/uniqueIPs.length>5){indicators.push({severity:'medium',icon:'üéØ',text:'Repeated targeting from same sources'});}// Recent activity spike\nconst lastHour=nmapEvents.filter(e=>new Date(e.timestamp)>new Date(Date.now()-60*60*1000)).length;if(lastHour>5){indicators.push({severity:'high',icon:'üìà',text:`Activity spike: ${lastHour} scans in last hour`});}// Service enumeration\nconst serviceScans=nmapEvents.filter(e=>{var _e$scan_type3,_e$scan_type4;return((_e$scan_type3=e.scan_type)===null||_e$scan_type3===void 0?void 0:_e$scan_type3.toLowerCase().includes('service'))||((_e$scan_type4=e.scan_type)===null||_e$scan_type4===void 0?void 0:_e$scan_type4.toLowerCase().includes('version'));}).length;if(serviceScans>0){indicators.push({severity:'medium',icon:'üîß',text:`${serviceScans} service enumeration attempt(s)`});}// Default indicator if no specific threats\nif(indicators.length===0){indicators.push({severity:'info',icon:'‚ÑπÔ∏è',text:'Basic reconnaissance activity detected'});}return indicators.slice(0,3);// Limit to 3 indicators\n};export default NmapDetectionWidget;","map":{"version":3,"names":["React","Bar","Doughnut","jsx","_jsx","jsxs","_jsxs","NmapDetectionWidget","_ref","threatStats","combinedEvents","loading","className","children","nmapEvents","filter","event","_event$event_type","_event$user_agent","event_type","includes","scan_type","user_agent","toLowerCase","length","scanTypes","scanMethods","timeDistribution","sourceIPs","forEach","scanType","method","eventTime","Date","timestamp","hour","getHours","source_ip","scanTypesData","labels","Object","keys","map","type","replace","l","toUpperCase","datasets","data","values","backgroundColor","borderWidth","borderColor","hours","Array","from","_","i","timeData","h","label","chartOptions","responsive","maintainAspectRatio","plugins","legend","display","scales","x","ticks","color","maxTicksLimit","grid","y","doughnutOptions","position","usePointStyle","pointStyle","padding","font","size","totalScans","uniqueIPs","avgScansPerIP","toFixed","topScanner","entries","sort","_ref2","_ref3","a","b","oneHourAgo","now","recentScans","getThreatLevel","level","text","threatLevel","style","options","slice","_ref4","count","getThreatIndicators","indicator","index","severity","icon","indicators","aggressiveScans","e","_e$scan_type","push","reconScans","_e$scan_type2","Set","lastHour","serviceScans","_e$scan_type3","_e$scan_type4"],"sources":["/home/demon/distributed-architecture/central-infrastructure/frontend/src/components/NmapDetectionWidget.js"],"sourcesContent":["import React from 'react';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport './NmapDetectionWidget.css';\n\nconst NmapDetectionWidget = ({ threatStats, combinedEvents = [], loading = false }) => {\n  if (loading) {\n    return (\n      <div className=\"nmap-widget loading\">\n        <div className=\"widget-header\">\n          <h3>Nmap Detection Analysis</h3>\n        </div>\n        <div className=\"loading-content\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading Nmap data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Filter Nmap-related events\n  const nmapEvents = combinedEvents.filter(event => \n    event.event_type?.includes('nmap') || \n    event.scan_type ||\n    event.user_agent?.toLowerCase().includes('nmap')\n  );\n\n  if (nmapEvents.length === 0) {\n    return (\n      <div className=\"nmap-widget empty\">\n        <div className=\"widget-header\">\n          <h3>Nmap Detection Analysis</h3>\n        </div>\n        <div className=\"empty-state\">\n          <span className=\"empty-icon\">üîç</span>\n          <p>No Nmap scans detected</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Analyze scan types\n  const scanTypes = {};\n  const scanMethods = {};\n  const timeDistribution = {};\n  const sourceIPs = {};\n\n  nmapEvents.forEach(event => {\n    // Scan types\n    const scanType = event.scan_type || 'unknown';\n    scanTypes[scanType] = (scanTypes[scanType] || 0) + 1;\n\n    // Scan methods (from event_type)\n    const method = event.event_type || 'unknown';\n    scanMethods[method] = (scanMethods[method] || 0) + 1;\n\n    // Time distribution (last 24 hours)\n    const eventTime = new Date(event.timestamp);\n    const hour = eventTime.getHours();\n    timeDistribution[hour] = (timeDistribution[hour] || 0) + 1;\n\n    // Source IPs\n    if (event.source_ip) {\n      sourceIPs[event.source_ip] = (sourceIPs[event.source_ip] || 0) + 1;\n    }\n  });\n\n  // Prepare scan types chart data\n  const scanTypesData = {\n    labels: Object.keys(scanTypes).map(type => \n      type.replace(/[-_]/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())\n    ),\n    datasets: [{\n      data: Object.values(scanTypes),\n      backgroundColor: [\n        '#dc3545', // Red\n        '#ffc107', // Yellow\n        '#28a745', // Green\n        '#17a2b8', // Cyan\n        '#6f42c1', // Purple\n        '#fd7e14'  // Orange\n      ],\n      borderWidth: 2,\n      borderColor: '#fff'\n    }]\n  };\n\n  // Prepare time distribution chart data\n  const hours = Array.from({length: 24}, (_, i) => i);\n  const timeData = {\n    labels: hours.map(h => `${h}:00`),\n    datasets: [{\n      label: 'Nmap Scans',\n      data: hours.map(h => timeDistribution[h] || 0),\n      backgroundColor: 'rgba(220, 53, 69, 0.8)',\n      borderColor: '#dc3545',\n      borderWidth: 1\n    }]\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      }\n    },\n    scales: {\n      x: {\n        ticks: { \n          color: '#64748b',\n          maxTicksLimit: 12\n        },\n        grid: { color: '#334155' }\n      },\n      y: {\n        ticks: { color: '#64748b' },\n        grid: { color: '#334155' }\n      }\n    }\n  };\n\n  const doughnutOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          color: '#cbd5e1',\n          usePointStyle: true,\n          pointStyle: 'circle',\n          padding: 10,\n          font: { size: 11 }\n        }\n      }\n    }\n  };\n\n  // Calculate statistics\n  const totalScans = nmapEvents.length;\n  const uniqueIPs = Object.keys(sourceIPs).length;\n  const avgScansPerIP = (totalScans / uniqueIPs).toFixed(1);\n  const topScanner = Object.entries(sourceIPs)\n    .sort(([,a], [,b]) => b - a)[0];\n\n  // Recent activity (last hour)\n  const oneHourAgo = new Date(Date.now() - 60 * 60 * 1000);\n  const recentScans = nmapEvents.filter(event => \n    new Date(event.timestamp) > oneHourAgo\n  ).length;\n\n  // Threat level assessment\n  const getThreatLevel = () => {\n    if (totalScans > 50) return { level: 'high', color: '#dc3545', text: 'High' };\n    if (totalScans > 20) return { level: 'medium', color: '#ffc107', text: 'Medium' };\n    if (totalScans > 5) return { level: 'low', color: '#28a745', text: 'Low' };\n    return { level: 'minimal', color: '#6c757d', text: 'Minimal' };\n  };\n\n  const threatLevel = getThreatLevel();\n\n  return (\n    <div className=\"nmap-widget\">\n      <div className=\"widget-header\">\n        <h3>Nmap Detection Analysis</h3>\n        <div className=\"widget-stats\">\n          <span className={`threat-level ${threatLevel.level}`} style={{color: threatLevel.color}}>\n            {threatLevel.text} Activity\n          </span>\n          <span className=\"total-scans\">{totalScans} scans</span>\n        </div>\n      </div>\n\n      <div className=\"widget-content\">\n        {/* Top Section: Summary Statistics */}\n        <div className=\"summary-section\">\n          <h4>Scan Overview</h4>\n          <div className=\"summary-stats\">\n            <div className=\"stat-card primary\">\n              <div className=\"stat-value\">{totalScans}</div>\n              <div className=\"stat-label\">Total Scans</div>\n            </div>\n            <div className=\"stat-card\">\n              <div className=\"stat-value\">{uniqueIPs}</div>\n              <div className=\"stat-label\">Unique IPs</div>\n            </div>\n            <div className=\"stat-card\">\n              <div className=\"stat-value\">{avgScansPerIP}</div>\n              <div className=\"stat-label\">Avg/IP</div>\n            </div>\n            <div className=\"stat-card\">\n              <div className=\"stat-value\">{recentScans}</div>\n              <div className=\"stat-label\">Last Hour</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Middle Section: Charts */}\n        <div className=\"charts-section\">\n          <div className=\"chart-item\">\n            <h4>Scan Types Distribution</h4>\n            <div className=\"chart-container small\">\n              <Doughnut data={scanTypesData} options={doughnutOptions} />\n            </div>\n          </div>\n\n          <div className=\"chart-item\">\n            <h4>24-Hour Activity Timeline</h4>\n            <div className=\"chart-container\">\n              <Bar data={timeData} options={chartOptions} />\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom Section: Details and Insights */}\n        <div className=\"details-section\">\n          <div className=\"detail-item\">\n            <h4>Top Scanner</h4>\n            {topScanner ? (\n              <div className=\"scanner-info\">\n                <span className=\"scanner-ip\">{topScanner[0]}</span>\n                <span className=\"scanner-count\">{topScanner[1]} scans</span>\n              </div>\n            ) : (\n              <span className=\"no-data\">No data</span>\n            )}\n          </div>\n\n          <div className=\"detail-item\">\n            <h4>Detection Signatures</h4>\n            <div className=\"signatures-list\">\n              {Object.entries(scanTypes).slice(0, 3).map(([type, count]) => (\n                <div key={type} className=\"signature-item\">\n                  <span className=\"signature-name\">\n                    {type.replace(/[-_]/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\n                  </span>\n                  <span className=\"signature-count\">{count}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"detail-item\">\n            <h4>Threat Indicators</h4>\n            <div className=\"indicators-list\">\n              {getThreatIndicators(nmapEvents, threatLevel.level).map((indicator, index) => (\n                <div key={index} className={`indicator-item ${indicator.severity}`}>\n                  <span className=\"indicator-icon\">{indicator.icon}</span>\n                  <span className=\"indicator-text\">{indicator.text}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Generate threat indicators based on Nmap activity\nconst getThreatIndicators = (nmapEvents, threatLevel) => {\n  const indicators = [];\n  \n  // Aggressive scans\n  const aggressiveScans = nmapEvents.filter(e => \n    e.event_type === 'nmap_aggressive' || \n    e.scan_type?.toLowerCase().includes('aggressive')\n  ).length;\n  \n  if (aggressiveScans > 0) {\n    indicators.push({\n      severity: 'high',\n      icon: '‚ö†Ô∏è',\n      text: `${aggressiveScans} aggressive scan(s) detected`\n    });\n  }\n\n  // Reconnaissance patterns\n  const reconScans = nmapEvents.filter(e => \n    e.event_type === 'nmap_recon' || \n    e.scan_type?.toLowerCase().includes('recon')\n  ).length;\n  \n  if (reconScans > 10) {\n    indicators.push({\n      severity: 'medium',\n      icon: 'üîç',\n      text: `High reconnaissance activity (${reconScans} scans)`\n    });\n  }\n\n  // Repeated targeting\n  const uniqueIPs = [...new Set(nmapEvents.map(e => e.source_ip))];\n  if (nmapEvents.length / uniqueIPs.length > 5) {\n    indicators.push({\n      severity: 'medium',\n      icon: 'üéØ',\n      text: 'Repeated targeting from same sources'\n    });\n  }\n\n  // Recent activity spike\n  const lastHour = nmapEvents.filter(e => \n    new Date(e.timestamp) > new Date(Date.now() - 60 * 60 * 1000)\n  ).length;\n  \n  if (lastHour > 5) {\n    indicators.push({\n      severity: 'high',\n      icon: 'üìà',\n      text: `Activity spike: ${lastHour} scans in last hour`\n    });\n  }\n\n  // Service enumeration\n  const serviceScans = nmapEvents.filter(e => \n    e.scan_type?.toLowerCase().includes('service') ||\n    e.scan_type?.toLowerCase().includes('version')\n  ).length;\n  \n  if (serviceScans > 0) {\n    indicators.push({\n      severity: 'medium',\n      icon: 'üîß',\n      text: `${serviceScans} service enumeration attempt(s)`\n    });\n  }\n\n  // Default indicator if no specific threats\n  if (indicators.length === 0) {\n    indicators.push({\n      severity: 'info',\n      icon: '‚ÑπÔ∏è',\n      text: 'Basic reconnaissance activity detected'\n    });\n  }\n\n  return indicators.slice(0, 3); // Limit to 3 indicators\n};\n\nexport default NmapDetectionWidget;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}