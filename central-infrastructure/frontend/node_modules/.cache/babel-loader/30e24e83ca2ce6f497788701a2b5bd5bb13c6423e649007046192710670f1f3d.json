{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{useLocation,useNavigate}from'react-router-dom';import ThreatFilters from'../components/threats/ThreatFilters';import ThreatTable from'../components/threats/ThreatTable';import ThreatTabs from'../components/threats/ThreatTabs';import EnhancedFilters from'../components/EnhancedFilters';import{fetchThreatFeed,fetchScanAlerts,fetchDeceptionActivity,fetchEvents,fetchCombinedThreatData}from'../api';import{combineAndSortEvents,calculateThreatStats,normalizeEvent,exportEventsToCSV}from'../utils/dataProcessor';import'./Threats.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Threats=()=>{const location=useLocation();const navigate=useNavigate();// Local state for controls (previously from GlobalControls)\nconst[timeRange,setTimeRange]=useState('24h');const[selectedClient,setSelectedClient]=useState('all');const[lastUpdated,setLastUpdated]=useState(new Date());const[activeTab,setActiveTab]=useState('alerts');const[threats,setThreats]=useState([]);const[allEvents,setAllEvents]=useState([]);const[filteredEvents,setFilteredEvents]=useState([]);const[threatStats,setThreatStats]=useState({});const[loading,setLoading]=useState(true);const[useEnhancedFilters,setUseEnhancedFilters]=useState(true);const[filters,setFilters]=useState({severity:'all',platform:'all',status:'all',search:''});const[savedViews,setSavedViews]=useState([{name:'Critical Threats',filters:{severity:'critical'}},{name:'Network Attacks',filters:{platform:'network'}},{name:'Deception Engine Activity',filters:{platform:'honeypot'}}]);const loadThreats=useCallback(async()=>{try{setLoading(true);// Use enhanced multi-collection data fetching\n// Convert timeRange string to hours number for API compatibility\nconst hours=timeRange==='1h'?1:timeRange==='6h'?6:timeRange==='12h'?12:timeRange==='24h'?24:timeRange==='7d'?168:24;const combinedData=await fetchCombinedThreatData({limit:500,hours:hours});if(combinedData&&(combinedData.scanAlerts||combinedData.deceptionActivity)){// Combine and normalize all events\nconst allEventsData=combineAndSortEvents({scan_alerts:combinedData.scanAlerts||[],deception_detection:combinedData.deceptionActivity||[]});setAllEvents(allEventsData);setFilteredEvents(allEventsData);setThreatStats(calculateThreatStats(allEventsData));// Convert to legacy threat format for backward compatibility\nconst legacyThreats=allEventsData.map(event=>({...event,id:event.id||`event-${Math.random()}`,type:event.collection==='scan_alerts'?'scan_detection':'deception_engine',platform:event.collection==='scan_alerts'?'Scan_Detection_Engine':'Deception_Engine',severity:event.severity||'medium',timestamp:new Date(event.timestamp||Date.now()),source:event.source_ip,target:event.dest_port||event.honeypot_id,status:'new',message:event.message,alertType:event.note_type||event.event_type}));setThreats(legacyThreats);// Log any errors from data fetching\nif(combinedData.errors&&combinedData.errors.length>0){console.warn('Data fetching warnings:',combinedData.errors);}}else{// Fallback to individual API calls\nconsole.warn('Using fallback data fetching method');const[threatData,scanData,deceptionData]=await Promise.all([fetchThreatFeed(500).catch(()=>[]),fetchScanAlerts({hours:hours,limit:200}).catch(()=>[]),fetchDeceptionActivity({hours:hours,limit:200}).catch(()=>[])]);// Normalize and combine data\nconst normalizedEvents=[...(Array.isArray(threatData)?threatData:[]).map(t=>normalizeEvent(t,'scan_alerts')),...(Array.isArray(scanData)?scanData:[]).map(z=>normalizeEvent(z,'scan_alerts')),...(Array.isArray(deceptionData)?deceptionData:[]).map(e=>normalizeEvent(e,'deception_detection'))];setAllEvents(normalizedEvents);setFilteredEvents(normalizedEvents);setThreatStats(calculateThreatStats(normalizedEvents));// Legacy format\nconst legacyThreats=normalizedEvents.map(event=>({...event,type:event.collection==='scan_alerts'?'scan_detection':'deception_engine',platform:event.collection==='scan_alerts'?'Scan_Detection_Engine':'Deception_Engine',timestamp:new Date(event.timestamp||Date.now()),source:event.source_ip,target:event.dest_port||event.honeypot_id,status:'new',message:event.message,alertType:event.note_type||event.event_type}));setThreats(legacyThreats);}}catch(error){console.error('Error loading threats:',error);}finally{setLoading(false);setLastUpdated(new Date());}},[timeRange]);useEffect(()=>{loadThreats();},[timeRange,selectedClient]);// Handle tab changes from URL\nuseEffect(()=>{const path=location.pathname;if(path.includes('/alerts'))setActiveTab('alerts');else if(path.includes('/iocs'))setActiveTab('iocs');else if(path.includes('/ttps'))setActiveTab('ttps');else if(path.includes('/campaigns'))setActiveTab('campaigns');},[location.pathname]);const handleTabChange=tab=>{setActiveTab(tab);navigate(`/threats/${tab}`);};const handleFilterChange=newFilters=>{setFilters({...filters,...newFilters});};const applyFilters=items=>{return items.filter(item=>{if(filters.severity!=='all'&&item.severity!==filters.severity)return false;if(filters.platform!=='all'&&item.platform!==filters.platform)return false;if(filters.status!=='all'&&item.status!==filters.status)return false;if(filters.search){const search=filters.search.toLowerCase();return item.source&&item.source.toLowerCase().includes(search)||item.target&&item.target.toLowerCase().includes(search)||item.message&&item.message.toLowerCase().includes(search)||item.alertType&&item.alertType.toLowerCase().includes(search);}return true;});};const filteredThreats=applyFilters(threats);const handleThreatClick=threat=>{navigate(`/threats/alerts/${threat.id}`);};const handleExport=()=>{try{const dataToExport=useEnhancedFilters?filteredEvents:applyFilters(threats);const csvContent=exportEventsToCSV(dataToExport);// Create and download CSV file\nconst blob=new Blob([csvContent],{type:'text/csv;charset=utf-8;'});const link=document.createElement('a');const url=URL.createObjectURL(blob);link.setAttribute('href',url);link.setAttribute('download',`threats_export_${new Date().toISOString().slice(0,10)}.csv`);link.style.visibility='hidden';document.body.appendChild(link);link.click();document.body.removeChild(link);}catch(error){console.error('Error exporting threats:',error);}};// Enhanced filter change handler\nconst handleEnhancedFilterChange=useCallback(filtered=>{setFilteredEvents(filtered);},[]);const handleSaveView=name=>{setSavedViews([...savedViews,{name,filters:{...filters}}]);};const handleLoadView=view=>{setFilters({...filters,...view.filters});};return/*#__PURE__*/_jsxs(\"div\",{className:\"threats-page\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-content\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Threat Intelligence\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Monitor, analyze, and respond to security threats\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{className:`btn ${useEnhancedFilters?'btn-primary':'btn-secondary'}`,onClick:()=>setUseEnhancedFilters(!useEnhancedFilters),children:[\"\\uD83D\\uDD27 \",useEnhancedFilters?'Enhanced':'Basic',\" Filters\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-secondary\",onClick:handleExport,children:[\"\\uD83D\\uDCCA Export (\",useEnhancedFilters?filteredEvents.length:applyFilters(threats).length,\")\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:loadThreats,children:\"\\uD83D\\uDD04 Refresh\"})]})]}),/*#__PURE__*/_jsx(ThreatTabs,{activeTab:activeTab,onTabChange:handleTabChange}),/*#__PURE__*/_jsxs(\"div\",{className:\"threats-content\",children:[useEnhancedFilters?/*#__PURE__*/_jsx(EnhancedFilters,{events:allEvents,onFilterChange:handleEnhancedFilterChange,loading:loading,className:\"threats-enhanced-filters\"}):/*#__PURE__*/_jsx(ThreatFilters,{filters:filters,onFilterChange:handleFilterChange,savedViews:savedViews,onSaveView:handleSaveView,onLoadView:handleLoadView,resultCount:filteredThreats.length}),/*#__PURE__*/_jsxs(\"div\",{className:\"threats-main\",children:[activeTab==='alerts'&&/*#__PURE__*/_jsx(ThreatTable,{threats:useEnhancedFilters?filteredEvents.map(event=>({...event,id:event.id||`event-${Math.random()}`,type:event.collection==='scan_alerts'?'scan_detection':'deception_engine',platform:event.collection==='scan_alerts'?'Scan_Detection_Engine':'Deception_Engine',severity:event.severity||'medium',timestamp:new Date(event.timestamp||Date.now()),source:event.source_ip,target:event.dest_port||event.honeypot_id,status:'new',message:event.message,alertType:event.note_type||event.event_type})):filteredThreats,loading:loading,onThreatClick:handleThreatClick}),activeTab==='iocs'&&/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"IOC Analysis\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Indicators of Compromise extracted from threat data\"})]}),activeTab==='ttps'&&/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"TTP Analysis\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Tactics, Techniques, and Procedures identified\"})]}),activeTab==='campaigns'&&/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Campaign Analysis\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Correlated attack campaigns and threat actors\"})]})]})]})]});};export default Threats;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useLocation","useNavigate","ThreatFilters","ThreatTable","ThreatTabs","EnhancedFilters","fetchThreatFeed","fetchScanAlerts","fetchDeceptionActivity","fetchEvents","fetchCombinedThreatData","combineAndSortEvents","calculateThreatStats","normalizeEvent","exportEventsToCSV","jsx","_jsx","jsxs","_jsxs","Threats","location","navigate","timeRange","setTimeRange","selectedClient","setSelectedClient","lastUpdated","setLastUpdated","Date","activeTab","setActiveTab","threats","setThreats","allEvents","setAllEvents","filteredEvents","setFilteredEvents","threatStats","setThreatStats","loading","setLoading","useEnhancedFilters","setUseEnhancedFilters","filters","setFilters","severity","platform","status","search","savedViews","setSavedViews","name","loadThreats","hours","combinedData","limit","scanAlerts","deceptionActivity","allEventsData","scan_alerts","deception_detection","legacyThreats","map","event","id","Math","random","type","collection","timestamp","now","source","source_ip","target","dest_port","honeypot_id","message","alertType","note_type","event_type","errors","length","console","warn","threatData","scanData","deceptionData","Promise","all","catch","normalizedEvents","Array","isArray","t","z","e","error","path","pathname","includes","handleTabChange","tab","handleFilterChange","newFilters","applyFilters","items","filter","item","toLowerCase","filteredThreats","handleThreatClick","threat","handleExport","dataToExport","csvContent","blob","Blob","link","document","createElement","url","URL","createObjectURL","setAttribute","toISOString","slice","style","visibility","body","appendChild","click","removeChild","handleEnhancedFilterChange","filtered","handleSaveView","handleLoadView","view","className","children","onClick","onTabChange","events","onFilterChange","onSaveView","onLoadView","resultCount","onThreatClick"],"sources":["/home/demon/distributed-architecture/central-infrastructure/frontend/src/pages/Threats.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport ThreatFilters from '../components/threats/ThreatFilters';\nimport ThreatTable from '../components/threats/ThreatTable';\nimport ThreatTabs from '../components/threats/ThreatTabs';\nimport EnhancedFilters from '../components/EnhancedFilters';\nimport { \n  fetchThreatFeed, \n  fetchScanAlerts,\n  fetchDeceptionActivity,\n  fetchEvents,\n  fetchCombinedThreatData\n} from '../api';\nimport { \n  combineAndSortEvents, \n  calculateThreatStats,\n  normalizeEvent,\n  exportEventsToCSV\n} from '../utils/dataProcessor';\nimport './Threats.css';\n\nconst Threats = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  \n  // Local state for controls (previously from GlobalControls)\n  const [timeRange, setTimeRange] = useState('24h');\n  const [selectedClient, setSelectedClient] = useState('all');\n  const [lastUpdated, setLastUpdated] = useState(new Date());\n  \n  const [activeTab, setActiveTab] = useState('alerts');\n  const [threats, setThreats] = useState([]);\n  const [allEvents, setAllEvents] = useState([]);\n  const [filteredEvents, setFilteredEvents] = useState([]);\n  const [threatStats, setThreatStats] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [useEnhancedFilters, setUseEnhancedFilters] = useState(true);\n  const [filters, setFilters] = useState({\n    severity: 'all',\n    platform: 'all',\n    status: 'all',\n    search: ''\n  });\n  const [savedViews, setSavedViews] = useState([\n    { name: 'Critical Threats', filters: { severity: 'critical' } },\n    { name: 'Network Attacks', filters: { platform: 'network' } },\n    { name: 'Deception Engine Activity', filters: { platform: 'honeypot' } }\n  ]);\n\n  const loadThreats = useCallback(async () => {\n    try {\n      setLoading(true);\n      \n      // Use enhanced multi-collection data fetching\n      // Convert timeRange string to hours number for API compatibility\n      const hours = timeRange === '1h' ? 1 : \n                   timeRange === '6h' ? 6 : \n                   timeRange === '12h' ? 12 : \n                   timeRange === '24h' ? 24 : \n                   timeRange === '7d' ? 168 : 24;\n      \n      const combinedData = await fetchCombinedThreatData({ \n        limit: 500,\n        hours: hours \n      });\n\n      if (combinedData && (combinedData.scanAlerts || combinedData.deceptionActivity)) {\n        // Combine and normalize all events\n        const allEventsData = combineAndSortEvents({\n          scan_alerts: combinedData.scanAlerts || [],\n          deception_detection: combinedData.deceptionActivity || []\n        });\n\n        setAllEvents(allEventsData);\n        setFilteredEvents(allEventsData);\n        setThreatStats(calculateThreatStats(allEventsData));\n\n        // Convert to legacy threat format for backward compatibility\n        const legacyThreats = allEventsData.map(event => ({\n          ...event,\n          id: event.id || `event-${Math.random()}`,\n          type: event.collection === 'scan_alerts' ? 'scan_detection' : 'deception_engine',\n          platform: event.collection === 'scan_alerts' ? 'Scan_Detection_Engine' : 'Deception_Engine',\n          severity: event.severity || 'medium',\n          timestamp: new Date(event.timestamp || Date.now()),\n          source: event.source_ip,\n          target: event.dest_port || event.honeypot_id,\n          status: 'new',\n          message: event.message,\n          alertType: event.note_type || event.event_type\n        }));\n\n        setThreats(legacyThreats);\n\n        // Log any errors from data fetching\n        if (combinedData.errors && combinedData.errors.length > 0) {\n          console.warn('Data fetching warnings:', combinedData.errors);\n        }\n      } else {\n        // Fallback to individual API calls\n        console.warn('Using fallback data fetching method');\n        const [threatData, scanData, deceptionData] = await Promise.all([\n          fetchThreatFeed(500).catch(() => []),\n          fetchScanAlerts({ hours: hours, limit: 200 }).catch(() => []),\n          fetchDeceptionActivity({ hours: hours, limit: 200 }).catch(() => [])\n        ]);\n\n        // Normalize and combine data\n        const normalizedEvents = [\n          ...(Array.isArray(threatData) ? threatData : []).map(t => normalizeEvent(t, 'scan_alerts')),\n          ...(Array.isArray(scanData) ? scanData : []).map(z => normalizeEvent(z, 'scan_alerts')),\n          ...(Array.isArray(deceptionData) ? deceptionData : []).map(e => normalizeEvent(e, 'deception_detection'))\n        ];\n\n        setAllEvents(normalizedEvents);\n        setFilteredEvents(normalizedEvents);\n        setThreatStats(calculateThreatStats(normalizedEvents));\n\n        // Legacy format\n        const legacyThreats = normalizedEvents.map(event => ({\n          ...event,\n          type: event.collection === 'scan_alerts' ? 'scan_detection' : 'deception_engine',\n          platform: event.collection === 'scan_alerts' ? 'Scan_Detection_Engine' : 'Deception_Engine',\n          timestamp: new Date(event.timestamp || Date.now()),\n          source: event.source_ip,\n          target: event.dest_port || event.honeypot_id,\n          status: 'new',\n          message: event.message,\n          alertType: event.note_type || event.event_type\n        }));\n\n        setThreats(legacyThreats);\n      }\n    } catch (error) {\n      console.error('Error loading threats:', error);\n    } finally {\n      setLoading(false);\n      setLastUpdated(new Date());\n    }\n  }, [timeRange]);\n\n  useEffect(() => {\n    loadThreats();\n  }, [timeRange, selectedClient]);\n\n  // Handle tab changes from URL\n  useEffect(() => {\n    const path = location.pathname;\n    if (path.includes('/alerts')) setActiveTab('alerts');\n    else if (path.includes('/iocs')) setActiveTab('iocs');\n    else if (path.includes('/ttps')) setActiveTab('ttps');\n    else if (path.includes('/campaigns')) setActiveTab('campaigns');\n  }, [location.pathname]);\n\n  const handleTabChange = (tab) => {\n    setActiveTab(tab);\n    navigate(`/threats/${tab}`);\n  };\n\n  const handleFilterChange = (newFilters) => {\n    setFilters({ ...filters, ...newFilters });\n  };\n\n  const applyFilters = (items) => {\n    return items.filter(item => {\n      if (filters.severity !== 'all' && item.severity !== filters.severity) return false;\n      if (filters.platform !== 'all' && item.platform !== filters.platform) return false;\n      if (filters.status !== 'all' && item.status !== filters.status) return false;\n      if (filters.search) {\n        const search = filters.search.toLowerCase();\n        return (\n          (item.source && item.source.toLowerCase().includes(search)) ||\n          (item.target && item.target.toLowerCase().includes(search)) ||\n          (item.message && item.message.toLowerCase().includes(search)) ||\n          (item.alertType && item.alertType.toLowerCase().includes(search))\n        );\n      }\n      return true;\n    });\n  };\n\n  const filteredThreats = applyFilters(threats);\n\n  const handleThreatClick = (threat) => {\n    navigate(`/threats/alerts/${threat.id}`);\n  };\n\n  const handleExport = () => {\n    try {\n      const dataToExport = useEnhancedFilters ? filteredEvents : applyFilters(threats);\n      const csvContent = exportEventsToCSV(dataToExport);\n      \n      // Create and download CSV file\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n      const link = document.createElement('a');\n      const url = URL.createObjectURL(blob);\n      link.setAttribute('href', url);\n      link.setAttribute('download', `threats_export_${new Date().toISOString().slice(0, 10)}.csv`);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (error) {\n      console.error('Error exporting threats:', error);\n    }\n  };\n\n  // Enhanced filter change handler\n  const handleEnhancedFilterChange = useCallback((filtered) => {\n    setFilteredEvents(filtered);\n  }, []);\n\n  const handleSaveView = (name) => {\n    setSavedViews([...savedViews, { name, filters: { ...filters } }]);\n  };\n\n  const handleLoadView = (view) => {\n    setFilters({ ...filters, ...view.filters });\n  };\n\n  return (\n    <div className=\"threats-page\">\n      <div className=\"page-header\">\n        <div className=\"header-content\">\n          <h1>Threat Intelligence</h1>\n          <p>Monitor, analyze, and respond to security threats</p>\n        </div>\n        <div className=\"header-actions\">\n          <button \n            className={`btn ${useEnhancedFilters ? 'btn-primary' : 'btn-secondary'}`}\n            onClick={() => setUseEnhancedFilters(!useEnhancedFilters)}\n          >\n            🔧 {useEnhancedFilters ? 'Enhanced' : 'Basic'} Filters\n          </button>\n          <button className=\"btn btn-secondary\" onClick={handleExport}>\n            📊 Export ({useEnhancedFilters ? filteredEvents.length : applyFilters(threats).length})\n          </button>\n          <button className=\"btn btn-primary\" onClick={loadThreats}>\n            🔄 Refresh\n          </button>\n        </div>\n      </div>\n\n      <ThreatTabs activeTab={activeTab} onTabChange={handleTabChange} />\n\n      <div className=\"threats-content\">\n        {useEnhancedFilters ? (\n          <EnhancedFilters\n            events={allEvents}\n            onFilterChange={handleEnhancedFilterChange}\n            loading={loading}\n            className=\"threats-enhanced-filters\"\n          />\n        ) : (\n          <ThreatFilters\n            filters={filters}\n            onFilterChange={handleFilterChange}\n            savedViews={savedViews}\n            onSaveView={handleSaveView}\n            onLoadView={handleLoadView}\n            resultCount={filteredThreats.length}\n          />\n        )}\n\n        <div className=\"threats-main\">\n          {activeTab === 'alerts' && (\n            <ThreatTable\n              threats={useEnhancedFilters ? filteredEvents.map(event => ({\n                ...event,\n                id: event.id || `event-${Math.random()}`,\n                type: event.collection === 'scan_alerts' ? 'scan_detection' : 'deception_engine',\n                platform: event.collection === 'scan_alerts' ? 'Scan_Detection_Engine' : 'Deception_Engine',\n                severity: event.severity || 'medium',\n                timestamp: new Date(event.timestamp || Date.now()),\n                source: event.source_ip,\n                target: event.dest_port || event.honeypot_id,\n                status: 'new',\n                message: event.message,\n                alertType: event.note_type || event.event_type\n              })) : filteredThreats}\n              loading={loading}\n              onThreatClick={handleThreatClick}\n            />\n          )}\n          \n          {activeTab === 'iocs' && (\n            <div className=\"tab-content\">\n              <h3>IOC Analysis</h3>\n              <p>Indicators of Compromise extracted from threat data</p>\n            </div>\n          )}\n          \n          {activeTab === 'ttps' && (\n            <div className=\"tab-content\">\n              <h3>TTP Analysis</h3>\n              <p>Tactics, Techniques, and Procedures identified</p>\n            </div>\n          )}\n          \n          {activeTab === 'campaigns' && (\n            <div className=\"tab-content\">\n              <h3>Campaign Analysis</h3>\n              <p>Correlated attack campaigns and threat actors</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Threats;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}