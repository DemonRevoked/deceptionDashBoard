{"ast":null,"code":"import axios from'axios';// Smart API base URL detection for distributed architecture\nconst getApiBaseUrl=()=>{if(process.env.NODE_ENV==='development'){console.log('🔧 getApiBaseUrl called with:',{hasWindow:typeof window!=='undefined',hasLocation:typeof window!=='undefined'&&window.location,envApiUrl:process.env.REACT_APP_API_URL,envWsUrl:process.env.REACT_APP_WS_URL});}// If we're in a browser environment, dynamically determine from current page location\nif(typeof window!=='undefined'&&window.location){// Use environment variable if set, otherwise dynamically determine from current location\nif(process.env.REACT_APP_API_URL&&process.env.REACT_APP_API_URL!=='undefined'){console.log('🔧 Using environment variable for API URL:',process.env.REACT_APP_API_URL);return process.env.REACT_APP_API_URL;}console.log('🔧 No environment variable set, using dynamic detection');// Get current host and construct backend URL\nconst{protocol,hostname}=window.location;// Special handling for distributed architecture\n// If accessing from client VM (10.0.44.3), use central infrastructure IP (10.0.44.32)\nlet targetHost=hostname;if(hostname==='10.0.44.3'){targetHost='10.0.44.32';console.log('🔧 Client VM detected, routing to central infrastructure:',targetHost);}const dynamicUrl=`${protocol}//${targetHost}:5000/api`;console.log('🔧 Dynamic API URL detected:',{currentLocation:window.location.href,protocol,hostname,targetHost,constructedUrl:dynamicUrl,architecture:'distributed'});return dynamicUrl;}// Fallback for SSR or when window.location is not available\nconst fallbackUrl=process.env.REACT_APP_API_URL||'http://backend:5000/api';console.log('🔧 Using fallback API URL:',fallbackUrl);return fallbackUrl;};// Initialize API_BASE_URL\nlet API_BASE_URL=getApiBaseUrl();// Function to update API_BASE_URL dynamically (useful for debugging)\nexport const updateApiBaseUrl=()=>{API_BASE_URL=getApiBaseUrl();console.log('🔧 Updated API_BASE_URL to:',API_BASE_URL);// Update axios baseURL\napiClient.defaults.baseURL=API_BASE_URL;return API_BASE_URL;};// Function to get current API base URL\nexport const getCurrentApiBaseUrl=()=>{return API_BASE_URL;};// Function to force refresh API configuration (useful when page loads)\nexport const refreshApiConfiguration=()=>{console.log('🔧 Refreshing API configuration...');return updateApiBaseUrl();};const apiClient=axios.create({baseURL:API_BASE_URL,timeout:15000,// Increased timeout for health checks that include HoneypotManager\nheaders:{'Content-Type':'application/json'}});// Log the initial configuration\nconsole.log('🔧 Axios client created with baseURL:',API_BASE_URL);// Add retry logic for container network issues\napiClient.interceptors.response.use(response=>response,async error=>{var _error$response;const originalRequest=error.config;// Retry for network errors or 5xx server errors\nif(!originalRequest._retry&&(error.code==='ECONNABORTED'||((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)>=500||error.code==='NETWORK_ERROR')){originalRequest._retry=true;console.log('Retrying request due to network error...');// Wait 1 second before retry\nawait new Promise(resolve=>setTimeout(resolve,1000));return apiClient.request(originalRequest);}return Promise.reject(error);});// Set auth token from localStorage\nconst token=localStorage.getItem('authToken');if(token){apiClient.defaults.headers.common['Authorization']=`Bearer ${token}`;}export const setAuthToken=token=>{if(token){apiClient.defaults.headers.common['Authorization']=`Bearer ${token}`;localStorage.setItem('authToken',token);}else{delete apiClient.defaults.headers.common['Authorization'];localStorage.removeItem('authToken');}};// --- Health Check ---\nexport const checkHealth=async()=>{const response=await apiClient.get('/health');return response.data;};export const checkQuickHealth=async()=>{const response=await apiClient.get('/health/quick');return response.data;};// --- Auth ---\nexport const login=async(username,password)=>{const response=await apiClient.post('/auth/login',{username,password});return response.data;};// --- Honeypots ---\nexport const fetchHoneypots=async()=>{const response=await apiClient.get('/honeypots');return response.data;};export const startHoneypot=async id=>{const response=await apiClient.post(`/honeypots/control/${id}/start`);return response.data;};export const stopHoneypot=async id=>{const response=await apiClient.post(`/honeypots/control/${id}/stop`);return response.data;};export const fetchHoneypotStatuses=async()=>{const response=await apiClient.get('/honeypots/control/status');return response.data;};// --- Plugin Management ---\nexport const fetchHoneypotPlugins=async id=>{const response=await apiClient.get(`/honeypots/${id}/plugins`);return response.data;};export const updateHoneypotPlugins=async(id,config)=>{const response=await apiClient.put(`/honeypots/${id}/plugins`,config);return response.data;};export const rebuildHoneypot=async id=>{const response=await apiClient.post(`/honeypots/${id}/rebuild`);return response.data;};// --- Events (Primary Collection as per Connection.md) ---\nexport const fetchEvents=async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};console.warn('fetchEvents is deprecated - use fetchCombinedThreatData instead');// Redirect to the new function\nconst data=await fetchCombinedThreatData(24,params);return data.scanAlerts||[];};export const fetchEventsStats=async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};console.warn('fetchEventsStats is deprecated - use fetchScanAlertsStats instead');// Redirect to the new function\nreturn await fetchScanAlertsStats(params);};export const fetchEventsTimeline=async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};console.warn('fetchEventsTimeline is deprecated - use fetchScanAlerts with time filtering instead');// Return mock data for now\nreturn[];};export const fetchEventById=async eventId=>{const response=await apiClient.get(`/events/${eventId}`);return response.data;};// Legacy honeypot events (secondary collection)\nexport const fetchHoneypotEvents=async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const response=await apiClient.get('/honeypot-events',{params});return response.data;};export const fetchHoneypotEventsStats=async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const response=await apiClient.get('/honeypot-events/stats',{params});return response.data;};// --- Scan Alerts (Primary Data Source) ---\nexport const fetchScanAlerts=async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};console.log('🔧 fetchScanAlerts called with params:',params);// Use the new scan-alerts endpoint\nconst response=await apiClient.get('/network-security/scan-alerts',{params});console.log('🔧 fetchScanAlerts response:',response.data.length,'items');return response.data;};// --- Scan Alerts Statistics ---\nexport const fetchScanAlertsStats=async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};console.log('🔧 fetchScanAlertsStats called with params:',params);// Use the new scan-alerts/stats endpoint\nconst response=await apiClient.get('/network-security/scan-alerts/stats',{params});console.log('🔧 fetchScanAlertsStats response:',response.data);return response.data;};// --- Deception Activity (Primary Data Source) ---\nexport const fetchDeceptionActivity=async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};console.log('🔧 fetchDeceptionActivity called with params:',params);// Use the new deception-activity endpoint\nconst response=await apiClient.get('/network-security/deception-activity',{params});console.log('🔧 fetchDeceptionActivity response:',response.data.length,'items');return response.data;};// --- Legacy Functions (Maintained for backward compatibility) ---\nexport const fetchZeekAlerts=async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};// Redirect to new scan alerts endpoint\nreturn fetchScanAlerts(params);};export const fetchZeekAlertsStats=async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};// Redirect to new alerts stats endpoint\nreturn fetchScanAlertsStats(params);};// --- Combined Threat Data (Primary Function) ---\nexport const fetchCombinedThreatData=async function(){let timeframe=arguments.length>0&&arguments[0]!==undefined?arguments[0]:24;let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{var _scanAlertsData$value,_deceptionActivityDat;console.log('🔧 fetchCombinedThreatData called with:',{timeframe,params});// Extract and validate parameters\nlet hours,limit;if(typeof timeframe==='object'&&timeframe!==null){// Called with object: fetchCombinedThreatData({ hours: 24, limit: 500 })\nhours=timeframe.hours||24;limit=timeframe.limit||500;// Extract any additional params from the object\nparams={...timeframe,...params};}else{// Called with separate params: fetchCombinedThreatData(24, { limit: 500 })\nhours=Number(timeframe)||24;limit=500;}// Clean params object to prevent malformed query strings\nconst cleanParams={hours:hours,limit:limit};// Only add additional params if they're valid\nif(typeof params==='object'&&params!==null){Object.keys(params).forEach(key=>{if(key!=='hours'&&key!=='limit'&&params[key]!==undefined){cleanParams[key]=params[key];}});}console.log('🔧 Cleaned params for API calls:',cleanParams);// Fetch data from existing endpoints\nconst[scanAlertsData,deceptionActivityData,alertsStatsData]=await Promise.allSettled([fetchScanAlerts(cleanParams),fetchDeceptionActivity(cleanParams),fetchScanAlertsStats(cleanParams)]);console.log('🔧 API responses:',{scanAlertsData:{status:scanAlertsData.status,value:scanAlertsData.status==='fulfilled'?scanAlertsData.value:scanAlertsData.reason,count:scanAlertsData.status==='fulfilled'?(_scanAlertsData$value=scanAlertsData.value)===null||_scanAlertsData$value===void 0?void 0:_scanAlertsData$value.length:0},deceptionActivityData:{status:deceptionActivityData.status,value:deceptionActivityData.status==='fulfilled'?deceptionActivityData.value:deceptionActivityData.reason,count:deceptionActivityData.status==='fulfilled'?(_deceptionActivityDat=deceptionActivityData.value)===null||_deceptionActivityDat===void 0?void 0:_deceptionActivityDat.length:0},alertsStatsData:{status:alertsStatsData.status,value:alertsStatsData.status==='fulfilled'?alertsStatsData.value:alertsStatsData.reason}});// Transform scan alerts (scan_alerts collection) to expected format\nconst scanAlerts=scanAlertsData.status==='fulfilled'?scanAlertsData.value.map(alert=>{const transformed={...alert,collection:'scan_alerts',// Always set collection explicitly\n// The backend already returns the correct structure, just ensure collection is set\nnote_type:alert.note_type||alert.alertType,source_ip:alert.source_ip||alert.attackerIP,dest_port:alert.dest_port,uid:alert.uid,message:alert.message||alert.description,threatLevel:alert.threatLevel||alert.severity,severity:alert.severity||alert.threatLevel||'medium',timestamp:alert.timestamp,attack_category:alert.attack_category||'network_scan'};console.log('🔧 Transformed scan alert:',{original:alert,transformed});return transformed;}):[];console.log('🔧 Final scan alerts count:',scanAlerts.length);if(scanAlerts.length>0){console.log('🔧 First scan alert sample:',scanAlerts[0]);}// Transform deception activity (deception_detection collection) to expected format\nconst deceptionActivity=deceptionActivityData.status==='fulfilled'?deceptionActivityData.value.map(alert=>{const transformed={...alert,collection:'deception_detection',// Always set collection explicitly\n// The backend already returns the correct structure, just ensure collection is set\nnote_type:alert.note_type||alert.alertType,source_ip:alert.source_ip||alert.attackerIP,dest_port:alert.dest_port,uid:alert.uid||alert.id,message:alert.message||alert.description,threatLevel:alert.threatLevel||alert.severity||'medium',severity:alert.severity||alert.threatLevel||'medium',timestamp:alert.timestamp,attack_category:alert.attack_category||'honeypot_engagement'};console.log('🔧 Transformed deception activity:',{original:alert,transformed});return transformed;}):[];console.log('🔧 Final deception activity count:',deceptionActivity.length);if(deceptionActivity.length>0){console.log('🔧 First deception activity sample:',deceptionActivity[0]);}// Transform alerts stats to expected format\nconst alertsStats=alertsStatsData.status==='fulfilled'?{total_alerts:alertsStatsData.value.total||0,threat_levels:alertsStatsData.value,protocol_distribution:[],attack_trends:[]}:{total_alerts:0,threat_levels:{total:0,high:0,medium:0,low:0,critical:0},protocol_distribution:[],attack_trends:[]};console.log('🔧 Combined threat data fetched successfully:',{scanAlerts:scanAlerts.length,deceptionActivity:deceptionActivity.length,alertsStats:alertsStats});return{scanAlerts,deceptionActivity,alertsStats,lastUpdated:new Date().toISOString()};}catch(error){console.error('❌ Error fetching combined threat data:',error);// Return empty data structure on error\nreturn{scanAlerts:[],deceptionActivity:[],alertsStats:{total_alerts:0,threat_levels:{total:0,high:0,medium:0,low:0,critical:0},protocol_distribution:[],attack_trends:[]},lastUpdated:new Date().toISOString()};}};export const fetchAttackPatterns=async function(){let hours=arguments.length>0&&arguments[0]!==undefined?arguments[0]:24;const response=await apiClient.get(`/network-security/attack-patterns?hours=${hours}`);return response.data;};export const fetchThreatFeed=async function(){let limit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:50;const response=await apiClient.get(`/network-security/threat-feed?limit=${limit}`);return response.data;};// --- Attack Detail API ---\nexport const fetchAttackDetail=async function(ip){let hours=arguments.length>1&&arguments[1]!==undefined?arguments[1]:24;const response=await apiClient.get(`/network-security/attack-detail/${ip}?hours=${hours}`);return response.data;};// --- Legacy API Functions (Deprecated - Coming Soon Features) ---\n// These functions are kept for backward compatibility but will be removed\n// when the respective features are implemented\nexport const fetchOTHoneypots=async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};console.warn('fetchOTHoneypots is deprecated - OT Honeypots feature coming soon');// Return mock data for now\nreturn[];};export const fetchOTDashboardStats=async function(){let timeframe=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'24h';let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};console.warn('fetchOTDashboardStats is deprecated - OT Dashboard feature coming soon');// Return mock data for now\nreturn{total_attacks:0,threat_levels:[],protocol_distribution:[],attack_trends:[]};};export const fetchOTThreats=async function(){let timeframe=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'24h';let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:20;let params=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};console.warn('fetchOTThreats is deprecated - OT Threats feature coming soon');// Return mock data for now\nreturn[];};export const fetchOTSafetyIncidents=async function(){let timeframe=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'24h';let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;let params=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};console.warn('fetchOTSafetyIncidents is deprecated - OT Safety feature coming soon');// Return mock data for now\nreturn[];};export const fetchOTAttackTimeline=async function(){let timeframe=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'24h';let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};console.warn('fetchOTAttackTimeline is deprecated - OT Timeline feature coming soon');// Return mock data for now\nreturn[];};export const fetchSessionById=async function(sessionId){let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};console.warn('fetchSessionById is deprecated - Session Analysis feature coming soon');// Return mock data for now\nreturn{session_id:sessionId,source_ip:'0.0.0.0',start_time:new Date().toISOString(),end_time:new Date().toISOString(),duration:0,exit_code:0,active:false};};export const fetchRawLogs=async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};console.warn('fetchRawLogs is deprecated - Raw Logs feature coming soon');// Return mock data for now\nreturn[];};export const analyzeSession=async function(sessionId){let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};console.warn('analyzeSession is deprecated - Session Analysis feature coming soon');// Return mock data for now\nreturn{session_id:sessionId,analysis:'Session analysis feature coming soon',timestamp:new Date().toISOString()};};export const fetchDashboardSummary=async function(){let timeframe=arguments.length>0&&arguments[0]!==undefined?arguments[0]:24;let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};console.warn('fetchDashboardSummary is deprecated - use fetchCombinedThreatData instead');// Redirect to the new function\nreturn await fetchCombinedThreatData(timeframe,params);};export const fetchEnhancedDashboardData=async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};console.warn('fetchEnhancedDashboardData is deprecated - use fetchCombinedThreatData instead');// Redirect to the new function\nreturn await fetchCombinedThreatData(24,params);};","map":{"version":3,"names":["axios","getApiBaseUrl","process","env","NODE_ENV","console","log","hasWindow","window","hasLocation","location","envApiUrl","REACT_APP_API_URL","envWsUrl","REACT_APP_WS_URL","protocol","hostname","targetHost","dynamicUrl","currentLocation","href","constructedUrl","architecture","fallbackUrl","API_BASE_URL","updateApiBaseUrl","apiClient","defaults","baseURL","getCurrentApiBaseUrl","refreshApiConfiguration","create","timeout","headers","interceptors","response","use","error","_error$response","originalRequest","config","_retry","code","status","Promise","resolve","setTimeout","request","reject","token","localStorage","getItem","common","setAuthToken","setItem","removeItem","checkHealth","get","data","checkQuickHealth","login","username","password","post","fetchHoneypots","startHoneypot","id","stopHoneypot","fetchHoneypotStatuses","fetchHoneypotPlugins","updateHoneypotPlugins","put","rebuildHoneypot","fetchEvents","params","arguments","length","undefined","warn","fetchCombinedThreatData","scanAlerts","fetchEventsStats","fetchScanAlertsStats","fetchEventsTimeline","fetchEventById","eventId","fetchHoneypotEvents","fetchHoneypotEventsStats","fetchScanAlerts","fetchDeceptionActivity","fetchZeekAlerts","fetchZeekAlertsStats","timeframe","_scanAlertsData$value","_deceptionActivityDat","hours","limit","Number","cleanParams","Object","keys","forEach","key","scanAlertsData","deceptionActivityData","alertsStatsData","allSettled","value","reason","count","map","alert","transformed","collection","note_type","alertType","source_ip","attackerIP","dest_port","uid","message","description","threatLevel","severity","timestamp","attack_category","original","deceptionActivity","alertsStats","total_alerts","total","threat_levels","protocol_distribution","attack_trends","high","medium","low","critical","lastUpdated","Date","toISOString","fetchAttackPatterns","fetchThreatFeed","fetchAttackDetail","ip","fetchOTHoneypots","fetchOTDashboardStats","total_attacks","fetchOTThreats","fetchOTSafetyIncidents","fetchOTAttackTimeline","fetchSessionById","sessionId","session_id","start_time","end_time","duration","exit_code","active","fetchRawLogs","analyzeSession","analysis","fetchDashboardSummary","fetchEnhancedDashboardData"],"sources":["/home/demon/distributed-architecture/central-infrastructure/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Smart API base URL detection for distributed architecture\nconst getApiBaseUrl = () => {\n  if (process.env.NODE_ENV === 'development') {\n    console.log('🔧 getApiBaseUrl called with:', {\n      hasWindow: typeof window !== 'undefined',\n      hasLocation: typeof window !== 'undefined' && window.location,\n      envApiUrl: process.env.REACT_APP_API_URL,\n      envWsUrl: process.env.REACT_APP_WS_URL\n    });\n  }\n\n  // If we're in a browser environment, dynamically determine from current page location\n  if (typeof window !== 'undefined' && window.location) {\n    // Use environment variable if set, otherwise dynamically determine from current location\n    if (process.env.REACT_APP_API_URL && process.env.REACT_APP_API_URL !== 'undefined') {\n      console.log('🔧 Using environment variable for API URL:', process.env.REACT_APP_API_URL);\n      return process.env.REACT_APP_API_URL;\n    }\n    \n    console.log('🔧 No environment variable set, using dynamic detection');\n    \n    // Get current host and construct backend URL\n    const { protocol, hostname } = window.location;\n    \n    // Special handling for distributed architecture\n    // If accessing from client VM (10.0.44.3), use central infrastructure IP (10.0.44.32)\n    let targetHost = hostname;\n    if (hostname === '10.0.44.3') {\n      targetHost = '10.0.44.32';\n      console.log('🔧 Client VM detected, routing to central infrastructure:', targetHost);\n    }\n    \n    const dynamicUrl = `${protocol}//${targetHost}:5000/api`;\n    console.log('🔧 Dynamic API URL detected:', {\n      currentLocation: window.location.href,\n      protocol,\n      hostname,\n      targetHost,\n      constructedUrl: dynamicUrl,\n      architecture: 'distributed'\n    });\n    return dynamicUrl;\n  }\n  \n  // Fallback for SSR or when window.location is not available\n  const fallbackUrl = process.env.REACT_APP_API_URL || 'http://backend:5000/api';\n  console.log('🔧 Using fallback API URL:', fallbackUrl);\n  return fallbackUrl;\n};\n\n// Initialize API_BASE_URL\nlet API_BASE_URL = getApiBaseUrl();\n\n// Function to update API_BASE_URL dynamically (useful for debugging)\nexport const updateApiBaseUrl = () => {\n  API_BASE_URL = getApiBaseUrl();\n  console.log('🔧 Updated API_BASE_URL to:', API_BASE_URL);\n  \n  // Update axios baseURL\n  apiClient.defaults.baseURL = API_BASE_URL;\n  return API_BASE_URL;\n};\n\n// Function to get current API base URL\nexport const getCurrentApiBaseUrl = () => {\n  return API_BASE_URL;\n};\n\n// Function to force refresh API configuration (useful when page loads)\nexport const refreshApiConfiguration = () => {\n  console.log('🔧 Refreshing API configuration...');\n  return updateApiBaseUrl();\n};\n\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 15000, // Increased timeout for health checks that include HoneypotManager\n  headers: {\n    'Content-Type': 'application/json',\n  }\n});\n\n// Log the initial configuration\nconsole.log('🔧 Axios client created with baseURL:', API_BASE_URL);\n\n// Add retry logic for container network issues\napiClient.interceptors.response.use(\n  response => response,\n  async error => {\n    const originalRequest = error.config;\n    \n    // Retry for network errors or 5xx server errors\n    if (\n      !originalRequest._retry &&\n      (error.code === 'ECONNABORTED' || \n       error.response?.status >= 500 || \n       error.code === 'NETWORK_ERROR')\n    ) {\n      originalRequest._retry = true;\n      console.log('Retrying request due to network error...');\n      \n      // Wait 1 second before retry\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      return apiClient.request(originalRequest);\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// Set auth token from localStorage\nconst token = localStorage.getItem('authToken');\nif (token) {\n  apiClient.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n}\n\nexport const setAuthToken = (token) => {\n  if (token) {\n    apiClient.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    localStorage.setItem('authToken', token);\n  } else {\n    delete apiClient.defaults.headers.common['Authorization'];\n    localStorage.removeItem('authToken');\n  }\n};\n\n// --- Health Check ---\nexport const checkHealth = async () => {\n  const response = await apiClient.get('/health');\n  return response.data;\n};\n\nexport const checkQuickHealth = async () => {\n  const response = await apiClient.get('/health/quick');\n  return response.data;\n};\n\n// --- Auth ---\nexport const login = async (username, password) => {\n  const response = await apiClient.post('/auth/login', { username, password });\n  return response.data;\n};\n\n// --- Honeypots ---\nexport const fetchHoneypots = async () => {\n  const response = await apiClient.get('/honeypots');\n  return response.data;\n};\n\nexport const startHoneypot = async (id) => {\n  const response = await apiClient.post(`/honeypots/control/${id}/start`);\n  return response.data;\n};\n\nexport const stopHoneypot = async (id) => {\n  const response = await apiClient.post(`/honeypots/control/${id}/stop`);\n  return response.data;\n};\n\nexport const fetchHoneypotStatuses = async () => {\n  const response = await apiClient.get('/honeypots/control/status');\n  return response.data;\n};\n\n// --- Plugin Management ---\nexport const fetchHoneypotPlugins = async (id) => {\n  const response = await apiClient.get(`/honeypots/${id}/plugins`);\n  return response.data;\n};\n\nexport const updateHoneypotPlugins = async (id, config) => {\n  const response = await apiClient.put(`/honeypots/${id}/plugins`, config);\n  return response.data;\n};\n\nexport const rebuildHoneypot = async (id) => {\n  const response = await apiClient.post(`/honeypots/${id}/rebuild`);\n  return response.data;\n};\n\n// --- Events (Primary Collection as per Connection.md) ---\nexport const fetchEvents = async (params = {}) => {\n  console.warn('fetchEvents is deprecated - use fetchCombinedThreatData instead');\n  // Redirect to the new function\n  const data = await fetchCombinedThreatData(24, params);\n  return data.scanAlerts || [];\n};\n\nexport const fetchEventsStats = async (params = {}) => {\n  console.warn('fetchEventsStats is deprecated - use fetchScanAlertsStats instead');\n  // Redirect to the new function\n  return await fetchScanAlertsStats(params);\n};\n\nexport const fetchEventsTimeline = async (params = {}) => {\n  console.warn('fetchEventsTimeline is deprecated - use fetchScanAlerts with time filtering instead');\n  // Return mock data for now\n  return [];\n};\n\nexport const fetchEventById = async (eventId) => {\n  const response = await apiClient.get(`/events/${eventId}`);\n  return response.data;\n};\n\n// Legacy honeypot events (secondary collection)\nexport const fetchHoneypotEvents = async (params = {}) => {\n  const response = await apiClient.get('/honeypot-events', { params });\n  return response.data;\n};\n\nexport const fetchHoneypotEventsStats = async (params = {}) => {\n  const response = await apiClient.get('/honeypot-events/stats', { params });\n  return response.data;\n};\n\n// --- Scan Alerts (Primary Data Source) ---\nexport const fetchScanAlerts = async (params = {}) => {\n  console.log('🔧 fetchScanAlerts called with params:', params);\n  // Use the new scan-alerts endpoint\n  const response = await apiClient.get('/network-security/scan-alerts', { params });\n  console.log('🔧 fetchScanAlerts response:', response.data.length, 'items');\n  return response.data;\n};\n\n// --- Scan Alerts Statistics ---\nexport const fetchScanAlertsStats = async (params = {}) => {\n  console.log('🔧 fetchScanAlertsStats called with params:', params);\n  // Use the new scan-alerts/stats endpoint\n  const response = await apiClient.get('/network-security/scan-alerts/stats', { params });\n  console.log('🔧 fetchScanAlertsStats response:', response.data);\n  return response.data;\n};\n\n// --- Deception Activity (Primary Data Source) ---\nexport const fetchDeceptionActivity = async (params = {}) => {\n  console.log('🔧 fetchDeceptionActivity called with params:', params);\n  // Use the new deception-activity endpoint\n  const response = await apiClient.get('/network-security/deception-activity', { params });\n  console.log('🔧 fetchDeceptionActivity response:', response.data.length, 'items');\n  return response.data;\n};\n\n// --- Legacy Functions (Maintained for backward compatibility) ---\nexport const fetchZeekAlerts = async (params = {}) => {\n  // Redirect to new scan alerts endpoint\n  return fetchScanAlerts(params);\n};\n\nexport const fetchZeekAlertsStats = async (params = {}) => {\n  // Redirect to new alerts stats endpoint\n  return fetchScanAlertsStats(params);\n};\n\n// --- Combined Threat Data (Primary Function) ---\nexport const fetchCombinedThreatData = async (timeframe = 24, params = {}) => {\n  try {\n    console.log('🔧 fetchCombinedThreatData called with:', { timeframe, params });\n    \n    // Extract and validate parameters\n    let hours, limit;\n    \n    if (typeof timeframe === 'object' && timeframe !== null) {\n      // Called with object: fetchCombinedThreatData({ hours: 24, limit: 500 })\n      hours = timeframe.hours || 24;\n      limit = timeframe.limit || 500;\n      // Extract any additional params from the object\n      params = { ...timeframe, ...params };\n    } else {\n      // Called with separate params: fetchCombinedThreatData(24, { limit: 500 })\n      hours = Number(timeframe) || 24;\n      limit = 500;\n    }\n    \n    // Clean params object to prevent malformed query strings\n    const cleanParams = {\n      hours: hours,\n      limit: limit\n    };\n    \n    // Only add additional params if they're valid\n    if (typeof params === 'object' && params !== null) {\n      Object.keys(params).forEach(key => {\n        if (key !== 'hours' && key !== 'limit' && params[key] !== undefined) {\n          cleanParams[key] = params[key];\n        }\n      });\n    }\n    \n    console.log('🔧 Cleaned params for API calls:', cleanParams);\n    \n    // Fetch data from existing endpoints\n    const [scanAlertsData, deceptionActivityData, alertsStatsData] = await Promise.allSettled([\n      fetchScanAlerts(cleanParams),\n      fetchDeceptionActivity(cleanParams),\n      fetchScanAlertsStats(cleanParams)\n    ]);\n\n    console.log('🔧 API responses:', {\n      scanAlertsData: {\n        status: scanAlertsData.status,\n        value: scanAlertsData.status === 'fulfilled' ? scanAlertsData.value : scanAlertsData.reason,\n        count: scanAlertsData.status === 'fulfilled' ? scanAlertsData.value?.length : 0\n      },\n      deceptionActivityData: {\n        status: deceptionActivityData.status,\n        value: deceptionActivityData.status === 'fulfilled' ? deceptionActivityData.value : deceptionActivityData.reason,\n        count: deceptionActivityData.status === 'fulfilled' ? deceptionActivityData.value?.length : 0\n      },\n      alertsStatsData: {\n        status: alertsStatsData.status,\n        value: alertsStatsData.status === 'fulfilled' ? alertsStatsData.value : alertsStatsData.reason\n      }\n    });\n\n    // Transform scan alerts (scan_alerts collection) to expected format\n    const scanAlerts = scanAlertsData.status === 'fulfilled' ? \n      scanAlertsData.value.map(alert => {\n        const transformed = {\n          ...alert,\n          collection: 'scan_alerts', // Always set collection explicitly\n          // The backend already returns the correct structure, just ensure collection is set\n          note_type: alert.note_type || alert.alertType,\n          source_ip: alert.source_ip || alert.attackerIP,\n          dest_port: alert.dest_port,\n          uid: alert.uid,\n          message: alert.message || alert.description,\n          threatLevel: alert.threatLevel || alert.severity,\n          severity: alert.severity || alert.threatLevel || 'medium',\n          timestamp: alert.timestamp,\n          attack_category: alert.attack_category || 'network_scan'\n        };\n        console.log('🔧 Transformed scan alert:', { original: alert, transformed });\n        return transformed;\n      }) : [];\n\n    console.log('🔧 Final scan alerts count:', scanAlerts.length);\n    if (scanAlerts.length > 0) {\n      console.log('🔧 First scan alert sample:', scanAlerts[0]);\n    }\n\n    // Transform deception activity (deception_detection collection) to expected format\n    const deceptionActivity = deceptionActivityData.status === 'fulfilled' ? \n      deceptionActivityData.value.map(alert => {\n        const transformed = {\n          ...alert,\n          collection: 'deception_detection', // Always set collection explicitly\n          // The backend already returns the correct structure, just ensure collection is set\n          note_type: alert.note_type || alert.alertType,\n          source_ip: alert.source_ip || alert.attackerIP,\n          dest_port: alert.dest_port,\n          uid: alert.uid || alert.id,\n          message: alert.message || alert.description,\n          threatLevel: alert.threatLevel || alert.severity || 'medium',\n          severity: alert.severity || alert.threatLevel || 'medium',\n          timestamp: alert.timestamp,\n          attack_category: alert.attack_category || 'honeypot_engagement'\n        };\n        console.log('🔧 Transformed deception activity:', { original: alert, transformed });\n        return transformed;\n      }) : [];\n\n    console.log('🔧 Final deception activity count:', deceptionActivity.length);\n    if (deceptionActivity.length > 0) {\n      console.log('🔧 First deception activity sample:', deceptionActivity[0]);\n    }\n\n    // Transform alerts stats to expected format\n    const alertsStats = alertsStatsData.status === 'fulfilled' ? {\n      total_alerts: alertsStatsData.value.total || 0,\n      threat_levels: alertsStatsData.value,\n      protocol_distribution: [],\n      attack_trends: []\n    } : {\n      total_alerts: 0,\n      threat_levels: { total: 0, high: 0, medium: 0, low: 0, critical: 0 },\n      protocol_distribution: [],\n      attack_trends: []\n    };\n\n    console.log('🔧 Combined threat data fetched successfully:', {\n      scanAlerts: scanAlerts.length,\n      deceptionActivity: deceptionActivity.length,\n      alertsStats: alertsStats\n    });\n\n    return {\n      scanAlerts,\n      deceptionActivity,\n      alertsStats,\n      lastUpdated: new Date().toISOString()\n    };\n  } catch (error) {\n    console.error('❌ Error fetching combined threat data:', error);\n    // Return empty data structure on error\n    return {\n      scanAlerts: [],\n      deceptionActivity: [],\n      alertsStats: {\n        total_alerts: 0,\n        threat_levels: { total: 0, high: 0, medium: 0, low: 0, critical: 0 },\n        protocol_distribution: [],\n        attack_trends: []\n      },\n      lastUpdated: new Date().toISOString()\n    };\n  }\n};\n\nexport const fetchAttackPatterns = async (hours = 24) => {\n  const response = await apiClient.get(`/network-security/attack-patterns?hours=${hours}`);\n  return response.data;\n};\n\nexport const fetchThreatFeed = async (limit = 50) => {\n  const response = await apiClient.get(`/network-security/threat-feed?limit=${limit}`);\n  return response.data;\n};\n\n// --- Attack Detail API ---\nexport const fetchAttackDetail = async (ip, hours = 24) => {\n  const response = await apiClient.get(`/network-security/attack-detail/${ip}?hours=${hours}`);\n  return response.data;\n};\n\n// --- Legacy API Functions (Deprecated - Coming Soon Features) ---\n// These functions are kept for backward compatibility but will be removed\n// when the respective features are implemented\n\nexport const fetchOTHoneypots = async (params = {}) => {\n  console.warn('fetchOTHoneypots is deprecated - OT Honeypots feature coming soon');\n  // Return mock data for now\n  return [];\n};\n\nexport const fetchOTDashboardStats = async (timeframe = '24h', params = {}) => {\n  console.warn('fetchOTDashboardStats is deprecated - OT Dashboard feature coming soon');\n  // Return mock data for now\n  return {\n    total_attacks: 0,\n    threat_levels: [],\n    protocol_distribution: [],\n    attack_trends: []\n  };\n};\n\nexport const fetchOTThreats = async (timeframe = '24h', limit = 20, params = {}) => {\n  console.warn('fetchOTThreats is deprecated - OT Threats feature coming soon');\n  // Return mock data for now\n  return [];\n};\n\nexport const fetchOTSafetyIncidents = async (timeframe = '24h', limit = 10, params = {}) => {\n  console.warn('fetchOTSafetyIncidents is deprecated - OT Safety feature coming soon');\n  // Return mock data for now\n  return [];\n};\n\nexport const fetchOTAttackTimeline = async (timeframe = '24h', params = {}) => {\n  console.warn('fetchOTAttackTimeline is deprecated - OT Timeline feature coming soon');\n  // Return mock data for now\n  return [];\n};\n\nexport const fetchSessionById = async (sessionId, params = {}) => {\n  console.warn('fetchSessionById is deprecated - Session Analysis feature coming soon');\n  // Return mock data for now\n  return {\n    session_id: sessionId,\n    source_ip: '0.0.0.0',\n    start_time: new Date().toISOString(),\n    end_time: new Date().toISOString(),\n    duration: 0,\n    exit_code: 0,\n    active: false\n  };\n};\n\nexport const fetchRawLogs = async (params = {}) => {\n  console.warn('fetchRawLogs is deprecated - Raw Logs feature coming soon');\n  // Return mock data for now\n  return [];\n};\n\nexport const analyzeSession = async (sessionId, params = {}) => {\n  console.warn('analyzeSession is deprecated - Session Analysis feature coming soon');\n  // Return mock data for now\n  return {\n    session_id: sessionId,\n    analysis: 'Session analysis feature coming soon',\n    timestamp: new Date().toISOString()\n  };\n};\n\nexport const fetchDashboardSummary = async (timeframe = 24, params = {}) => {\n  console.warn('fetchDashboardSummary is deprecated - use fetchCombinedThreatData instead');\n  // Redirect to the new function\n  return await fetchCombinedThreatData(timeframe, params);\n};\n\nexport const fetchEnhancedDashboardData = async (params = {}) => {\n  console.warn('fetchEnhancedDashboardData is deprecated - use fetchCombinedThreatData instead');\n  // Redirect to the new function\n  return await fetchCombinedThreatData(24, params);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}