{"ast":null,"code":"var _jsxFileName = \"/home/demon/distributed-architecture/central-infrastructure/frontend/src/pages/Overview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, BarElement } from 'chart.js';\nimport { Line, Doughnut, Bar } from 'react-chartjs-2';\nimport { fetchDashboardSummary, fetchThreatFeed, fetchEvents, fetchScanAlerts, fetchDeceptionActivity, checkQuickHealth, fetchCombinedThreatData, fetchEnhancedDashboardData } from '../api';\nimport { combineAndSortEvents, calculateThreatStats, createTimelineData, normalizeEvent, getThreatLevel, getSeverityColor } from '../utils/dataProcessor';\nimport ProtocolWidget from '../components/ProtocolWidget';\nimport NmapDetectionWidget from '../components/NmapDetectionWidget';\nimport useWebSocket from '../hooks/useWebSocket';\nimport './Overview.css';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, BarElement);\n\n// Gauge Component\nconst GaugeChart = ({\n  value,\n  maxValue,\n  label,\n  color,\n  unit = '%'\n}) => {\n  const percentage = Math.min(value / maxValue * 100, 100);\n  const circumference = 2 * Math.PI * 45;\n  const strokeDasharray = `${percentage * circumference / 100} ${circumference}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gauge-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gauge-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"gauge-svg\",\n        viewBox: \"0 0 100 100\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          className: \"gauge-bg\",\n          cx: \"50\",\n          cy: \"50\",\n          r: \"45\",\n          fill: \"none\",\n          stroke: \"#1e293b\",\n          strokeWidth: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          className: \"gauge-fill\",\n          cx: \"50\",\n          cy: \"50\",\n          r: \"45\",\n          fill: \"none\",\n          stroke: color,\n          strokeWidth: \"8\",\n          strokeLinecap: \"round\",\n          strokeDasharray: strokeDasharray,\n          transform: \"rotate(-90 50 50)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gauge-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gauge-value\",\n          children: [value, unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gauge-label\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n// Metric Card Component\n_c = GaugeChart;\nconst MetricCard = ({\n  icon,\n  title,\n  value,\n  change,\n  changeType,\n  color,\n  onClick,\n  loading = false\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: `metric-card ${onClick ? 'clickable' : ''} ${loading ? 'loading' : ''}`,\n  onClick: onClick,\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"metric-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `metric-icon ${color}`,\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), !loading && change !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `metric-change ${changeType}`,\n      children: [change > 0 ? '+' : '', change]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"metric-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-value\",\n      children: loading ? '...' : value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 95,\n  columnNumber: 3\n}, this);\n\n// Activity Feed Item Component\n_c2 = MetricCard;\nconst ActivityItem = ({\n  item,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"activity-item\",\n  onClick: () => onClick(item),\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: `activity-status ${item.severity}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"activity-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activity-title\",\n      children: item.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activity-description\",\n      children: item.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activity-meta\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"activity-time\",\n        children: item.time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"activity-type\",\n        children: item.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 117,\n  columnNumber: 3\n}, this);\n_c3 = ActivityItem;\nconst Overview = () => {\n  _s();\n  var _data$threatStats, _data$threatStats2, _data$threatStats3, _data$threatStats4, _data$threatStats5;\n  console.log('🔧 Overview component rendering...'); // Track re-renders\n\n  const navigate = useNavigate();\n  const {\n    socket,\n    isConnected,\n    subscribe,\n    subscribeToEvents,\n    subscribeToNmapDetections,\n    subscribeToThreatFeed,\n    subscribeToDashboard,\n    unsubscribeFromDashboard,\n    dashboardStatus,\n    isDashboardSubscribed\n  } = useWebSocket();\n  // Initialize data state\n  const [data, setData] = useState({\n    threatStats: {},\n    combinedEvents: [],\n    scanAlerts: [],\n    deceptionActivity: [],\n    alertsStats: {},\n    lastUpdated: new Date()\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(new Date());\n  const [refreshing, setRefreshing] = useState(false);\n  const [timeRange, setTimeRange] = useState(24); // Default to 24 hours\n  const [isDataLoading, setIsDataLoading] = useState(false); // Prevent multiple simultaneous loads\n  const [lastRefreshTime, setLastRefreshTime] = useState(0); // Track last refresh time\n  const [systemHealth, setSystemHealth] = useState({\n    status: 'unknown',\n    memory: 0,\n    cpu: 0,\n    database: 'disconnected'\n  });\n\n  // Use refs to store latest values without causing re-renders\n  const isDataLoadingRef = useRef(false);\n  const lastRefreshTimeRef = useRef(0);\n  const loadDashboardData = useCallback(async () => {\n    // Prevent multiple simultaneous loads\n    if (isDataLoadingRef.current) {\n      console.log('🔧 Data load already in progress, skipping...');\n      return;\n    }\n\n    // Prevent rapid successive calls (minimum 5 seconds between calls)\n    const now = Date.now();\n    if (now - lastRefreshTimeRef.current < 5000) {\n      console.log('🔧 Refresh too soon, skipping... (last refresh was', now - lastRefreshTimeRef.current, 'ms ago)');\n      return;\n    }\n    try {\n      isDataLoadingRef.current = true;\n      setLoading(true);\n      lastRefreshTimeRef.current = now;\n      console.log('🔧 Loading dashboard data...');\n\n      // Fetch combined threat data using the new structure\n      const combinedData = await fetchCombinedThreatData(timeRange);\n      console.log('🔧 Raw combined data received:', combinedData);\n      if (combinedData) {\n        var _combinedData$scanAle, _combinedData$decepti, _combinedData$scanAle2, _combinedData$decepti2, _combinedData$scanAle3, _combinedData$decepti3;\n        console.log('🔧 Dashboard data loaded:', {\n          scanAlerts: ((_combinedData$scanAle = combinedData.scanAlerts) === null || _combinedData$scanAle === void 0 ? void 0 : _combinedData$scanAle.length) || 0,\n          deceptionActivity: ((_combinedData$decepti = combinedData.deceptionActivity) === null || _combinedData$decepti === void 0 ? void 0 : _combinedData$decepti.length) || 0,\n          alertsStats: combinedData.alertsStats\n        });\n\n        // Process and combine events for display\n        const allEvents = [...(combinedData.scanAlerts || []), ...(combinedData.deceptionActivity || [])];\n        console.log('🔧 All events before normalization:', allEvents);\n        console.log('🔧 Scan alerts sample:', (_combinedData$scanAle2 = combinedData.scanAlerts) === null || _combinedData$scanAle2 === void 0 ? void 0 : _combinedData$scanAle2[0]);\n        console.log('🔧 Deception activity sample:', (_combinedData$decepti2 = combinedData.deceptionActivity) === null || _combinedData$decepti2 === void 0 ? void 0 : _combinedData$decepti2[0]);\n\n        // Normalize events for consistent processing\n        const normalizedEvents = allEvents.map(event => {\n          const normalized = normalizeEvent(event, event.collection || 'unknown');\n          console.log('🔧 Normalizing event:', {\n            original: event,\n            normalized\n          });\n          return normalized;\n        });\n        console.log('🔧 Normalized events:', normalizedEvents);\n\n        // Update combined events and threat stats\n        const threatStats = calculateThreatStats(normalizedEvents);\n        console.log('🔧 Calculated threat stats:', threatStats);\n\n        // Generate timeline data from actual events\n        const timelineData = createTimelineData(normalizedEvents, timeRange);\n\n        // Update all state in a single atomic operation to prevent timing issues\n        setData(prev => {\n          const newState = {\n            ...prev,\n            scanAlerts: combinedData.scanAlerts || [],\n            deceptionActivity: combinedData.deceptionActivity || [],\n            alertsStats: combinedData.alertsStats || {},\n            lastUpdated: combinedData.lastUpdated || new Date().toISOString(),\n            combinedEvents: normalizedEvents,\n            threatStats: threatStats,\n            timelineData: timelineData\n          };\n          console.log('🔧 Final complete state update:', newState);\n          return newState;\n        });\n\n        // Debug: Log the final data state\n        console.log('🔧 Final data state after processing:', {\n          scanAlerts: ((_combinedData$scanAle3 = combinedData.scanAlerts) === null || _combinedData$scanAle3 === void 0 ? void 0 : _combinedData$scanAle3.length) || 0,\n          deceptionActivity: ((_combinedData$decepti3 = combinedData.deceptionActivity) === null || _combinedData$decepti3 === void 0 ? void 0 : _combinedData$decepti3.length) || 0,\n          normalizedEvents: normalizedEvents.length,\n          threatStats: threatStats,\n          timelineData: (timelineData === null || timelineData === void 0 ? void 0 : timelineData.length) || 0\n        });\n      } else {\n        console.warn('⚠️ No combined data received');\n      }\n    } catch (error) {\n      console.error('❌ Error loading dashboard data:', error);\n    } finally {\n      setLoading(false);\n      setRefreshing(false); // Ensure refreshing is reset\n      isDataLoadingRef.current = false; // Reset loading flag\n      console.log('🔧 Data loading completed, loading and refreshing set to false');\n    }\n  }, [timeRange]); // Remove isDataLoading and lastRefreshTime from dependencies to prevent infinite loops\n\n  // Initialize system health\n  useEffect(() => {\n    const initializeSystemHealth = async () => {\n      try {\n        const healthData = await checkQuickHealth();\n        console.log('🔧 Health data received:', healthData);\n        if (healthData) {\n          var _healthData$services, _healthData$services$, _healthData$services2, _healthData$services3, _healthData$services4, _healthData$services5, _healthData$services6;\n          const memoryUsage = (_healthData$services = healthData.services) === null || _healthData$services === void 0 ? void 0 : (_healthData$services$ = _healthData$services.backend) === null || _healthData$services$ === void 0 ? void 0 : _healthData$services$.memory;\n          const memoryPercent = memoryUsage ? Math.round(memoryUsage.heapUsed / memoryUsage.heapTotal * 100) : 0;\n          setSystemHealth({\n            status: healthData.status || 'unknown',\n            memory: memoryPercent,\n            cpu: Math.round(((_healthData$services2 = healthData.services) === null || _healthData$services2 === void 0 ? void 0 : (_healthData$services3 = _healthData$services2.backend) === null || _healthData$services3 === void 0 ? void 0 : (_healthData$services4 = _healthData$services3.cpu) === null || _healthData$services4 === void 0 ? void 0 : _healthData$services4.usage) || Math.random() * 100),\n            database: ((_healthData$services5 = healthData.services) === null || _healthData$services5 === void 0 ? void 0 : (_healthData$services6 = _healthData$services5.database) === null || _healthData$services6 === void 0 ? void 0 : _healthData$services6.status) || 'disconnected'\n          });\n        }\n      } catch (error) {\n        console.error('❌ Error initializing system health:', error);\n      }\n    };\n    initializeSystemHealth();\n  }, []);\n\n  // Refresh specific section\n  const refreshSection = useCallback(async section => {\n    var _newData3, _newData4;\n    // Prevent rapid successive refreshes\n    const now = Date.now();\n    if (now - lastRefreshTimeRef.current < 2000) {\n      console.log('🔧 Refresh too soon, skipping... (last refresh was', now - lastRefreshTimeRef.current, 'ms ago)');\n      return;\n    }\n    try {\n      setRefreshing(true);\n      lastRefreshTimeRef.current = now;\n      let newData;\n      switch (section) {\n        case 'summary':\n          // Use the new combined threat data function\n          newData = await fetchCombinedThreatData(timeRange);\n          setData(prev => {\n            var _newData, _newData2;\n            return {\n              ...prev,\n              alertsStats: ((_newData = newData) === null || _newData === void 0 ? void 0 : _newData.alertsStats) || {},\n              lastUpdated: ((_newData2 = newData) === null || _newData2 === void 0 ? void 0 : _newData2.lastUpdated) || new Date().toISOString()\n            };\n          });\n          break;\n        case 'threats':\n          newData = await fetchThreatFeed();\n          setData(prev => ({\n            ...prev,\n            threats: Array.isArray(newData) ? newData : newData.threats || []\n          }));\n          break;\n        case 'events':\n          // Use the new combined threat data function\n          newData = await fetchCombinedThreatData(timeRange);\n          const allEvents = [...(((_newData3 = newData) === null || _newData3 === void 0 ? void 0 : _newData3.scanAlerts) || []), ...(((_newData4 = newData) === null || _newData4 === void 0 ? void 0 : _newData4.deceptionActivity) || [])];\n          const normalizedEvents = allEvents.map(event => normalizeEvent(event, event.collection || 'unknown'));\n          setData(prev => ({\n            ...prev,\n            combinedEvents: normalizedEvents,\n            threatStats: calculateThreatStats(normalizedEvents)\n          }));\n          break;\n        case 'scanAlerts':\n          newData = await fetchScanAlerts({\n            hours: timeRange,\n            limit: 500\n          });\n          setData(prev => ({\n            ...prev,\n            scanAlerts: Array.isArray(newData) ? newData : []\n          }));\n          break;\n        case 'deceptionActivity':\n          newData = await fetchDeceptionActivity({\n            hours: timeRange,\n            limit: 500\n          });\n          setData(prev => ({\n            ...prev,\n            deceptionActivity: Array.isArray(newData) ? newData : []\n          }));\n          break;\n        case 'health':\n          newData = await checkQuickHealth();\n          if (newData) {\n            var _newData$services, _newData$services$bac, _newData$services2, _newData$services2$ba, _newData$services2$ba2, _newData$services3, _newData$services3$da;\n            const memoryUsage = (_newData$services = newData.services) === null || _newData$services === void 0 ? void 0 : (_newData$services$bac = _newData$services.backend) === null || _newData$services$bac === void 0 ? void 0 : _newData$services$bac.memory;\n            const memoryPercent = memoryUsage ? Math.round(memoryUsage.heapUsed / memoryUsage.heapTotal * 100) : 0;\n            setSystemHealth({\n              status: newData.status || 'unknown',\n              memory: memoryPercent,\n              cpu: Math.round(((_newData$services2 = newData.services) === null || _newData$services2 === void 0 ? void 0 : (_newData$services2$ba = _newData$services2.backend) === null || _newData$services2$ba === void 0 ? void 0 : (_newData$services2$ba2 = _newData$services2$ba.cpu) === null || _newData$services2$ba2 === void 0 ? void 0 : _newData$services2$ba2.usage) || Math.random() * 100),\n              database: ((_newData$services3 = newData.services) === null || _newData$services3 === void 0 ? void 0 : (_newData$services3$da = _newData$services3.database) === null || _newData$services3$da === void 0 ? void 0 : _newData$services3$da.status) || 'disconnected'\n            });\n          }\n          break;\n        default:\n          await loadDashboardData();\n      }\n      setLastUpdated(new Date());\n    } catch (err) {\n      console.error(`❌ Error refreshing ${section}:`, err);\n    } finally {\n      setRefreshing(false);\n    }\n  }, [timeRange, loadDashboardData]); // Add timeRange, lastRefreshTime, loadDashboardData to dependencies\n\n  // WebSocket real-time event handling\n  useEffect(() => {\n    if (isConnected && subscribeToThreatFeed) {\n      const unsubscribe = subscribeToThreatFeed(event => {\n        const normalizedEvent = normalizeEvent(event, event.collection);\n        setData(prevData => {\n          const updatedData = {\n            ...prevData\n          };\n\n          // Update appropriate collection based on event type\n          if (event.collection === 'scan_alerts' || event.note_type) {\n            updatedData.scanAlerts = [normalizedEvent, ...prevData.scanAlerts].slice(0, 200);\n          } else if (event.collection === 'deception_detection' || event.attack_category === 'honeypot_engagement') {\n            updatedData.deceptionActivity = [normalizedEvent, ...prevData.deceptionActivity].slice(0, 200);\n          }\n\n          // Update combined events\n          updatedData.combinedEvents = [normalizedEvent, ...prevData.combinedEvents].slice(0, 200);\n\n          // Update threat stats\n          updatedData.threatStats = calculateThreatStats(updatedData.combinedEvents);\n          return updatedData;\n        });\n      });\n      return unsubscribe;\n    }\n  }, [isConnected, subscribeToThreatFeed]);\n\n  // Subscribe to WebSocket updates when component mounts\n  useEffect(() => {\n    if (isConnected && !isDashboardSubscribed) {\n      console.log('🔧 Subscribing to dashboard updates...');\n      subscribeToDashboard();\n    }\n    return () => {\n      if (isConnected && isDashboardSubscribed) {\n        console.log('🔧 Unsubscribing from dashboard updates...');\n        unsubscribeFromDashboard();\n      }\n    };\n  }, [isConnected, isDashboardSubscribed, subscribeToDashboard, unsubscribeFromDashboard]);\n\n  // Handle WebSocket dashboard updates - TEMPORARILY DISABLED TO STOP INFINITE LOOP\n  useEffect(() => {\n    if (!socket) return;\n    console.log('🔧 WebSocket handlers DISABLED to prevent infinite loop');\n\n    // TEMPORARILY DISABLED - Uncomment when fixed\n    /*\n    // Debounce function to prevent rapid refreshes\n    let refreshTimeout;\n    const debouncedRefresh = () => {\n      clearTimeout(refreshTimeout);\n      refreshTimeout = setTimeout(() => {\n        console.log('📊 Debounced refresh triggered');\n        loadDashboardData();\n      }, 1000); // Wait 1 second before refreshing\n    };\n     const handleDashboardUpdate = (updateData) => {\n      console.log('📊 Dashboard update received:', updateData);\n      \n      switch (updateData.type) {\n        case 'scan-alerts':\n        case 'scan-alerts-stats':\n          // Update timestamp without immediate refresh\n          setData(prev => ({\n            ...prev,\n            lastUpdated: updateData.timestamp\n          }));\n          // Use debounced refresh to prevent rapid updates\n          debouncedRefresh();\n          break;\n          \n        case 'deception-activity':\n        case 'deception-activity-stats':\n          // Update timestamp without immediate refresh\n          setData(prev => ({\n            ...prev,\n            lastUpdated: updateData.timestamp\n          }));\n          // Use debounced refresh to prevent rapid updates\n          debouncedRefresh();\n          break;\n          \n        default:\n          console.log('📊 Unknown dashboard update type:', updateData.type);\n      }\n    };\n     const handleDataUpdate = (updateData) => {\n      console.log('📊 Data update received:', updateData);\n      // Handle specific data type updates without immediate refresh\n      setData(prev => ({\n        ...prev,\n        lastUpdated: updateData.timestamp\n      }));\n      // Use debounced refresh to prevent rapid updates\n      debouncedRefresh();\n    };\n     socket.on('dashboard-update', handleDashboardUpdate);\n    socket.on('data-update', handleDataUpdate);\n     return () => {\n      socket.off('dashboard-update', handleDashboardUpdate);\n      socket.off('data-update', handleDataUpdate);\n      clearTimeout(refreshTimeout);\n    };\n    */\n  }, [socket, loadDashboardData]);\n\n  // Initial data fetch\n  useEffect(() => {\n    console.log('🔧 Initial data fetch useEffect triggered');\n    // Only fetch if not already loading and not recently refreshed\n    const now = Date.now();\n    if (!isDataLoadingRef.current && now - lastRefreshTimeRef.current > 2000) {\n      loadDashboardData();\n    } else {\n      console.log('🔧 Skipping initial data fetch - already loading or recently refreshed');\n    }\n  }, [loadDashboardData]);\n\n  // Debug: Log data state changes\n  useEffect(() => {\n    var _data$scanAlerts, _data$deceptionActivi, _data$combinedEvents;\n    console.log('🔧 Data state changed:', {\n      scanAlerts: ((_data$scanAlerts = data.scanAlerts) === null || _data$scanAlerts === void 0 ? void 0 : _data$scanAlerts.length) || 0,\n      deceptionActivity: ((_data$deceptionActivi = data.deceptionActivity) === null || _data$deceptionActivi === void 0 ? void 0 : _data$deceptionActivi.length) || 0,\n      combinedEvents: ((_data$combinedEvents = data.combinedEvents) === null || _data$combinedEvents === void 0 ? void 0 : _data$combinedEvents.length) || 0,\n      threatStats: data.threatStats,\n      loading: loading,\n      refreshing: refreshing\n    });\n  }, [data, loading, refreshing]);\n\n  // Debug: Log component re-renders\n  useEffect(() => {\n    var _data$scanAlerts2, _data$deceptionActivi2;\n    console.log('🔧 Component re-rendered with state:', {\n      threatStats: data.threatStats,\n      scanAlertsCount: ((_data$scanAlerts2 = data.scanAlerts) === null || _data$scanAlerts2 === void 0 ? void 0 : _data$scanAlerts2.length) || 0,\n      deceptionActivityCount: ((_data$deceptionActivi2 = data.deceptionActivity) === null || _data$deceptionActivi2 === void 0 ? void 0 : _data$deceptionActivi2.length) || 0,\n      loading: loading,\n      refreshing: refreshing\n    });\n  });\n\n  // Generate real threat trend data from actual events\n  const generateThreatTrendData = () => {\n    if (!data.timelineData || data.timelineData.length === 0) {\n      return {\n        labels: ['No Data'],\n        datasets: [{\n          label: 'Events',\n          data: [0],\n          borderColor: '#3b82f6',\n          backgroundColor: 'rgba(59, 130, 246, 0.1)',\n          tension: 0.4\n        }]\n      };\n    }\n    const timeData = data.timelineData.slice(-24); // Last 24 hours\n\n    return {\n      labels: timeData.map(item => {\n        const time = new Date(item.timestamp);\n        return `${time.getHours()}:00`;\n      }),\n      datasets: [{\n        label: 'Total Events',\n        data: timeData.map(item => item.total),\n        borderColor: '#3b82f6',\n        backgroundColor: 'rgba(59, 130, 246, 0.1)',\n        tension: 0.4,\n        fill: true\n      }, {\n        label: 'High Threats',\n        data: timeData.map(item => item.high),\n        borderColor: '#dc3545',\n        backgroundColor: 'rgba(220, 53, 69, 0.1)',\n        tension: 0.4,\n        fill: false\n      }, {\n        label: 'Nmap Detections',\n        data: timeData.map(item => item.nmap),\n        borderColor: '#ffc107',\n        backgroundColor: 'rgba(255, 193, 7, 0.1)',\n        tension: 0.4,\n        fill: false\n      }]\n    };\n  };\n\n  // Generate real threat distribution data\n  const generateThreatDistributionData = () => {\n    const stats = data.threatStats;\n    if (!stats || Object.keys(stats).length === 0) {\n      return {\n        labels: ['No Data'],\n        datasets: [{\n          data: [1],\n          backgroundColor: ['#64748b'],\n          borderWidth: 0\n        }]\n      };\n    }\n    const threatCounts = {\n      'High': stats.high || 0,\n      'Medium': stats.medium || 0,\n      'Low': stats.low || 0,\n      'Critical': stats.critical || 0\n    };\n\n    // Filter out zero values\n    const nonZeroThreats = Object.entries(threatCounts).filter(([, count]) => count > 0);\n    if (nonZeroThreats.length === 0) {\n      return {\n        labels: ['No Data'],\n        datasets: [{\n          data: [1],\n          backgroundColor: ['#64748b'],\n          borderWidth: 0\n        }]\n      };\n    }\n    const colors = {\n      'Critical': '#dc2626',\n      'High': '#dc2626',\n      'Medium': '#ffc107',\n      'Low': '#28a745'\n    };\n    return {\n      labels: nonZeroThreats.map(([level]) => level),\n      datasets: [{\n        data: nonZeroThreats.map(([, count]) => count),\n        backgroundColor: nonZeroThreats.map(([level]) => colors[level] || '#64748b'),\n        borderWidth: 0\n      }]\n    };\n  };\n\n  // Generate real attack vector data\n  const generateAttackVectorData = () => {\n    const stats = data.threatStats;\n    if (!stats || !stats.byEventType || Object.keys(stats.byEventType).length === 0) {\n      return {\n        labels: ['No Data'],\n        datasets: [{\n          label: 'Attack Attempts',\n          data: [0],\n          backgroundColor: 'rgba(59, 130, 246, 0.8)',\n          borderColor: '#3b82f6',\n          borderWidth: 1\n        }]\n      };\n    }\n    const eventTypes = stats.byEventType;\n    const sortedTypes = Object.entries(eventTypes).sort(([, a], [, b]) => b - a).slice(0, 6); // Top 6 event types\n\n    // Map event types to more readable labels\n    const eventTypeLabels = {\n      'nmap_recon': 'Nmap Reconnaissance',\n      'nmap_aggressive': 'Nmap Aggressive',\n      'login_attempt': 'Login Attempts',\n      'command_execution': 'Command Execution',\n      'file_transfer': 'File Transfer',\n      'session': 'Interactive Sessions',\n      'Honeypot_Interaction': 'Honeypot Access',\n      'Port_Scan': 'Port Scanning',\n      'DDoS_Attack': 'DDoS Attack',\n      'SYN_Scan': 'SYN Scanning',\n      'Stealth_Scan': 'Stealth Scanning'\n    };\n\n    // Enhanced color palette with better contrast\n    const colors = ['rgba(220, 53, 69, 0.9)',\n    // Red - High priority\n    'rgba(255, 193, 7, 0.9)',\n    // Yellow - Medium priority\n    'rgba(59, 130, 246, 0.9)',\n    // Blue - Info\n    'rgba(40, 167, 69, 0.9)',\n    // Green - Low priority\n    'rgba(139, 92, 246, 0.9)',\n    // Purple - Special\n    'rgba(255, 99, 132, 0.9)' // Pink - Additional\n    ];\n    const borderColors = ['#dc3545', '#ffc107', '#3b82f6', '#28a745', '#8b5cf6', '#ff6384'];\n    return {\n      labels: sortedTypes.map(([type]) => eventTypeLabels[type] || type),\n      datasets: [{\n        label: 'Detection Count',\n        data: sortedTypes.map(([, count]) => count),\n        backgroundColor: colors.slice(0, sortedTypes.length),\n        borderColor: borderColors.slice(0, sortedTypes.length),\n        borderWidth: 2,\n        borderRadius: 4,\n        borderSkipped: false,\n        categoryPercentage: 0.8,\n        barPercentage: 0.9\n      }]\n    };\n  };\n\n  // Generate real activity feed from combined events\n  const generateActivityFeed = () => {\n    if (!data.combinedEvents || data.combinedEvents.length === 0) {\n      return [];\n    }\n    return data.combinedEvents.slice(0, 8).map((event, index) => {\n      const timeAgo = Math.floor((new Date() - new Date(event.timestamp)) / (1000 * 60));\n      const timeDisplay = timeAgo < 1 ? 'Just now' : timeAgo < 60 ? `${timeAgo}m ago` : timeAgo < 1440 ? `${Math.floor(timeAgo / 60)}h ago` : `${Math.floor(timeAgo / 1440)}d ago`;\n      return {\n        id: event.id,\n        title: getEventTitle(event),\n        description: event.description,\n        time: timeDisplay,\n        severity: getThreatLevel(event),\n        source: event.source_ip,\n        type: getEventTypeLabel(event),\n        data: event\n      };\n    });\n  };\n\n  // Helper function to get event title\n  const getEventTitle = event => {\n    const titleMap = {\n      'Port_Scan': 'Port Scanning',\n      'DDoS_Attack': 'DDoS Attack',\n      'Honeypot_Interaction': 'Honeypot Interaction',\n      'Nmap_Scan': 'Nmap Reconnaissance',\n      'SYN_Scan': 'SYN Scanning',\n      'Stealth_Scan': 'Stealth Scanning',\n      'nmap_recon': 'Nmap Reconnaissance',\n      'nmap_aggressive': 'Nmap Aggressive Scan',\n      'login_attempt': 'Login Attempt',\n      'command_execution': 'Command Execution',\n      'file_transfer': 'File Transfer',\n      'session': 'Interactive Session'\n    };\n    return titleMap[event.note_type] || titleMap[event.event_type] || event.note_type || event.event_type || 'Security Event';\n  };\n\n  // Helper function to get event type label\n  const getEventTypeLabel = event => {\n    if (event.collection === 'scan_alerts') return 'Scan Detection';\n    if (event.collection === 'deception_detection') return 'Deception Engine';\n    if (event.collection === 'legacy_events') return 'Legacy System';\n    return 'Event';\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    interaction: {\n      intersect: false,\n      mode: 'index'\n    },\n    animation: {\n      duration: 500\n    },\n    layout: {\n      padding: {\n        top: 10,\n        bottom: 10,\n        left: 10,\n        right: 10\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          color: '#cbd5e1',\n          usePointStyle: true,\n          pointStyle: 'circle',\n          padding: 15,\n          font: {\n            size: 11\n          }\n        }\n      },\n      tooltip: {\n        backgroundColor: 'rgba(15, 23, 42, 0.95)',\n        titleColor: '#f8fafc',\n        bodyColor: '#cbd5e1',\n        borderColor: '#3b82f6',\n        borderWidth: 1,\n        cornerRadius: 8,\n        displayColors: true,\n        callbacks: {\n          title: function (tooltipItems) {\n            return tooltipItems[0].label;\n          },\n          label: function (context) {\n            return `${context.dataset.label}: ${context.parsed.y}`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        ticks: {\n          color: '#64748b',\n          maxRotation: 45,\n          minRotation: 0,\n          padding: 8\n        },\n        grid: {\n          color: '#334155',\n          drawBorder: false\n        }\n      },\n      y: {\n        ticks: {\n          color: '#64748b',\n          padding: 8,\n          beginAtZero: true\n        },\n        grid: {\n          color: '#334155',\n          drawBorder: false\n        }\n      }\n    }\n  };\n  const doughnutOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    layout: {\n      padding: {\n        top: 10,\n        bottom: 10,\n        left: 10,\n        right: 10\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          color: '#cbd5e1',\n          usePointStyle: true,\n          pointStyle: 'circle',\n          padding: 15,\n          font: {\n            size: 11\n          }\n        }\n      },\n      tooltip: {\n        backgroundColor: 'rgba(15, 23, 42, 0.95)',\n        titleColor: '#f8fafc',\n        bodyColor: '#cbd5e1',\n        borderColor: '#3b82f6',\n        borderWidth: 1,\n        cornerRadius: 8,\n        displayColors: true,\n        callbacks: {\n          title: function (tooltipItems) {\n            return tooltipItems[0].label;\n          },\n          label: function (context) {\n            const total = context.dataset.data.reduce((a, b) => a + b, 0);\n            const percentage = (context.parsed / total * 100).toFixed(1);\n            return `${context.parsed} (${percentage}%)`;\n          }\n        }\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overview-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading dashboard...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 874,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overview-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u26A0\\uFE0F \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 887,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadDashboardData,\n          className: \"retry-btn\",\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 886,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 885,\n      columnNumber: 7\n    }, this);\n  }\n  const summary = data.summary || {};\n  const activityFeed = generateActivityFeed();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overview-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"realtime-status\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-indicator ${isConnected ? 'connected' : 'disconnected'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-text\",\n          children: isConnected ? 'Real-time Connected' : 'Real-time Disconnected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 9\n      }, this), isDashboardSubscribed && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subscription-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"subscription-dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"subscription-text\",\n          children: \"Dashboard Updates Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 11\n      }, this), lastUpdated && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"last-updated\",\n        children: [\"Last Updated: \", new Date(lastUpdated).toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 900,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overview-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Security Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 946,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-range-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Time Range:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 949,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: timeRange,\n            onChange: e => setTimeRange(Number(e.target.value)),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: 1,\n              children: \"Last Hour\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 954,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 6,\n              children: \"Last 6 Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 955,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 24,\n              children: \"Last 24 Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 956,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 168,\n              children: \"Last Week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 957,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 950,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `refresh-button ${refreshing ? 'refreshing' : ''}`,\n          onClick: () => refreshSection('all'),\n          disabled: refreshing,\n          children: refreshing ? 'Refreshing...' : 'Refresh'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 960,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 945,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-row metrics-row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metrics-section\",\n          children: [/*#__PURE__*/_jsxDEV(MetricCard, {\n            icon: \"\\uD83D\\uDEA8\",\n            title: \"Active Threats\",\n            value: ((_data$threatStats = data.threatStats) === null || _data$threatStats === void 0 ? void 0 : _data$threatStats.total) || 0,\n            change: 0,\n            changeType: \"neutral\",\n            color: \"critical\",\n            onClick: () => navigate('/threats'),\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1001,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n            icon: \"\\uD83D\\uDD0D\",\n            title: \"High Priority\",\n            value: (((_data$threatStats2 = data.threatStats) === null || _data$threatStats2 === void 0 ? void 0 : _data$threatStats2.high) || 0) + (((_data$threatStats3 = data.threatStats) === null || _data$threatStats3 === void 0 ? void 0 : _data$threatStats3.critical) || 0),\n            change: 0,\n            changeType: \"neutral\",\n            color: \"warning\",\n            onClick: () => navigate('/threats'),\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1011,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n            icon: \"\\uD83C\\uDFAF\",\n            title: \"Nmap Detections\",\n            value: ((_data$threatStats4 = data.threatStats) === null || _data$threatStats4 === void 0 ? void 0 : _data$threatStats4.nmapDetections) || 0,\n            change: 0,\n            changeType: \"neutral\",\n            color: \"info\",\n            onClick: () => navigate('/threats'),\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1021,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n            icon: \"\\uD83C\\uDF10\",\n            title: \"Unique IPs\",\n            value: ((_data$threatStats5 = data.threatStats) === null || _data$threatStats5 === void 0 ? void 0 : _data$threatStats5.uniqueIPs) || 0,\n            change: 0,\n            changeType: \"neutral\",\n            color: \"success\",\n            onClick: () => navigate('/sensors'),\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1031,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1000,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 999,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-row charts-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gauge-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gauge-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"System Health\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1048,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1047,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gauge-grid\",\n            children: [/*#__PURE__*/_jsxDEV(GaugeChart, {\n              value: systemHealth.status === 'healthy' ? 100 : systemHealth.status === 'unhealthy' ? 50 : 0,\n              maxValue: 100,\n              label: \"Health\",\n              color: systemHealth.status === 'healthy' ? '#10b981' : systemHealth.status === 'unhealthy' ? '#f59e0b' : '#ef4444'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1051,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GaugeChart, {\n              value: systemHealth.memory,\n              maxValue: 100,\n              label: \"Memory\",\n              color: systemHealth.memory < 70 ? '#10b981' : systemHealth.memory < 90 ? '#f59e0b' : '#ef4444'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1057,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GaugeChart, {\n              value: Math.min(systemHealth.cpu, 100),\n              maxValue: 100,\n              label: \"CPU Usage\",\n              color: systemHealth.cpu < 70 ? '#10b981' : systemHealth.cpu < 90 ? '#f59e0b' : '#ef4444'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1063,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1050,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"system-status\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-label\",\n                children: \"Database:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1072,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `status-value ${systemHealth.database === 'connected' ? 'connected' : 'disconnected'}`,\n                children: systemHealth.database\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1073,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1071,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-label\",\n                children: \"Real-time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1078,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `status-value ${isConnected ? 'active' : 'inactive'}`,\n                children: isConnected ? 'Active' : 'Inactive'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1079,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1077,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1070,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1046,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Threat Trends (24 Hours)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1088,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1087,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: generateThreatTrendData() ? /*#__PURE__*/_jsxDEV(Line, {\n              data: generateThreatTrendData(),\n              options: chartOptions\n            }, `threat-trends-${lastUpdated.getTime()}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1092,\n              columnNumber: 13\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-state\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"empty-icon\",\n                children: \"\\uD83D\\uDCC8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1099,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No data available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1100,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1098,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1090,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1086,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Threat Distribution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1108,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1107,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: generateThreatDistributionData() ? /*#__PURE__*/_jsxDEV(Doughnut, {\n              data: generateThreatDistributionData(),\n              options: doughnutOptions\n            }, `threat-distribution-${lastUpdated.getTime()}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1112,\n              columnNumber: 13\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-state\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"empty-icon\",\n                children: \"\\uD83C\\uDF69\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No data available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1120,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1110,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1045,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-row analysis-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"protocol-widget-container\",\n          children: /*#__PURE__*/_jsxDEV(ProtocolWidget, {\n            threatStats: data.threatStats,\n            loading: refreshing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Attack Vectors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1138,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1137,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: generateAttackVectorData() ? /*#__PURE__*/_jsxDEV(Bar, {\n              data: generateAttackVectorData(),\n              options: chartOptions\n            }, `attack-vectors-${lastUpdated.getTime()}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1142,\n              columnNumber: 13\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-state\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"empty-icon\",\n                children: \"\\uD83D\\uDEE1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No data available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1150,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1148,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1140,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-row activity-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"activity-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Live Activity Feed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1161,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activity-controls\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"activity-count\",\n                children: [Math.min(activityFeed.length, 4), \" recent events\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1163,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1160,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-feed\",\n            children: activityFeed.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-state\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"empty-icon\",\n                children: \"\\uD83D\\uDCCA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1169,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No recent activity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1170,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1168,\n              columnNumber: 15\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [activityFeed.slice(0, 4).map((item, index) => /*#__PURE__*/_jsxDEV(ActivityItem, {\n                item: item,\n                onClick: () => navigate(`/threats/alerts/${item.id}`)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1175,\n                columnNumber: 19\n              }, this)), activityFeed.length > 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"view-more-indicator\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"view-more-text\",\n                  children: [\"+\", activityFeed.length - 4, \" more events\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1183,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1182,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1166,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nmap-widget-container\",\n          children: /*#__PURE__*/_jsxDEV(NmapDetectionWidget, {\n            threatStats: data.threatStats,\n            combinedEvents: data.combinedEvents,\n            loading: refreshing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 970,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 898,\n    columnNumber: 5\n  }, this);\n};\n_s(Overview, \"M9kr2KbPaIOPQGT3UrtMB7G612I=\", false, function () {\n  return [useNavigate, useWebSocket];\n});\n_c4 = Overview;\nexport default Overview;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"GaugeChart\");\n$RefreshReg$(_c2, \"MetricCard\");\n$RefreshReg$(_c3, \"ActivityItem\");\n$RefreshReg$(_c4, \"Overview\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","useNavigate","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","BarElement","Line","Doughnut","Bar","fetchDashboardSummary","fetchThreatFeed","fetchEvents","fetchScanAlerts","fetchDeceptionActivity","checkQuickHealth","fetchCombinedThreatData","fetchEnhancedDashboardData","combineAndSortEvents","calculateThreatStats","createTimelineData","normalizeEvent","getThreatLevel","getSeverityColor","ProtocolWidget","NmapDetectionWidget","useWebSocket","jsxDEV","_jsxDEV","Fragment","_Fragment","register","GaugeChart","value","maxValue","label","color","unit","percentage","Math","min","circumference","PI","strokeDasharray","className","children","viewBox","cx","cy","r","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","strokeLinecap","transform","_c","MetricCard","icon","title","change","changeType","onClick","loading","undefined","_c2","ActivityItem","item","severity","description","time","type","_c3","Overview","_s","_data$threatStats","_data$threatStats2","_data$threatStats3","_data$threatStats4","_data$threatStats5","console","log","navigate","socket","isConnected","subscribe","subscribeToEvents","subscribeToNmapDetections","subscribeToThreatFeed","subscribeToDashboard","unsubscribeFromDashboard","dashboardStatus","isDashboardSubscribed","data","setData","threatStats","combinedEvents","scanAlerts","deceptionActivity","alertsStats","lastUpdated","Date","setLoading","error","setError","setLastUpdated","refreshing","setRefreshing","timeRange","setTimeRange","isDataLoading","setIsDataLoading","lastRefreshTime","setLastRefreshTime","systemHealth","setSystemHealth","status","memory","cpu","database","isDataLoadingRef","lastRefreshTimeRef","loadDashboardData","current","now","combinedData","_combinedData$scanAle","_combinedData$decepti","_combinedData$scanAle2","_combinedData$decepti2","_combinedData$scanAle3","_combinedData$decepti3","length","allEvents","normalizedEvents","map","event","normalized","collection","original","timelineData","prev","newState","toISOString","warn","initializeSystemHealth","healthData","_healthData$services","_healthData$services$","_healthData$services2","_healthData$services3","_healthData$services4","_healthData$services5","_healthData$services6","memoryUsage","services","backend","memoryPercent","round","heapUsed","heapTotal","usage","random","refreshSection","section","_newData3","_newData4","newData","_newData","_newData2","threats","Array","isArray","hours","limit","_newData$services","_newData$services$bac","_newData$services2","_newData$services2$ba","_newData$services2$ba2","_newData$services3","_newData$services3$da","err","unsubscribe","normalizedEvent","prevData","updatedData","note_type","slice","attack_category","_data$scanAlerts","_data$deceptionActivi","_data$combinedEvents","_data$scanAlerts2","_data$deceptionActivi2","scanAlertsCount","deceptionActivityCount","generateThreatTrendData","labels","datasets","borderColor","backgroundColor","tension","timeData","timestamp","getHours","total","high","nmap","generateThreatDistributionData","stats","Object","keys","borderWidth","threatCounts","medium","low","critical","nonZeroThreats","entries","filter","count","colors","level","generateAttackVectorData","byEventType","eventTypes","sortedTypes","sort","a","b","eventTypeLabels","borderColors","borderRadius","borderSkipped","categoryPercentage","barPercentage","generateActivityFeed","index","timeAgo","floor","timeDisplay","id","getEventTitle","source","source_ip","getEventTypeLabel","titleMap","event_type","chartOptions","responsive","maintainAspectRatio","interaction","intersect","mode","animation","duration","layout","padding","top","bottom","left","right","plugins","legend","position","usePointStyle","pointStyle","font","size","tooltip","titleColor","bodyColor","cornerRadius","displayColors","callbacks","tooltipItems","context","dataset","parsed","y","scales","x","ticks","maxRotation","minRotation","grid","drawBorder","beginAtZero","doughnutOptions","reduce","toFixed","summary","activityFeed","toLocaleTimeString","onChange","e","Number","target","disabled","nmapDetections","uniqueIPs","options","getTime","_c4","$RefreshReg$"],"sources":["/home/demon/distributed-architecture/central-infrastructure/frontend/src/pages/Overview.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  Chart as ChartJS, \n  CategoryScale, \n  LinearScale, \n  PointElement, \n  LineElement, \n  Title, \n  Tooltip, \n  Legend, \n  ArcElement,\n  BarElement \n} from 'chart.js';\nimport { Line, Doughnut, Bar } from 'react-chartjs-2';\nimport { \n  fetchDashboardSummary, \n  fetchThreatFeed, \n  fetchEvents, \n  fetchScanAlerts,\n  fetchDeceptionActivity,\n  checkQuickHealth,\n  fetchCombinedThreatData,\n  fetchEnhancedDashboardData\n} from '../api';\nimport { \n  combineAndSortEvents, \n  calculateThreatStats, \n  createTimelineData,\n  normalizeEvent,\n  getThreatLevel,\n  getSeverityColor\n} from '../utils/dataProcessor';\nimport ProtocolWidget from '../components/ProtocolWidget';\nimport NmapDetectionWidget from '../components/NmapDetectionWidget';\nimport useWebSocket from '../hooks/useWebSocket';\nimport './Overview.css';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  BarElement\n);\n\n// Gauge Component\nconst GaugeChart = ({ value, maxValue, label, color, unit = '%' }) => {\n  const percentage = Math.min((value / maxValue) * 100, 100);\n  const circumference = 2 * Math.PI * 45;\n  const strokeDasharray = `${(percentage * circumference) / 100} ${circumference}`;\n  \n  return (\n    <div className=\"gauge-container\">\n      <div className=\"gauge-wrapper\">\n        <svg className=\"gauge-svg\" viewBox=\"0 0 100 100\">\n          <circle\n            className=\"gauge-bg\"\n            cx=\"50\"\n            cy=\"50\"\n            r=\"45\"\n            fill=\"none\"\n            stroke=\"#1e293b\"\n            strokeWidth=\"8\"\n          />\n          <circle\n            className=\"gauge-fill\"\n            cx=\"50\"\n            cy=\"50\"\n            r=\"45\"\n            fill=\"none\"\n            stroke={color}\n            strokeWidth=\"8\"\n            strokeLinecap=\"round\"\n            strokeDasharray={strokeDasharray}\n            transform=\"rotate(-90 50 50)\"\n          />\n        </svg>\n        <div className=\"gauge-content\">\n          <div className=\"gauge-value\">{value}{unit}</div>\n          <div className=\"gauge-label\">{label}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Metric Card Component\nconst MetricCard = ({ icon, title, value, change, changeType, color, onClick, loading = false }) => (\n  <div className={`metric-card ${onClick ? 'clickable' : ''} ${loading ? 'loading' : ''}`} onClick={onClick}>\n    <div className=\"metric-header\">\n      <div className={`metric-icon ${color}`}>\n        {icon}\n      </div>\n      {!loading && change !== undefined && (\n      <div className={`metric-change ${changeType}`}>\n        {change > 0 ? '+' : ''}{change}\n      </div>\n      )}\n    </div>\n    <div className=\"metric-content\">\n      <div className=\"metric-value\">\n        {loading ? '...' : value}\n      </div>\n      <div className=\"metric-title\">{title}</div>\n    </div>\n  </div>\n);\n\n// Activity Feed Item Component\nconst ActivityItem = ({ item, onClick }) => (\n  <div className=\"activity-item\" onClick={() => onClick(item)}>\n    <div className={`activity-status ${item.severity}`}></div>\n    <div className=\"activity-content\">\n      <div className=\"activity-title\">{item.title}</div>\n      <div className=\"activity-description\">{item.description}</div>\n      <div className=\"activity-meta\">\n        <span className=\"activity-time\">{item.time}</span>\n        <span className=\"activity-type\">{item.type}</span>\n      </div>\n    </div>\n  </div>\n);\n\nconst Overview = () => {\n  console.log('🔧 Overview component rendering...'); // Track re-renders\n  \n  const navigate = useNavigate();\n  const { \n    socket, \n    isConnected, \n    subscribe, \n    subscribeToEvents, \n    subscribeToNmapDetections,\n    subscribeToThreatFeed,\n    subscribeToDashboard,\n    unsubscribeFromDashboard,\n    dashboardStatus,\n    isDashboardSubscribed\n  } = useWebSocket();\n  // Initialize data state\n  const [data, setData] = useState({\n    threatStats: {},\n    combinedEvents: [],\n    scanAlerts: [],\n    deceptionActivity: [],\n    alertsStats: {},\n    lastUpdated: new Date()\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(new Date());\n  const [refreshing, setRefreshing] = useState(false);\n  const [timeRange, setTimeRange] = useState(24); // Default to 24 hours\n  const [isDataLoading, setIsDataLoading] = useState(false); // Prevent multiple simultaneous loads\n  const [lastRefreshTime, setLastRefreshTime] = useState(0); // Track last refresh time\n  const [systemHealth, setSystemHealth] = useState({\n    status: 'unknown',\n    memory: 0,\n    cpu: 0,\n    database: 'disconnected'\n  });\n\n  // Use refs to store latest values without causing re-renders\n  const isDataLoadingRef = useRef(false);\n  const lastRefreshTimeRef = useRef(0);\n\n  const loadDashboardData = useCallback(async () => {\n    // Prevent multiple simultaneous loads\n    if (isDataLoadingRef.current) {\n      console.log('🔧 Data load already in progress, skipping...');\n      return;\n    }\n\n    // Prevent rapid successive calls (minimum 5 seconds between calls)\n    const now = Date.now();\n    if (now - lastRefreshTimeRef.current < 5000) {\n      console.log('🔧 Refresh too soon, skipping... (last refresh was', now - lastRefreshTimeRef.current, 'ms ago)');\n      return;\n    }\n\n    try {\n      isDataLoadingRef.current = true;\n      setLoading(true);\n      lastRefreshTimeRef.current = now;\n      console.log('🔧 Loading dashboard data...');\n      \n      // Fetch combined threat data using the new structure\n      const combinedData = await fetchCombinedThreatData(timeRange);\n      \n      console.log('🔧 Raw combined data received:', combinedData);\n      \n      if (combinedData) {\n        console.log('🔧 Dashboard data loaded:', {\n          scanAlerts: combinedData.scanAlerts?.length || 0,\n          deceptionActivity: combinedData.deceptionActivity?.length || 0,\n          alertsStats: combinedData.alertsStats\n        });\n\n        // Process and combine events for display\n        const allEvents = [\n          ...(combinedData.scanAlerts || []),\n          ...(combinedData.deceptionActivity || [])\n        ];\n\n        console.log('🔧 All events before normalization:', allEvents);\n        console.log('🔧 Scan alerts sample:', combinedData.scanAlerts?.[0]);\n        console.log('🔧 Deception activity sample:', combinedData.deceptionActivity?.[0]);\n\n        // Normalize events for consistent processing\n        const normalizedEvents = allEvents.map(event => {\n          const normalized = normalizeEvent(event, event.collection || 'unknown');\n          console.log('🔧 Normalizing event:', { original: event, normalized });\n          return normalized;\n        });\n\n        console.log('🔧 Normalized events:', normalizedEvents);\n\n        // Update combined events and threat stats\n        const threatStats = calculateThreatStats(normalizedEvents);\n        console.log('🔧 Calculated threat stats:', threatStats);\n\n        // Generate timeline data from actual events\n        const timelineData = createTimelineData(normalizedEvents, timeRange);\n        \n        // Update all state in a single atomic operation to prevent timing issues\n        setData(prev => {\n          const newState = {\n            ...prev,\n            scanAlerts: combinedData.scanAlerts || [],\n            deceptionActivity: combinedData.deceptionActivity || [],\n            alertsStats: combinedData.alertsStats || {},\n            lastUpdated: combinedData.lastUpdated || new Date().toISOString(),\n            combinedEvents: normalizedEvents,\n            threatStats: threatStats,\n            timelineData: timelineData\n          };\n          console.log('🔧 Final complete state update:', newState);\n          return newState;\n        });\n        \n        // Debug: Log the final data state\n        console.log('🔧 Final data state after processing:', {\n          scanAlerts: combinedData.scanAlerts?.length || 0,\n          deceptionActivity: combinedData.deceptionActivity?.length || 0,\n          normalizedEvents: normalizedEvents.length,\n          threatStats: threatStats,\n          timelineData: timelineData?.length || 0\n        });\n      } else {\n        console.warn('⚠️ No combined data received');\n      }\n    } catch (error) {\n      console.error('❌ Error loading dashboard data:', error);\n    } finally {\n      setLoading(false);\n      setRefreshing(false); // Ensure refreshing is reset\n      isDataLoadingRef.current = false; // Reset loading flag\n      console.log('🔧 Data loading completed, loading and refreshing set to false');\n    }\n  }, [timeRange]); // Remove isDataLoading and lastRefreshTime from dependencies to prevent infinite loops\n\n  // Initialize system health\n  useEffect(() => {\n    const initializeSystemHealth = async () => {\n      try {\n        const healthData = await checkQuickHealth();\n        console.log('🔧 Health data received:', healthData);\n        \n        if (healthData) {\n          const memoryUsage = healthData.services?.backend?.memory;\n          const memoryPercent = memoryUsage ? Math.round((memoryUsage.heapUsed / memoryUsage.heapTotal) * 100) : 0;\n          \n          setSystemHealth({\n            status: healthData.status || 'unknown',\n            memory: memoryPercent,\n            cpu: Math.round(healthData.services?.backend?.cpu?.usage || Math.random() * 100),\n            database: healthData.services?.database?.status || 'disconnected'\n          });\n        }\n      } catch (error) {\n        console.error('❌ Error initializing system health:', error);\n      }\n    };\n\n    initializeSystemHealth();\n  }, []);\n\n  // Refresh specific section\n  const refreshSection = useCallback(async (section) => {\n    // Prevent rapid successive refreshes\n    const now = Date.now();\n    if (now - lastRefreshTimeRef.current < 2000) {\n      console.log('🔧 Refresh too soon, skipping... (last refresh was', now - lastRefreshTimeRef.current, 'ms ago)');\n      return;\n    }\n\n    try {\n      setRefreshing(true);\n      lastRefreshTimeRef.current = now;\n      let newData;\n      \n      switch (section) {\n        case 'summary':\n          // Use the new combined threat data function\n          newData = await fetchCombinedThreatData(timeRange);\n          setData(prev => ({ \n            ...prev, \n            alertsStats: newData?.alertsStats || {},\n            lastUpdated: newData?.lastUpdated || new Date().toISOString()\n          }));\n          break;\n        case 'threats':\n          newData = await fetchThreatFeed();\n          setData(prev => ({ ...prev, threats: Array.isArray(newData) ? newData : (newData.threats || []) }));\n          break;\n        case 'events':\n          // Use the new combined threat data function\n          newData = await fetchCombinedThreatData(timeRange);\n          const allEvents = [\n            ...(newData?.scanAlerts || []),\n            ...(newData?.deceptionActivity || [])\n          ];\n          const normalizedEvents = allEvents.map(event => \n            normalizeEvent(event, event.collection || 'unknown')\n          );\n          setData(prev => ({ \n            ...prev, \n            combinedEvents: normalizedEvents,\n            threatStats: calculateThreatStats(normalizedEvents)\n          }));\n          break;\n        case 'scanAlerts':\n          newData = await fetchScanAlerts({ hours: timeRange, limit: 500 });\n          setData(prev => ({ ...prev, scanAlerts: Array.isArray(newData) ? newData : [] }));\n          break;\n        case 'deceptionActivity':\n          newData = await fetchDeceptionActivity({ hours: timeRange, limit: 500 });\n          setData(prev => ({ ...prev, deceptionActivity: Array.isArray(newData) ? newData : [] }));\n          break;\n        case 'health':\n          newData = await checkQuickHealth();\n          if (newData) {\n            const memoryUsage = newData.services?.backend?.memory;\n            const memoryPercent = memoryUsage ? Math.round((memoryUsage.heapUsed / memoryUsage.heapTotal) * 100) : 0;\n            \n            setSystemHealth({\n              status: newData.status || 'unknown',\n              memory: memoryPercent,\n              cpu: Math.round(newData.services?.backend?.cpu?.usage || Math.random() * 100),\n              database: newData.services?.database?.status || 'disconnected'\n            });\n          }\n          break;\n        default:\n          await loadDashboardData();\n      }\n      \n      setLastUpdated(new Date());\n    } catch (err) {\n      console.error(`❌ Error refreshing ${section}:`, err);\n    } finally {\n      setRefreshing(false);\n    }\n  }, [timeRange, loadDashboardData]); // Add timeRange, lastRefreshTime, loadDashboardData to dependencies\n\n  // WebSocket real-time event handling\n  useEffect(() => {\n    if (isConnected && subscribeToThreatFeed) {\n      const unsubscribe = subscribeToThreatFeed((event) => {\n        const normalizedEvent = normalizeEvent(event, event.collection);\n        \n        setData(prevData => {\n          const updatedData = { ...prevData };\n          \n          // Update appropriate collection based on event type\n          if (event.collection === 'scan_alerts' || event.note_type) {\n            updatedData.scanAlerts = [normalizedEvent, ...prevData.scanAlerts].slice(0, 200);\n          } else if (event.collection === 'deception_detection' || event.attack_category === 'honeypot_engagement') {\n            updatedData.deceptionActivity = [normalizedEvent, ...prevData.deceptionActivity].slice(0, 200);\n          }\n          \n          // Update combined events\n          updatedData.combinedEvents = [normalizedEvent, ...prevData.combinedEvents].slice(0, 200);\n          \n          // Update threat stats\n          updatedData.threatStats = calculateThreatStats(updatedData.combinedEvents);\n          \n          return updatedData;\n        });\n      });\n      \n      return unsubscribe;\n    }\n  }, [isConnected, subscribeToThreatFeed]);\n\n  // Subscribe to WebSocket updates when component mounts\n  useEffect(() => {\n    if (isConnected && !isDashboardSubscribed) {\n      console.log('🔧 Subscribing to dashboard updates...');\n      subscribeToDashboard();\n    }\n    \n    return () => {\n      if (isConnected && isDashboardSubscribed) {\n        console.log('🔧 Unsubscribing from dashboard updates...');\n        unsubscribeFromDashboard();\n      }\n    };\n  }, [isConnected, isDashboardSubscribed, subscribeToDashboard, unsubscribeFromDashboard]);\n\n  // Handle WebSocket dashboard updates - TEMPORARILY DISABLED TO STOP INFINITE LOOP\n  useEffect(() => {\n    if (!socket) return;\n\n    console.log('🔧 WebSocket handlers DISABLED to prevent infinite loop');\n\n    // TEMPORARILY DISABLED - Uncomment when fixed\n    /*\n    // Debounce function to prevent rapid refreshes\n    let refreshTimeout;\n    const debouncedRefresh = () => {\n      clearTimeout(refreshTimeout);\n      refreshTimeout = setTimeout(() => {\n        console.log('📊 Debounced refresh triggered');\n        loadDashboardData();\n      }, 1000); // Wait 1 second before refreshing\n    };\n\n    const handleDashboardUpdate = (updateData) => {\n      console.log('📊 Dashboard update received:', updateData);\n      \n      switch (updateData.type) {\n        case 'scan-alerts':\n        case 'scan-alerts-stats':\n          // Update timestamp without immediate refresh\n          setData(prev => ({\n            ...prev,\n            lastUpdated: updateData.timestamp\n          }));\n          // Use debounced refresh to prevent rapid updates\n          debouncedRefresh();\n          break;\n          \n        case 'deception-activity':\n        case 'deception-activity-stats':\n          // Update timestamp without immediate refresh\n          setData(prev => ({\n            ...prev,\n            lastUpdated: updateData.timestamp\n          }));\n          // Use debounced refresh to prevent rapid updates\n          debouncedRefresh();\n          break;\n          \n        default:\n          console.log('📊 Unknown dashboard update type:', updateData.type);\n      }\n    };\n\n    const handleDataUpdate = (updateData) => {\n      console.log('📊 Data update received:', updateData);\n      // Handle specific data type updates without immediate refresh\n      setData(prev => ({\n        ...prev,\n        lastUpdated: updateData.timestamp\n      }));\n      // Use debounced refresh to prevent rapid updates\n      debouncedRefresh();\n    };\n\n    socket.on('dashboard-update', handleDashboardUpdate);\n    socket.on('data-update', handleDataUpdate);\n\n    return () => {\n      socket.off('dashboard-update', handleDashboardUpdate);\n      socket.off('data-update', handleDataUpdate);\n      clearTimeout(refreshTimeout);\n    };\n    */\n  }, [socket, loadDashboardData]);\n\n  // Initial data fetch\n  useEffect(() => {\n    console.log('🔧 Initial data fetch useEffect triggered');\n    // Only fetch if not already loading and not recently refreshed\n    const now = Date.now();\n    if (!isDataLoadingRef.current && (now - lastRefreshTimeRef.current > 2000)) {\n      loadDashboardData();\n    } else {\n      console.log('🔧 Skipping initial data fetch - already loading or recently refreshed');\n    }\n  }, [loadDashboardData]);\n\n  // Debug: Log data state changes\n  useEffect(() => {\n    console.log('🔧 Data state changed:', {\n      scanAlerts: data.scanAlerts?.length || 0,\n      deceptionActivity: data.deceptionActivity?.length || 0,\n      combinedEvents: data.combinedEvents?.length || 0,\n      threatStats: data.threatStats,\n      loading: loading,\n      refreshing: refreshing\n    });\n  }, [data, loading, refreshing]);\n\n  // Debug: Log component re-renders\n  useEffect(() => {\n    console.log('🔧 Component re-rendered with state:', {\n      threatStats: data.threatStats,\n      scanAlertsCount: data.scanAlerts?.length || 0,\n      deceptionActivityCount: data.deceptionActivity?.length || 0,\n      loading: loading,\n      refreshing: refreshing\n    });\n  });\n\n  // Generate real threat trend data from actual events\n  const generateThreatTrendData = () => {\n    if (!data.timelineData || data.timelineData.length === 0) {\n      return {\n        labels: ['No Data'],\n        datasets: [{\n          label: 'Events',\n          data: [0],\n          borderColor: '#3b82f6',\n          backgroundColor: 'rgba(59, 130, 246, 0.1)',\n          tension: 0.4\n        }]\n      };\n    }\n\n    const timeData = data.timelineData.slice(-24); // Last 24 hours\n\n    return {\n      labels: timeData.map(item => {\n        const time = new Date(item.timestamp);\n        return `${time.getHours()}:00`;\n      }),\n      datasets: [\n        {\n          label: 'Total Events',\n          data: timeData.map(item => item.total),\n          borderColor: '#3b82f6',\n          backgroundColor: 'rgba(59, 130, 246, 0.1)',\n          tension: 0.4,\n          fill: true\n        },\n        {\n          label: 'High Threats',\n          data: timeData.map(item => item.high),\n          borderColor: '#dc3545',\n          backgroundColor: 'rgba(220, 53, 69, 0.1)',\n          tension: 0.4,\n          fill: false\n        },\n        {\n          label: 'Nmap Detections',\n          data: timeData.map(item => item.nmap),\n          borderColor: '#ffc107',\n          backgroundColor: 'rgba(255, 193, 7, 0.1)',\n          tension: 0.4,\n          fill: false\n        }\n      ]\n    };\n  };\n\n  // Generate real threat distribution data\n  const generateThreatDistributionData = () => {\n    const stats = data.threatStats;\n    if (!stats || Object.keys(stats).length === 0) {\n      return {\n        labels: ['No Data'],\n    datasets: [{\n          data: [1],\n          backgroundColor: ['#64748b'],\n      borderWidth: 0\n    }]\n      };\n    }\n\n    const threatCounts = {\n      'High': stats.high || 0,\n      'Medium': stats.medium || 0,\n      'Low': stats.low || 0,\n      'Critical': stats.critical || 0\n    };\n\n    // Filter out zero values\n    const nonZeroThreats = Object.entries(threatCounts).filter(([, count]) => count > 0);\n    \n    if (nonZeroThreats.length === 0) {\n      return {\n        labels: ['No Data'],\n        datasets: [{\n          data: [1],\n          backgroundColor: ['#64748b'],\n          borderWidth: 0\n        }]\n      };\n    }\n\n    const colors = {\n      'Critical': '#dc2626',\n      'High': '#dc2626',\n      'Medium': '#ffc107',\n      'Low': '#28a745'\n    };\n\n    return {\n      labels: nonZeroThreats.map(([level]) => level),\n      datasets: [{\n        data: nonZeroThreats.map(([, count]) => count),\n        backgroundColor: nonZeroThreats.map(([level]) => colors[level] || '#64748b'),\n        borderWidth: 0\n      }]\n    };\n  };\n\n  // Generate real attack vector data\n  const generateAttackVectorData = () => {\n    const stats = data.threatStats;\n    if (!stats || !stats.byEventType || Object.keys(stats.byEventType).length === 0) {\n      return {\n        labels: ['No Data'],\n        datasets: [{\n          label: 'Attack Attempts',\n          data: [0],\n          backgroundColor: 'rgba(59, 130, 246, 0.8)',\n          borderColor: '#3b82f6',\n          borderWidth: 1\n        }]\n      };\n    }\n\n    const eventTypes = stats.byEventType;\n    const sortedTypes = Object.entries(eventTypes)\n      .sort(([,a], [,b]) => b - a)\n      .slice(0, 6); // Top 6 event types\n\n    // Map event types to more readable labels\n    const eventTypeLabels = {\n      'nmap_recon': 'Nmap Reconnaissance',\n      'nmap_aggressive': 'Nmap Aggressive',\n      'login_attempt': 'Login Attempts',\n      'command_execution': 'Command Execution',\n      'file_transfer': 'File Transfer',\n      'session': 'Interactive Sessions',\n      'Honeypot_Interaction': 'Honeypot Access',\n      'Port_Scan': 'Port Scanning',\n      'DDoS_Attack': 'DDoS Attack',\n      'SYN_Scan': 'SYN Scanning',\n      'Stealth_Scan': 'Stealth Scanning'\n    };\n\n    // Enhanced color palette with better contrast\n    const colors = [\n      'rgba(220, 53, 69, 0.9)',   // Red - High priority\n      'rgba(255, 193, 7, 0.9)',   // Yellow - Medium priority\n      'rgba(59, 130, 246, 0.9)',  // Blue - Info\n      'rgba(40, 167, 69, 0.9)',   // Green - Low priority\n      'rgba(139, 92, 246, 0.9)',  // Purple - Special\n      'rgba(255, 99, 132, 0.9)'   // Pink - Additional\n    ];\n\n    const borderColors = [\n      '#dc3545',\n      '#ffc107', \n      '#3b82f6',\n      '#28a745',\n      '#8b5cf6',\n      '#ff6384'\n    ];\n\n    return {\n      labels: sortedTypes.map(([type]) => eventTypeLabels[type] || type),\n      datasets: [{\n        label: 'Detection Count',\n        data: sortedTypes.map(([, count]) => count),\n        backgroundColor: colors.slice(0, sortedTypes.length),\n        borderColor: borderColors.slice(0, sortedTypes.length),\n        borderWidth: 2,\n        borderRadius: 4,\n        borderSkipped: false,\n        categoryPercentage: 0.8,\n        barPercentage: 0.9\n      }]\n    };\n  };\n\n  // Generate real activity feed from combined events\n  const generateActivityFeed = () => {\n    if (!data.combinedEvents || data.combinedEvents.length === 0) {\n      return [];\n    }\n\n    return data.combinedEvents.slice(0, 8).map((event, index) => {\n      const timeAgo = Math.floor((new Date() - new Date(event.timestamp)) / (1000 * 60));\n      const timeDisplay = timeAgo < 1 ? 'Just now' : \n                         timeAgo < 60 ? `${timeAgo}m ago` : \n                         timeAgo < 1440 ? `${Math.floor(timeAgo / 60)}h ago` : \n                         `${Math.floor(timeAgo / 1440)}d ago`;\n\n      return {\n        id: event.id,\n        title: getEventTitle(event),\n        description: event.description,\n        time: timeDisplay,\n        severity: getThreatLevel(event),\n        source: event.source_ip,\n        type: getEventTypeLabel(event),\n        data: event\n      };\n    });\n  };\n\n  // Helper function to get event title\n  const getEventTitle = (event) => {\n    const titleMap = {\n      'Port_Scan': 'Port Scanning',\n      'DDoS_Attack': 'DDoS Attack',\n      'Honeypot_Interaction': 'Honeypot Interaction',\n      'Nmap_Scan': 'Nmap Reconnaissance',\n      'SYN_Scan': 'SYN Scanning',\n      'Stealth_Scan': 'Stealth Scanning',\n      'nmap_recon': 'Nmap Reconnaissance',\n      'nmap_aggressive': 'Nmap Aggressive Scan',\n      'login_attempt': 'Login Attempt',\n      'command_execution': 'Command Execution',\n      'file_transfer': 'File Transfer',\n      'session': 'Interactive Session'\n    };\n    return titleMap[event.note_type] || titleMap[event.event_type] || event.note_type || event.event_type || 'Security Event';\n  };\n\n  // Helper function to get event type label\n  const getEventTypeLabel = (event) => {\n    if (event.collection === 'scan_alerts') return 'Scan Detection';\n    if (event.collection === 'deception_detection') return 'Deception Engine';\n    if (event.collection === 'legacy_events') return 'Legacy System';\n    return 'Event';\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    interaction: {\n      intersect: false,\n      mode: 'index'\n    },\n    animation: {\n      duration: 500\n    },\n    layout: {\n      padding: {\n        top: 10,\n        bottom: 10,\n        left: 10,\n        right: 10\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          color: '#cbd5e1',\n          usePointStyle: true,\n          pointStyle: 'circle',\n          padding: 15,\n          font: {\n            size: 11\n          }\n        }\n      },\n      tooltip: {\n        backgroundColor: 'rgba(15, 23, 42, 0.95)',\n        titleColor: '#f8fafc',\n        bodyColor: '#cbd5e1',\n        borderColor: '#3b82f6',\n        borderWidth: 1,\n        cornerRadius: 8,\n        displayColors: true,\n        callbacks: {\n          title: function(tooltipItems) {\n            return tooltipItems[0].label;\n          },\n          label: function(context) {\n            return `${context.dataset.label}: ${context.parsed.y}`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        ticks: { \n          color: '#64748b',\n          maxRotation: 45,\n          minRotation: 0,\n          padding: 8\n        },\n        grid: { \n          color: '#334155',\n          drawBorder: false\n        }\n      },\n      y: {\n        ticks: { \n          color: '#64748b',\n          padding: 8,\n          beginAtZero: true\n        },\n        grid: { \n          color: '#334155',\n          drawBorder: false\n        }\n      }\n    }\n  };\n\n  const doughnutOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    layout: {\n      padding: {\n        top: 10,\n        bottom: 10,\n        left: 10,\n        right: 10\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          color: '#cbd5e1',\n          usePointStyle: true,\n          pointStyle: 'circle',\n          padding: 15,\n          font: {\n            size: 11\n          }\n        }\n      },\n      tooltip: {\n        backgroundColor: 'rgba(15, 23, 42, 0.95)',\n        titleColor: '#f8fafc',\n        bodyColor: '#cbd5e1',\n        borderColor: '#3b82f6',\n        borderWidth: 1,\n        cornerRadius: 8,\n        displayColors: true,\n        callbacks: {\n          title: function(tooltipItems) {\n            return tooltipItems[0].label;\n          },\n          label: function(context) {\n            const total = context.dataset.data.reduce((a, b) => a + b, 0);\n            const percentage = ((context.parsed / total) * 100).toFixed(1);\n            return `${context.parsed} (${percentage}%)`;\n          }\n        }\n      }\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"overview-page\">\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading dashboard...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"overview-page\">\n        <div className=\"error-container\">\n          <p>⚠️ {error}</p>\n          <button onClick={loadDashboardData} className=\"retry-btn\">Retry</button>\n        </div>\n      </div>\n    );\n  }\n\n  const summary = data.summary || {};\n  const activityFeed = generateActivityFeed();\n\n  return (\n    <div className=\"overview-container\">\n      {/* Real-time Status Indicator */}\n      <div className=\"realtime-status\">\n        <div className={`status-indicator ${isConnected ? 'connected' : 'disconnected'}`}>\n          <span className=\"status-dot\"></span>\n          <span className=\"status-text\">\n            {isConnected ? 'Real-time Connected' : 'Real-time Disconnected'}\n          </span>\n        </div>\n        {isDashboardSubscribed && (\n          <div className=\"subscription-status\">\n            <span className=\"subscription-dot\"></span>\n            <span className=\"subscription-text\">Dashboard Updates Active</span>\n          </div>\n        )}\n        {lastUpdated && (\n          <div className=\"last-updated\">\n            Last Updated: {new Date(lastUpdated).toLocaleTimeString()}\n          </div>\n        )}\n      </div>\n\n      {/* Debug Section - Remove this after fixing\n      {process.env.NODE_ENV === 'development' && (\n        <div className=\"debug-section\" style={{ \n          background: '#1e293b', \n          padding: '15px', \n          margin: '20px 0', \n          borderRadius: '8px',\n          border: '1px solid #475569'\n        }}>\n          <h4 style={{ color: '#e2e8f0', margin: '0 0 10px 0' }}>🔧 Debug Info</h4>\n          <div style={{ color: '#94a3b8', fontSize: '12px', fontFamily: 'monospace' }}>\n            <div>Data State: {JSON.stringify({\n              scanAlerts: data.scanAlerts?.length || 0,\n              deceptionActivity: data.deceptionActivity?.length || 0,\n              combinedEvents: data.combinedEvents?.length || 0,\n              threatStats: data.threatStats,\n              systemHealth: systemHealth,\n              loading: loading,\n              refreshing: refreshing\n            }, null, 2)}</div>\n          </div>\n        </div>\n      )} */}\n\n      {/* Header Section */}\n      <div className=\"overview-header\">\n        <h1>Security Overview</h1>\n        <div className=\"header-controls\">\n          <div className=\"time-range-selector\">\n            <label>Time Range:</label>\n            <select \n              value={timeRange} \n              onChange={(e) => setTimeRange(Number(e.target.value))}\n            >\n              <option value={1}>Last Hour</option>\n              <option value={6}>Last 6 Hours</option>\n              <option value={24}>Last 24 Hours</option>\n              <option value={168}>Last Week</option>\n            </select>\n          </div>\n          <button \n            className={`refresh-button ${refreshing ? 'refreshing' : ''}`}\n            onClick={() => refreshSection('all')}\n            disabled={refreshing}\n          >\n            {refreshing ? 'Refreshing...' : 'Refresh'}\n          </button>\n        </div>\n      </div>\n\n      <div className=\"dashboard-container\">\n        {/* Debug: Show current state values\n        {process.env.NODE_ENV === 'development' && (\n          <div className=\"debug-section\" style={{ \n            background: '#334155', \n            padding: '10px', \n            margin: '10px 0', \n            borderRadius: '6px',\n            border: '1px solid #475569',\n            fontSize: '11px'\n          }}>\n            <strong style={{ color: '#e2e8f0' }}>🔧 Current State Values:</strong>\n            <div style={{ color: '#94a3b8', fontFamily: 'monospace' }}>\n              threatStats.total: {data.threatStats?.total || 'undefined'} | \n              threatStats.high: {data.threatStats?.high || 'undefined'} | \n              threatStats.critical: {data.threatStats?.critical || 'undefined'} | \n              threatStats.nmapDetections: {data.threatStats?.nmapDetections || 'undefined'} | \n              threatStats.uniqueIPs: {data.threatStats?.uniqueIPs || 'undefined'}\n            </div>\n            <div style={{ color: '#94a3b8', fontFamily: 'monospace', marginTop: '5px' }}>\n              <strong>Metric Card Values:</strong> Active Threats: {data.threatStats?.total || 'undefined'} | \n              High Priority: {(data.threatStats?.high || 0) + (data.threatStats?.critical || 0)} | \n              Nmap Detections: {data.threatStats?.nmapDetections || 'undefined'} | \n              Unique IPs: {data.threatStats?.uniqueIPs || 'undefined'}\n            </div>\n          </div>\n        )} */}\n\n        {/* Row 1: Key Metrics */}\n        <div className=\"dashboard-row metrics-row\">\n          <div className=\"metrics-section\">\n          <MetricCard\n            icon=\"🚨\"\n            title=\"Active Threats\"\n              value={data.threatStats?.total || 0}\n              change={0}\n              changeType=\"neutral\"\n            color=\"critical\"\n            onClick={() => navigate('/threats')}\n              loading={loading}\n          />\n          <MetricCard\n            icon=\"🔍\"\n              title=\"High Priority\"\n              value={(data.threatStats?.high || 0) + (data.threatStats?.critical || 0)}\n              change={0}\n              changeType=\"neutral\"\n            color=\"warning\"\n            onClick={() => navigate('/threats')}\n              loading={loading}\n          />\n          <MetricCard\n            icon=\"🎯\"\n            title=\"Nmap Detections\"\n              value={data.threatStats?.nmapDetections || 0}\n              change={0}\n              changeType=\"neutral\"\n            color=\"info\"\n            onClick={() => navigate('/threats')}\n              loading={loading}\n          />\n          <MetricCard\n              icon=\"🌐\"\n              title=\"Unique IPs\"\n              value={data.threatStats?.uniqueIPs || 0}\n            change={0}\n            changeType=\"neutral\"\n            color=\"success\"\n            onClick={() => navigate('/sensors')}\n              loading={loading}\n          />\n          </div>\n        </div>\n\n        {/* Row 2: System Health, Trends & Distribution */}\n        <div className=\"dashboard-row charts-row\">\n          <div className=\"gauge-card\">\n              <div className=\"gauge-header\">\n            <h3>System Health</h3>\n              </div>\n            <div className=\"gauge-grid\">\n              <GaugeChart \n                  value={systemHealth.status === 'healthy' ? 100 : systemHealth.status === 'unhealthy' ? 50 : 0} \n                maxValue={100} \n                label=\"Health\" \n                  color={systemHealth.status === 'healthy' ? '#10b981' : systemHealth.status === 'unhealthy' ? '#f59e0b' : '#ef4444'}\n              />\n              <GaugeChart \n                  value={systemHealth.memory} \n                maxValue={100} \n                  label=\"Memory\" \n                  color={systemHealth.memory < 70 ? '#10b981' : systemHealth.memory < 90 ? '#f59e0b' : '#ef4444'}\n              />\n              <GaugeChart \n                  value={Math.min(systemHealth.cpu, 100)} \n                maxValue={100} \n                  label=\"CPU Usage\" \n                  color={systemHealth.cpu < 70 ? '#10b981' : systemHealth.cpu < 90 ? '#f59e0b' : '#ef4444'}\n                />\n              </div>\n              <div className=\"system-status\">\n                <div className=\"status-item\">\n                  <span className=\"status-label\">Database:</span>\n                  <span className={`status-value ${systemHealth.database === 'connected' ? 'connected' : 'disconnected'}`}>\n                    {systemHealth.database}\n                  </span>\n                </div>\n                <div className=\"status-item\">\n                  <span className=\"status-label\">Real-time:</span>\n                  <span className={`status-value ${isConnected ? 'active' : 'inactive'}`}>\n                    {isConnected ? 'Active' : 'Inactive'}\n                  </span>\n                </div>\n              </div>\n          </div>\n\n          <div className=\"chart-card\">\n          <div className=\"chart-header\">\n              <h3>Threat Trends (24 Hours)</h3>\n          </div>\n          <div className=\"chart-container\">\n              {generateThreatTrendData() ? (\n            <Line \n              key={`threat-trends-${lastUpdated.getTime()}`}\n              data={generateThreatTrendData()} \n              options={chartOptions} \n            />\n              ) : (\n                <div className=\"empty-state\">\n                  <span className=\"empty-icon\">📈</span>\n                  <p>No data available</p>\n                </div>\n              )}\n            </div>\n        </div>\n\n          <div className=\"chart-card\">\n          <div className=\"chart-header\">\n            <h3>Threat Distribution</h3>\n          </div>\n          <div className=\"chart-container\">\n              {generateThreatDistributionData() ? (\n            <Doughnut \n              key={`threat-distribution-${lastUpdated.getTime()}`}\n              data={generateThreatDistributionData()} \n              options={doughnutOptions} \n            />\n              ) : (\n                <div className=\"empty-state\">\n                  <span className=\"empty-icon\">🍩</span>\n                  <p>No data available</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Row 3: Protocol Analysis & Attack Vectors */}\n        <div className=\"dashboard-row analysis-row\">\n          <div className=\"protocol-widget-container\">\n            <ProtocolWidget \n              threatStats={data.threatStats}\n              loading={refreshing}\n            />\n          </div>\n\n          <div className=\"chart-card\">\n          <div className=\"chart-header\">\n            <h3>Attack Vectors</h3>\n          </div>\n          <div className=\"chart-container\">\n              {generateAttackVectorData() ? (\n            <Bar \n              key={`attack-vectors-${lastUpdated.getTime()}`}\n              data={generateAttackVectorData()} \n              options={chartOptions} \n            />\n              ) : (\n                <div className=\"empty-state\">\n                  <span className=\"empty-icon\">🛡️</span>\n                  <p>No data available</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Row 4: Activity Feed & Nmap Detection */}\n        <div className=\"dashboard-row activity-row\">\n          <div className=\"activity-card\">\n          <div className=\"activity-header\">\n            <h3>Live Activity Feed</h3>\n              <div className=\"activity-controls\">\n            <span className=\"activity-count\">{Math.min(activityFeed.length, 4)} recent events</span>\n              </div>\n          </div>\n          <div className=\"activity-feed\">\n            {activityFeed.length === 0 ? (\n              <div className=\"empty-state\">\n                <span className=\"empty-icon\">📊</span>\n                <p>No recent activity</p>\n              </div>\n            ) : (\n              <>\n                {activityFeed.slice(0, 4).map((item, index) => (\n                  <ActivityItem \n                    key={index} \n                    item={item} \n                    onClick={() => navigate(`/threats/alerts/${item.id}`)}\n                  />\n                ))}\n                {activityFeed.length > 4 && (\n                  <div className=\"view-more-indicator\">\n                    <span className=\"view-more-text\">+{activityFeed.length - 4} more events</span>\n                  </div>\n                )}\n              </>\n            )}\n          </div>\n        </div>\n\n          <div className=\"nmap-widget-container\">\n            <NmapDetectionWidget \n              threatStats={data.threatStats}\n              combinedEvents={data.combinedEvents}\n              loading={refreshing}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Overview;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UAAU,EACVC,UAAU,QACL,UAAU;AACjB,SAASC,IAAI,EAAEC,QAAQ,EAAEC,GAAG,QAAQ,iBAAiB;AACrD,SACEC,qBAAqB,EACrBC,eAAe,EACfC,WAAW,EACXC,eAAe,EACfC,sBAAsB,EACtBC,gBAAgB,EAChBC,uBAAuB,EACvBC,0BAA0B,QACrB,QAAQ;AACf,SACEC,oBAAoB,EACpBC,oBAAoB,EACpBC,kBAAkB,EAClBC,cAAc,EACdC,cAAc,EACdC,gBAAgB,QACX,wBAAwB;AAC/B,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,mBAAmB,MAAM,mCAAmC;AACnE,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAO,gBAAgB;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACAjC,OAAO,CAACkC,QAAQ,CACdjC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UAAU,EACVC,UACF,CAAC;;AAED;AACA,MAAM0B,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,KAAK;EAAEC,KAAK;EAAEC,IAAI,GAAG;AAAI,CAAC,KAAK;EACpE,MAAMC,UAAU,GAAGC,IAAI,CAACC,GAAG,CAAEP,KAAK,GAAGC,QAAQ,GAAI,GAAG,EAAE,GAAG,CAAC;EAC1D,MAAMO,aAAa,GAAG,CAAC,GAAGF,IAAI,CAACG,EAAE,GAAG,EAAE;EACtC,MAAMC,eAAe,GAAG,GAAIL,UAAU,GAAGG,aAAa,GAAI,GAAG,IAAIA,aAAa,EAAE;EAEhF,oBACEb,OAAA;IAAKgB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BjB,OAAA;MAAKgB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BjB,OAAA;QAAKgB,SAAS,EAAC,WAAW;QAACE,OAAO,EAAC,aAAa;QAAAD,QAAA,gBAC9CjB,OAAA;UACEgB,SAAS,EAAC,UAAU;UACpBG,EAAE,EAAC,IAAI;UACPC,EAAE,EAAC,IAAI;UACPC,CAAC,EAAC,IAAI;UACNC,IAAI,EAAC,MAAM;UACXC,MAAM,EAAC,SAAS;UAChBC,WAAW,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,eACF5B,OAAA;UACEgB,SAAS,EAAC,YAAY;UACtBG,EAAE,EAAC,IAAI;UACPC,EAAE,EAAC,IAAI;UACPC,CAAC,EAAC,IAAI;UACNC,IAAI,EAAC,MAAM;UACXC,MAAM,EAAEf,KAAM;UACdgB,WAAW,EAAC,GAAG;UACfK,aAAa,EAAC,OAAO;UACrBd,eAAe,EAAEA,eAAgB;UACjCe,SAAS,EAAC;QAAmB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN5B,OAAA;QAAKgB,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BjB,OAAA;UAAKgB,SAAS,EAAC,aAAa;UAAAC,QAAA,GAAEZ,KAAK,EAAEI,IAAI;QAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAChD5B,OAAA;UAAKgB,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAEV;QAAK;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAAG,EAAA,GAxCM3B,UAAU;AAyChB,MAAM4B,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAE7B,KAAK;EAAE8B,MAAM;EAAEC,UAAU;EAAE5B,KAAK;EAAE6B,OAAO;EAAEC,OAAO,GAAG;AAAM,CAAC,kBAC7FtC,OAAA;EAAKgB,SAAS,EAAE,eAAeqB,OAAO,GAAG,WAAW,GAAG,EAAE,IAAIC,OAAO,GAAG,SAAS,GAAG,EAAE,EAAG;EAACD,OAAO,EAAEA,OAAQ;EAAApB,QAAA,gBACxGjB,OAAA;IAAKgB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BjB,OAAA;MAAKgB,SAAS,EAAE,eAAeR,KAAK,EAAG;MAAAS,QAAA,EACpCgB;IAAI;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EACL,CAACU,OAAO,IAAIH,MAAM,KAAKI,SAAS,iBACjCvC,OAAA;MAAKgB,SAAS,EAAE,iBAAiBoB,UAAU,EAAG;MAAAnB,QAAA,GAC3CkB,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,EAAEA,MAAM;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC,eACN5B,OAAA;IAAKgB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BjB,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BqB,OAAO,GAAG,KAAK,GAAGjC;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACN5B,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEiB;IAAK;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACH,CACN;;AAED;AAAAY,GAAA,GArBMR,UAAU;AAsBhB,MAAMS,YAAY,GAAGA,CAAC;EAAEC,IAAI;EAAEL;AAAQ,CAAC,kBACrCrC,OAAA;EAAKgB,SAAS,EAAC,eAAe;EAACqB,OAAO,EAAEA,CAAA,KAAMA,OAAO,CAACK,IAAI,CAAE;EAAAzB,QAAA,gBAC1DjB,OAAA;IAAKgB,SAAS,EAAE,mBAAmB0B,IAAI,CAACC,QAAQ;EAAG;IAAAlB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,eAC1D5B,OAAA;IAAKgB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BjB,OAAA;MAAKgB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAEyB,IAAI,CAACR;IAAK;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAClD5B,OAAA;MAAKgB,SAAS,EAAC,sBAAsB;MAAAC,QAAA,EAAEyB,IAAI,CAACE;IAAW;MAAAnB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC9D5B,OAAA;MAAKgB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BjB,OAAA;QAAMgB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEyB,IAAI,CAACG;MAAI;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClD5B,OAAA;QAAMgB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEyB,IAAI,CAACI;MAAI;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACH,CACN;AAACmB,GAAA,GAZIN,YAAY;AAclB,MAAMO,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,iBAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,kBAAA;EACrBC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC,CAAC,CAAC;;EAEnD,MAAMC,QAAQ,GAAG1F,WAAW,CAAC,CAAC;EAC9B,MAAM;IACJ2F,MAAM;IACNC,WAAW;IACXC,SAAS;IACTC,iBAAiB;IACjBC,yBAAyB;IACzBC,qBAAqB;IACrBC,oBAAoB;IACpBC,wBAAwB;IACxBC,eAAe;IACfC;EACF,CAAC,GAAGrE,YAAY,CAAC,CAAC;EAClB;EACA,MAAM,CAACsE,IAAI,EAAEC,OAAO,CAAC,GAAG1G,QAAQ,CAAC;IAC/B2G,WAAW,EAAE,CAAC,CAAC;IACfC,cAAc,EAAE,EAAE;IAClBC,UAAU,EAAE,EAAE;IACdC,iBAAiB,EAAE,EAAE;IACrBC,WAAW,EAAE,CAAC,CAAC;IACfC,WAAW,EAAE,IAAIC,IAAI,CAAC;EACxB,CAAC,CAAC;EACF,MAAM,CAACtC,OAAO,EAAEuC,UAAU,CAAC,GAAGlH,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmH,KAAK,EAAEC,QAAQ,CAAC,GAAGpH,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACgH,WAAW,EAAEK,cAAc,CAAC,GAAGrH,QAAQ,CAAC,IAAIiH,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGvH,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACwH,SAAS,EAAEC,YAAY,CAAC,GAAGzH,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAAC0H,aAAa,EAAEC,gBAAgB,CAAC,GAAG3H,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3D,MAAM,CAAC4H,eAAe,EAAEC,kBAAkB,CAAC,GAAG7H,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3D,MAAM,CAAC8H,YAAY,EAAEC,eAAe,CAAC,GAAG/H,QAAQ,CAAC;IAC/CgI,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE,CAAC;IACTC,GAAG,EAAE,CAAC;IACNC,QAAQ,EAAE;EACZ,CAAC,CAAC;;EAEF;EACA,MAAMC,gBAAgB,GAAGjI,MAAM,CAAC,KAAK,CAAC;EACtC,MAAMkI,kBAAkB,GAAGlI,MAAM,CAAC,CAAC,CAAC;EAEpC,MAAMmI,iBAAiB,GAAGpI,WAAW,CAAC,YAAY;IAChD;IACA,IAAIkI,gBAAgB,CAACG,OAAO,EAAE;MAC5B3C,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;MAC5D;IACF;;IAEA;IACA,MAAM2C,GAAG,GAAGvB,IAAI,CAACuB,GAAG,CAAC,CAAC;IACtB,IAAIA,GAAG,GAAGH,kBAAkB,CAACE,OAAO,GAAG,IAAI,EAAE;MAC3C3C,OAAO,CAACC,GAAG,CAAC,oDAAoD,EAAE2C,GAAG,GAAGH,kBAAkB,CAACE,OAAO,EAAE,SAAS,CAAC;MAC9G;IACF;IAEA,IAAI;MACFH,gBAAgB,CAACG,OAAO,GAAG,IAAI;MAC/BrB,UAAU,CAAC,IAAI,CAAC;MAChBmB,kBAAkB,CAACE,OAAO,GAAGC,GAAG;MAChC5C,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;;MAE3C;MACA,MAAM4C,YAAY,GAAG,MAAMhH,uBAAuB,CAAC+F,SAAS,CAAC;MAE7D5B,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAE4C,YAAY,CAAC;MAE3D,IAAIA,YAAY,EAAE;QAAA,IAAAC,qBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;QAChBnD,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE;UACvCgB,UAAU,EAAE,EAAA6B,qBAAA,GAAAD,YAAY,CAAC5B,UAAU,cAAA6B,qBAAA,uBAAvBA,qBAAA,CAAyBM,MAAM,KAAI,CAAC;UAChDlC,iBAAiB,EAAE,EAAA6B,qBAAA,GAAAF,YAAY,CAAC3B,iBAAiB,cAAA6B,qBAAA,uBAA9BA,qBAAA,CAAgCK,MAAM,KAAI,CAAC;UAC9DjC,WAAW,EAAE0B,YAAY,CAAC1B;QAC5B,CAAC,CAAC;;QAEF;QACA,MAAMkC,SAAS,GAAG,CAChB,IAAIR,YAAY,CAAC5B,UAAU,IAAI,EAAE,CAAC,EAClC,IAAI4B,YAAY,CAAC3B,iBAAiB,IAAI,EAAE,CAAC,CAC1C;QAEDlB,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEoD,SAAS,CAAC;QAC7DrD,OAAO,CAACC,GAAG,CAAC,wBAAwB,GAAA+C,sBAAA,GAAEH,YAAY,CAAC5B,UAAU,cAAA+B,sBAAA,uBAAvBA,sBAAA,CAA0B,CAAC,CAAC,CAAC;QACnEhD,OAAO,CAACC,GAAG,CAAC,+BAA+B,GAAAgD,sBAAA,GAAEJ,YAAY,CAAC3B,iBAAiB,cAAA+B,sBAAA,uBAA9BA,sBAAA,CAAiC,CAAC,CAAC,CAAC;;QAEjF;QACA,MAAMK,gBAAgB,GAAGD,SAAS,CAACE,GAAG,CAACC,KAAK,IAAI;UAC9C,MAAMC,UAAU,GAAGvH,cAAc,CAACsH,KAAK,EAAEA,KAAK,CAACE,UAAU,IAAI,SAAS,CAAC;UACvE1D,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE;YAAE0D,QAAQ,EAAEH,KAAK;YAAEC;UAAW,CAAC,CAAC;UACrE,OAAOA,UAAU;QACnB,CAAC,CAAC;QAEFzD,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEqD,gBAAgB,CAAC;;QAEtD;QACA,MAAMvC,WAAW,GAAG/E,oBAAoB,CAACsH,gBAAgB,CAAC;QAC1DtD,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEc,WAAW,CAAC;;QAEvD;QACA,MAAM6C,YAAY,GAAG3H,kBAAkB,CAACqH,gBAAgB,EAAE1B,SAAS,CAAC;;QAEpE;QACAd,OAAO,CAAC+C,IAAI,IAAI;UACd,MAAMC,QAAQ,GAAG;YACf,GAAGD,IAAI;YACP5C,UAAU,EAAE4B,YAAY,CAAC5B,UAAU,IAAI,EAAE;YACzCC,iBAAiB,EAAE2B,YAAY,CAAC3B,iBAAiB,IAAI,EAAE;YACvDC,WAAW,EAAE0B,YAAY,CAAC1B,WAAW,IAAI,CAAC,CAAC;YAC3CC,WAAW,EAAEyB,YAAY,CAACzB,WAAW,IAAI,IAAIC,IAAI,CAAC,CAAC,CAAC0C,WAAW,CAAC,CAAC;YACjE/C,cAAc,EAAEsC,gBAAgB;YAChCvC,WAAW,EAAEA,WAAW;YACxB6C,YAAY,EAAEA;UAChB,CAAC;UACD5D,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAE6D,QAAQ,CAAC;UACxD,OAAOA,QAAQ;QACjB,CAAC,CAAC;;QAEF;QACA9D,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAE;UACnDgB,UAAU,EAAE,EAAAiC,sBAAA,GAAAL,YAAY,CAAC5B,UAAU,cAAAiC,sBAAA,uBAAvBA,sBAAA,CAAyBE,MAAM,KAAI,CAAC;UAChDlC,iBAAiB,EAAE,EAAAiC,sBAAA,GAAAN,YAAY,CAAC3B,iBAAiB,cAAAiC,sBAAA,uBAA9BA,sBAAA,CAAgCC,MAAM,KAAI,CAAC;UAC9DE,gBAAgB,EAAEA,gBAAgB,CAACF,MAAM;UACzCrC,WAAW,EAAEA,WAAW;UACxB6C,YAAY,EAAE,CAAAA,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAER,MAAM,KAAI;QACxC,CAAC,CAAC;MACJ,CAAC,MAAM;QACLpD,OAAO,CAACgE,IAAI,CAAC,8BAA8B,CAAC;MAC9C;IACF,CAAC,CAAC,OAAOzC,KAAK,EAAE;MACdvB,OAAO,CAACuB,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD,CAAC,SAAS;MACRD,UAAU,CAAC,KAAK,CAAC;MACjBK,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;MACtBa,gBAAgB,CAACG,OAAO,GAAG,KAAK,CAAC,CAAC;MAClC3C,OAAO,CAACC,GAAG,CAAC,gEAAgE,CAAC;IAC/E;EACF,CAAC,EAAE,CAAC2B,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEjB;EACAvH,SAAS,CAAC,MAAM;IACd,MAAM4J,sBAAsB,GAAG,MAAAA,CAAA,KAAY;MACzC,IAAI;QACF,MAAMC,UAAU,GAAG,MAAMtI,gBAAgB,CAAC,CAAC;QAC3CoE,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEiE,UAAU,CAAC;QAEnD,IAAIA,UAAU,EAAE;UAAA,IAAAC,oBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA;UACd,MAAMC,WAAW,IAAAP,oBAAA,GAAGD,UAAU,CAACS,QAAQ,cAAAR,oBAAA,wBAAAC,qBAAA,GAAnBD,oBAAA,CAAqBS,OAAO,cAAAR,qBAAA,uBAA5BA,qBAAA,CAA8B/B,MAAM;UACxD,MAAMwC,aAAa,GAAGH,WAAW,GAAGtH,IAAI,CAAC0H,KAAK,CAAEJ,WAAW,CAACK,QAAQ,GAAGL,WAAW,CAACM,SAAS,GAAI,GAAG,CAAC,GAAG,CAAC;UAExG7C,eAAe,CAAC;YACdC,MAAM,EAAE8B,UAAU,CAAC9B,MAAM,IAAI,SAAS;YACtCC,MAAM,EAAEwC,aAAa;YACrBvC,GAAG,EAAElF,IAAI,CAAC0H,KAAK,CAAC,EAAAT,qBAAA,GAAAH,UAAU,CAACS,QAAQ,cAAAN,qBAAA,wBAAAC,qBAAA,GAAnBD,qBAAA,CAAqBO,OAAO,cAAAN,qBAAA,wBAAAC,qBAAA,GAA5BD,qBAAA,CAA8BhC,GAAG,cAAAiC,qBAAA,uBAAjCA,qBAAA,CAAmCU,KAAK,KAAI7H,IAAI,CAAC8H,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;YAChF3C,QAAQ,EAAE,EAAAiC,qBAAA,GAAAN,UAAU,CAACS,QAAQ,cAAAH,qBAAA,wBAAAC,qBAAA,GAAnBD,qBAAA,CAAqBjC,QAAQ,cAAAkC,qBAAA,uBAA7BA,qBAAA,CAA+BrC,MAAM,KAAI;UACrD,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,OAAOb,KAAK,EAAE;QACdvB,OAAO,CAACuB,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D;IACF,CAAC;IAED0C,sBAAsB,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMkB,cAAc,GAAG7K,WAAW,CAAC,MAAO8K,OAAO,IAAK;IAAA,IAAAC,SAAA,EAAAC,SAAA;IACpD;IACA,MAAM1C,GAAG,GAAGvB,IAAI,CAACuB,GAAG,CAAC,CAAC;IACtB,IAAIA,GAAG,GAAGH,kBAAkB,CAACE,OAAO,GAAG,IAAI,EAAE;MAC3C3C,OAAO,CAACC,GAAG,CAAC,oDAAoD,EAAE2C,GAAG,GAAGH,kBAAkB,CAACE,OAAO,EAAE,SAAS,CAAC;MAC9G;IACF;IAEA,IAAI;MACFhB,aAAa,CAAC,IAAI,CAAC;MACnBc,kBAAkB,CAACE,OAAO,GAAGC,GAAG;MAChC,IAAI2C,OAAO;MAEX,QAAQH,OAAO;QACb,KAAK,SAAS;UACZ;UACAG,OAAO,GAAG,MAAM1J,uBAAuB,CAAC+F,SAAS,CAAC;UAClDd,OAAO,CAAC+C,IAAI;YAAA,IAAA2B,QAAA,EAAAC,SAAA;YAAA,OAAK;cACf,GAAG5B,IAAI;cACP1C,WAAW,EAAE,EAAAqE,QAAA,GAAAD,OAAO,cAAAC,QAAA,uBAAPA,QAAA,CAASrE,WAAW,KAAI,CAAC,CAAC;cACvCC,WAAW,EAAE,EAAAqE,SAAA,GAAAF,OAAO,cAAAE,SAAA,uBAAPA,SAAA,CAASrE,WAAW,KAAI,IAAIC,IAAI,CAAC,CAAC,CAAC0C,WAAW,CAAC;YAC9D,CAAC;UAAA,CAAC,CAAC;UACH;QACF,KAAK,SAAS;UACZwB,OAAO,GAAG,MAAM/J,eAAe,CAAC,CAAC;UACjCsF,OAAO,CAAC+C,IAAI,KAAK;YAAE,GAAGA,IAAI;YAAE6B,OAAO,EAAEC,KAAK,CAACC,OAAO,CAACL,OAAO,CAAC,GAAGA,OAAO,GAAIA,OAAO,CAACG,OAAO,IAAI;UAAI,CAAC,CAAC,CAAC;UACnG;QACF,KAAK,QAAQ;UACX;UACAH,OAAO,GAAG,MAAM1J,uBAAuB,CAAC+F,SAAS,CAAC;UAClD,MAAMyB,SAAS,GAAG,CAChB,IAAI,EAAAgC,SAAA,GAAAE,OAAO,cAAAF,SAAA,uBAAPA,SAAA,CAASpE,UAAU,KAAI,EAAE,CAAC,EAC9B,IAAI,EAAAqE,SAAA,GAAAC,OAAO,cAAAD,SAAA,uBAAPA,SAAA,CAASpE,iBAAiB,KAAI,EAAE,CAAC,CACtC;UACD,MAAMoC,gBAAgB,GAAGD,SAAS,CAACE,GAAG,CAACC,KAAK,IAC1CtH,cAAc,CAACsH,KAAK,EAAEA,KAAK,CAACE,UAAU,IAAI,SAAS,CACrD,CAAC;UACD5C,OAAO,CAAC+C,IAAI,KAAK;YACf,GAAGA,IAAI;YACP7C,cAAc,EAAEsC,gBAAgB;YAChCvC,WAAW,EAAE/E,oBAAoB,CAACsH,gBAAgB;UACpD,CAAC,CAAC,CAAC;UACH;QACF,KAAK,YAAY;UACfiC,OAAO,GAAG,MAAM7J,eAAe,CAAC;YAAEmK,KAAK,EAAEjE,SAAS;YAAEkE,KAAK,EAAE;UAAI,CAAC,CAAC;UACjEhF,OAAO,CAAC+C,IAAI,KAAK;YAAE,GAAGA,IAAI;YAAE5C,UAAU,EAAE0E,KAAK,CAACC,OAAO,CAACL,OAAO,CAAC,GAAGA,OAAO,GAAG;UAAG,CAAC,CAAC,CAAC;UACjF;QACF,KAAK,mBAAmB;UACtBA,OAAO,GAAG,MAAM5J,sBAAsB,CAAC;YAAEkK,KAAK,EAAEjE,SAAS;YAAEkE,KAAK,EAAE;UAAI,CAAC,CAAC;UACxEhF,OAAO,CAAC+C,IAAI,KAAK;YAAE,GAAGA,IAAI;YAAE3C,iBAAiB,EAAEyE,KAAK,CAACC,OAAO,CAACL,OAAO,CAAC,GAAGA,OAAO,GAAG;UAAG,CAAC,CAAC,CAAC;UACxF;QACF,KAAK,QAAQ;UACXA,OAAO,GAAG,MAAM3J,gBAAgB,CAAC,CAAC;UAClC,IAAI2J,OAAO,EAAE;YAAA,IAAAQ,iBAAA,EAAAC,qBAAA,EAAAC,kBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,kBAAA,EAAAC,qBAAA;YACX,MAAM3B,WAAW,IAAAqB,iBAAA,GAAGR,OAAO,CAACZ,QAAQ,cAAAoB,iBAAA,wBAAAC,qBAAA,GAAhBD,iBAAA,CAAkBnB,OAAO,cAAAoB,qBAAA,uBAAzBA,qBAAA,CAA2B3D,MAAM;YACrD,MAAMwC,aAAa,GAAGH,WAAW,GAAGtH,IAAI,CAAC0H,KAAK,CAAEJ,WAAW,CAACK,QAAQ,GAAGL,WAAW,CAACM,SAAS,GAAI,GAAG,CAAC,GAAG,CAAC;YAExG7C,eAAe,CAAC;cACdC,MAAM,EAAEmD,OAAO,CAACnD,MAAM,IAAI,SAAS;cACnCC,MAAM,EAAEwC,aAAa;cACrBvC,GAAG,EAAElF,IAAI,CAAC0H,KAAK,CAAC,EAAAmB,kBAAA,GAAAV,OAAO,CAACZ,QAAQ,cAAAsB,kBAAA,wBAAAC,qBAAA,GAAhBD,kBAAA,CAAkBrB,OAAO,cAAAsB,qBAAA,wBAAAC,sBAAA,GAAzBD,qBAAA,CAA2B5D,GAAG,cAAA6D,sBAAA,uBAA9BA,sBAAA,CAAgClB,KAAK,KAAI7H,IAAI,CAAC8H,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;cAC7E3C,QAAQ,EAAE,EAAA6D,kBAAA,GAAAb,OAAO,CAACZ,QAAQ,cAAAyB,kBAAA,wBAAAC,qBAAA,GAAhBD,kBAAA,CAAkB7D,QAAQ,cAAA8D,qBAAA,uBAA1BA,qBAAA,CAA4BjE,MAAM,KAAI;YAClD,CAAC,CAAC;UACJ;UACA;QACF;UACE,MAAMM,iBAAiB,CAAC,CAAC;MAC7B;MAEAjB,cAAc,CAAC,IAAIJ,IAAI,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOiF,GAAG,EAAE;MACZtG,OAAO,CAACuB,KAAK,CAAC,sBAAsB6D,OAAO,GAAG,EAAEkB,GAAG,CAAC;IACtD,CAAC,SAAS;MACR3E,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC,EAAE,CAACC,SAAS,EAAEc,iBAAiB,CAAC,CAAC,CAAC,CAAC;;EAEpC;EACArI,SAAS,CAAC,MAAM;IACd,IAAI+F,WAAW,IAAII,qBAAqB,EAAE;MACxC,MAAM+F,WAAW,GAAG/F,qBAAqB,CAAEgD,KAAK,IAAK;QACnD,MAAMgD,eAAe,GAAGtK,cAAc,CAACsH,KAAK,EAAEA,KAAK,CAACE,UAAU,CAAC;QAE/D5C,OAAO,CAAC2F,QAAQ,IAAI;UAClB,MAAMC,WAAW,GAAG;YAAE,GAAGD;UAAS,CAAC;;UAEnC;UACA,IAAIjD,KAAK,CAACE,UAAU,KAAK,aAAa,IAAIF,KAAK,CAACmD,SAAS,EAAE;YACzDD,WAAW,CAACzF,UAAU,GAAG,CAACuF,eAAe,EAAE,GAAGC,QAAQ,CAACxF,UAAU,CAAC,CAAC2F,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC;UAClF,CAAC,MAAM,IAAIpD,KAAK,CAACE,UAAU,KAAK,qBAAqB,IAAIF,KAAK,CAACqD,eAAe,KAAK,qBAAqB,EAAE;YACxGH,WAAW,CAACxF,iBAAiB,GAAG,CAACsF,eAAe,EAAE,GAAGC,QAAQ,CAACvF,iBAAiB,CAAC,CAAC0F,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC;UAChG;;UAEA;UACAF,WAAW,CAAC1F,cAAc,GAAG,CAACwF,eAAe,EAAE,GAAGC,QAAQ,CAACzF,cAAc,CAAC,CAAC4F,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC;;UAExF;UACAF,WAAW,CAAC3F,WAAW,GAAG/E,oBAAoB,CAAC0K,WAAW,CAAC1F,cAAc,CAAC;UAE1E,OAAO0F,WAAW;QACpB,CAAC,CAAC;MACJ,CAAC,CAAC;MAEF,OAAOH,WAAW;IACpB;EACF,CAAC,EAAE,CAACnG,WAAW,EAAEI,qBAAqB,CAAC,CAAC;;EAExC;EACAnG,SAAS,CAAC,MAAM;IACd,IAAI+F,WAAW,IAAI,CAACQ,qBAAqB,EAAE;MACzCZ,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;MACrDQ,oBAAoB,CAAC,CAAC;IACxB;IAEA,OAAO,MAAM;MACX,IAAIL,WAAW,IAAIQ,qBAAqB,EAAE;QACxCZ,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;QACzDS,wBAAwB,CAAC,CAAC;MAC5B;IACF,CAAC;EACH,CAAC,EAAE,CAACN,WAAW,EAAEQ,qBAAqB,EAAEH,oBAAoB,EAAEC,wBAAwB,CAAC,CAAC;;EAExF;EACArG,SAAS,CAAC,MAAM;IACd,IAAI,CAAC8F,MAAM,EAAE;IAEbH,OAAO,CAACC,GAAG,CAAC,yDAAyD,CAAC;;IAEtE;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAKE,CAAC,EAAE,CAACE,MAAM,EAAEuC,iBAAiB,CAAC,CAAC;;EAE/B;EACArI,SAAS,CAAC,MAAM;IACd2F,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;IACxD;IACA,MAAM2C,GAAG,GAAGvB,IAAI,CAACuB,GAAG,CAAC,CAAC;IACtB,IAAI,CAACJ,gBAAgB,CAACG,OAAO,IAAKC,GAAG,GAAGH,kBAAkB,CAACE,OAAO,GAAG,IAAK,EAAE;MAC1ED,iBAAiB,CAAC,CAAC;IACrB,CAAC,MAAM;MACL1C,OAAO,CAACC,GAAG,CAAC,wEAAwE,CAAC;IACvF;EACF,CAAC,EAAE,CAACyC,iBAAiB,CAAC,CAAC;;EAEvB;EACArI,SAAS,CAAC,MAAM;IAAA,IAAAyM,gBAAA,EAAAC,qBAAA,EAAAC,oBAAA;IACdhH,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE;MACpCgB,UAAU,EAAE,EAAA6F,gBAAA,GAAAjG,IAAI,CAACI,UAAU,cAAA6F,gBAAA,uBAAfA,gBAAA,CAAiB1D,MAAM,KAAI,CAAC;MACxClC,iBAAiB,EAAE,EAAA6F,qBAAA,GAAAlG,IAAI,CAACK,iBAAiB,cAAA6F,qBAAA,uBAAtBA,qBAAA,CAAwB3D,MAAM,KAAI,CAAC;MACtDpC,cAAc,EAAE,EAAAgG,oBAAA,GAAAnG,IAAI,CAACG,cAAc,cAAAgG,oBAAA,uBAAnBA,oBAAA,CAAqB5D,MAAM,KAAI,CAAC;MAChDrC,WAAW,EAAEF,IAAI,CAACE,WAAW;MAC7BhC,OAAO,EAAEA,OAAO;MAChB2C,UAAU,EAAEA;IACd,CAAC,CAAC;EACJ,CAAC,EAAE,CAACb,IAAI,EAAE9B,OAAO,EAAE2C,UAAU,CAAC,CAAC;;EAE/B;EACArH,SAAS,CAAC,MAAM;IAAA,IAAA4M,iBAAA,EAAAC,sBAAA;IACdlH,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAE;MAClDc,WAAW,EAAEF,IAAI,CAACE,WAAW;MAC7BoG,eAAe,EAAE,EAAAF,iBAAA,GAAApG,IAAI,CAACI,UAAU,cAAAgG,iBAAA,uBAAfA,iBAAA,CAAiB7D,MAAM,KAAI,CAAC;MAC7CgE,sBAAsB,EAAE,EAAAF,sBAAA,GAAArG,IAAI,CAACK,iBAAiB,cAAAgG,sBAAA,uBAAtBA,sBAAA,CAAwB9D,MAAM,KAAI,CAAC;MAC3DrE,OAAO,EAAEA,OAAO;MAChB2C,UAAU,EAAEA;IACd,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACA,MAAM2F,uBAAuB,GAAGA,CAAA,KAAM;IACpC,IAAI,CAACxG,IAAI,CAAC+C,YAAY,IAAI/C,IAAI,CAAC+C,YAAY,CAACR,MAAM,KAAK,CAAC,EAAE;MACxD,OAAO;QACLkE,MAAM,EAAE,CAAC,SAAS,CAAC;QACnBC,QAAQ,EAAE,CAAC;UACTvK,KAAK,EAAE,QAAQ;UACf6D,IAAI,EAAE,CAAC,CAAC,CAAC;UACT2G,WAAW,EAAE,SAAS;UACtBC,eAAe,EAAE,yBAAyB;UAC1CC,OAAO,EAAE;QACX,CAAC;MACH,CAAC;IACH;IAEA,MAAMC,QAAQ,GAAG9G,IAAI,CAAC+C,YAAY,CAACgD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;IAE/C,OAAO;MACLU,MAAM,EAAEK,QAAQ,CAACpE,GAAG,CAACpE,IAAI,IAAI;QAC3B,MAAMG,IAAI,GAAG,IAAI+B,IAAI,CAAClC,IAAI,CAACyI,SAAS,CAAC;QACrC,OAAO,GAAGtI,IAAI,CAACuI,QAAQ,CAAC,CAAC,KAAK;MAChC,CAAC,CAAC;MACFN,QAAQ,EAAE,CACR;QACEvK,KAAK,EAAE,cAAc;QACrB6D,IAAI,EAAE8G,QAAQ,CAACpE,GAAG,CAACpE,IAAI,IAAIA,IAAI,CAAC2I,KAAK,CAAC;QACtCN,WAAW,EAAE,SAAS;QACtBC,eAAe,EAAE,yBAAyB;QAC1CC,OAAO,EAAE,GAAG;QACZ3J,IAAI,EAAE;MACR,CAAC,EACD;QACEf,KAAK,EAAE,cAAc;QACrB6D,IAAI,EAAE8G,QAAQ,CAACpE,GAAG,CAACpE,IAAI,IAAIA,IAAI,CAAC4I,IAAI,CAAC;QACrCP,WAAW,EAAE,SAAS;QACtBC,eAAe,EAAE,wBAAwB;QACzCC,OAAO,EAAE,GAAG;QACZ3J,IAAI,EAAE;MACR,CAAC,EACD;QACEf,KAAK,EAAE,iBAAiB;QACxB6D,IAAI,EAAE8G,QAAQ,CAACpE,GAAG,CAACpE,IAAI,IAAIA,IAAI,CAAC6I,IAAI,CAAC;QACrCR,WAAW,EAAE,SAAS;QACtBC,eAAe,EAAE,wBAAwB;QACzCC,OAAO,EAAE,GAAG;QACZ3J,IAAI,EAAE;MACR,CAAC;IAEL,CAAC;EACH,CAAC;;EAED;EACA,MAAMkK,8BAA8B,GAAGA,CAAA,KAAM;IAC3C,MAAMC,KAAK,GAAGrH,IAAI,CAACE,WAAW;IAC9B,IAAI,CAACmH,KAAK,IAAIC,MAAM,CAACC,IAAI,CAACF,KAAK,CAAC,CAAC9E,MAAM,KAAK,CAAC,EAAE;MAC7C,OAAO;QACLkE,MAAM,EAAE,CAAC,SAAS,CAAC;QACvBC,QAAQ,EAAE,CAAC;UACL1G,IAAI,EAAE,CAAC,CAAC,CAAC;UACT4G,eAAe,EAAE,CAAC,SAAS,CAAC;UAChCY,WAAW,EAAE;QACf,CAAC;MACC,CAAC;IACH;IAEA,MAAMC,YAAY,GAAG;MACnB,MAAM,EAAEJ,KAAK,CAACH,IAAI,IAAI,CAAC;MACvB,QAAQ,EAAEG,KAAK,CAACK,MAAM,IAAI,CAAC;MAC3B,KAAK,EAAEL,KAAK,CAACM,GAAG,IAAI,CAAC;MACrB,UAAU,EAAEN,KAAK,CAACO,QAAQ,IAAI;IAChC,CAAC;;IAED;IACA,MAAMC,cAAc,GAAGP,MAAM,CAACQ,OAAO,CAACL,YAAY,CAAC,CAACM,MAAM,CAAC,CAAC,GAAGC,KAAK,CAAC,KAAKA,KAAK,GAAG,CAAC,CAAC;IAEpF,IAAIH,cAAc,CAACtF,MAAM,KAAK,CAAC,EAAE;MAC/B,OAAO;QACLkE,MAAM,EAAE,CAAC,SAAS,CAAC;QACnBC,QAAQ,EAAE,CAAC;UACT1G,IAAI,EAAE,CAAC,CAAC,CAAC;UACT4G,eAAe,EAAE,CAAC,SAAS,CAAC;UAC5BY,WAAW,EAAE;QACf,CAAC;MACH,CAAC;IACH;IAEA,MAAMS,MAAM,GAAG;MACb,UAAU,EAAE,SAAS;MACrB,MAAM,EAAE,SAAS;MACjB,QAAQ,EAAE,SAAS;MACnB,KAAK,EAAE;IACT,CAAC;IAED,OAAO;MACLxB,MAAM,EAAEoB,cAAc,CAACnF,GAAG,CAAC,CAAC,CAACwF,KAAK,CAAC,KAAKA,KAAK,CAAC;MAC9CxB,QAAQ,EAAE,CAAC;QACT1G,IAAI,EAAE6H,cAAc,CAACnF,GAAG,CAAC,CAAC,GAAGsF,KAAK,CAAC,KAAKA,KAAK,CAAC;QAC9CpB,eAAe,EAAEiB,cAAc,CAACnF,GAAG,CAAC,CAAC,CAACwF,KAAK,CAAC,KAAKD,MAAM,CAACC,KAAK,CAAC,IAAI,SAAS,CAAC;QAC5EV,WAAW,EAAE;MACf,CAAC;IACH,CAAC;EACH,CAAC;;EAED;EACA,MAAMW,wBAAwB,GAAGA,CAAA,KAAM;IACrC,MAAMd,KAAK,GAAGrH,IAAI,CAACE,WAAW;IAC9B,IAAI,CAACmH,KAAK,IAAI,CAACA,KAAK,CAACe,WAAW,IAAId,MAAM,CAACC,IAAI,CAACF,KAAK,CAACe,WAAW,CAAC,CAAC7F,MAAM,KAAK,CAAC,EAAE;MAC/E,OAAO;QACLkE,MAAM,EAAE,CAAC,SAAS,CAAC;QACnBC,QAAQ,EAAE,CAAC;UACTvK,KAAK,EAAE,iBAAiB;UACxB6D,IAAI,EAAE,CAAC,CAAC,CAAC;UACT4G,eAAe,EAAE,yBAAyB;UAC1CD,WAAW,EAAE,SAAS;UACtBa,WAAW,EAAE;QACf,CAAC;MACH,CAAC;IACH;IAEA,MAAMa,UAAU,GAAGhB,KAAK,CAACe,WAAW;IACpC,MAAME,WAAW,GAAGhB,MAAM,CAACQ,OAAO,CAACO,UAAU,CAAC,CAC3CE,IAAI,CAAC,CAAC,GAAEC,CAAC,CAAC,EAAE,GAAEC,CAAC,CAAC,KAAKA,CAAC,GAAGD,CAAC,CAAC,CAC3BzC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;IAEhB;IACA,MAAM2C,eAAe,GAAG;MACtB,YAAY,EAAE,qBAAqB;MACnC,iBAAiB,EAAE,iBAAiB;MACpC,eAAe,EAAE,gBAAgB;MACjC,mBAAmB,EAAE,mBAAmB;MACxC,eAAe,EAAE,eAAe;MAChC,SAAS,EAAE,sBAAsB;MACjC,sBAAsB,EAAE,iBAAiB;MACzC,WAAW,EAAE,eAAe;MAC5B,aAAa,EAAE,aAAa;MAC5B,UAAU,EAAE,cAAc;MAC1B,cAAc,EAAE;IAClB,CAAC;;IAED;IACA,MAAMT,MAAM,GAAG,CACb,wBAAwB;IAAI;IAC5B,wBAAwB;IAAI;IAC5B,yBAAyB;IAAG;IAC5B,wBAAwB;IAAI;IAC5B,yBAAyB;IAAG;IAC5B,yBAAyB,CAAG;IAAA,CAC7B;IAED,MAAMU,YAAY,GAAG,CACnB,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACV;IAED,OAAO;MACLlC,MAAM,EAAE6B,WAAW,CAAC5F,GAAG,CAAC,CAAC,CAAChE,IAAI,CAAC,KAAKgK,eAAe,CAAChK,IAAI,CAAC,IAAIA,IAAI,CAAC;MAClEgI,QAAQ,EAAE,CAAC;QACTvK,KAAK,EAAE,iBAAiB;QACxB6D,IAAI,EAAEsI,WAAW,CAAC5F,GAAG,CAAC,CAAC,GAAGsF,KAAK,CAAC,KAAKA,KAAK,CAAC;QAC3CpB,eAAe,EAAEqB,MAAM,CAAClC,KAAK,CAAC,CAAC,EAAEuC,WAAW,CAAC/F,MAAM,CAAC;QACpDoE,WAAW,EAAEgC,YAAY,CAAC5C,KAAK,CAAC,CAAC,EAAEuC,WAAW,CAAC/F,MAAM,CAAC;QACtDiF,WAAW,EAAE,CAAC;QACdoB,YAAY,EAAE,CAAC;QACfC,aAAa,EAAE,KAAK;QACpBC,kBAAkB,EAAE,GAAG;QACvBC,aAAa,EAAE;MACjB,CAAC;IACH,CAAC;EACH,CAAC;;EAED;EACA,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAI,CAAChJ,IAAI,CAACG,cAAc,IAAIH,IAAI,CAACG,cAAc,CAACoC,MAAM,KAAK,CAAC,EAAE;MAC5D,OAAO,EAAE;IACX;IAEA,OAAOvC,IAAI,CAACG,cAAc,CAAC4F,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACrD,GAAG,CAAC,CAACC,KAAK,EAAEsG,KAAK,KAAK;MAC3D,MAAMC,OAAO,GAAG3M,IAAI,CAAC4M,KAAK,CAAC,CAAC,IAAI3I,IAAI,CAAC,CAAC,GAAG,IAAIA,IAAI,CAACmC,KAAK,CAACoE,SAAS,CAAC,KAAK,IAAI,GAAG,EAAE,CAAC,CAAC;MAClF,MAAMqC,WAAW,GAAGF,OAAO,GAAG,CAAC,GAAG,UAAU,GACzBA,OAAO,GAAG,EAAE,GAAG,GAAGA,OAAO,OAAO,GAChCA,OAAO,GAAG,IAAI,GAAG,GAAG3M,IAAI,CAAC4M,KAAK,CAACD,OAAO,GAAG,EAAE,CAAC,OAAO,GACnD,GAAG3M,IAAI,CAAC4M,KAAK,CAACD,OAAO,GAAG,IAAI,CAAC,OAAO;MAEvD,OAAO;QACLG,EAAE,EAAE1G,KAAK,CAAC0G,EAAE;QACZvL,KAAK,EAAEwL,aAAa,CAAC3G,KAAK,CAAC;QAC3BnE,WAAW,EAAEmE,KAAK,CAACnE,WAAW;QAC9BC,IAAI,EAAE2K,WAAW;QACjB7K,QAAQ,EAAEjD,cAAc,CAACqH,KAAK,CAAC;QAC/B4G,MAAM,EAAE5G,KAAK,CAAC6G,SAAS;QACvB9K,IAAI,EAAE+K,iBAAiB,CAAC9G,KAAK,CAAC;QAC9B3C,IAAI,EAAE2C;MACR,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAM2G,aAAa,GAAI3G,KAAK,IAAK;IAC/B,MAAM+G,QAAQ,GAAG;MACf,WAAW,EAAE,eAAe;MAC5B,aAAa,EAAE,aAAa;MAC5B,sBAAsB,EAAE,sBAAsB;MAC9C,WAAW,EAAE,qBAAqB;MAClC,UAAU,EAAE,cAAc;MAC1B,cAAc,EAAE,kBAAkB;MAClC,YAAY,EAAE,qBAAqB;MACnC,iBAAiB,EAAE,sBAAsB;MACzC,eAAe,EAAE,eAAe;MAChC,mBAAmB,EAAE,mBAAmB;MACxC,eAAe,EAAE,eAAe;MAChC,SAAS,EAAE;IACb,CAAC;IACD,OAAOA,QAAQ,CAAC/G,KAAK,CAACmD,SAAS,CAAC,IAAI4D,QAAQ,CAAC/G,KAAK,CAACgH,UAAU,CAAC,IAAIhH,KAAK,CAACmD,SAAS,IAAInD,KAAK,CAACgH,UAAU,IAAI,gBAAgB;EAC3H,CAAC;;EAED;EACA,MAAMF,iBAAiB,GAAI9G,KAAK,IAAK;IACnC,IAAIA,KAAK,CAACE,UAAU,KAAK,aAAa,EAAE,OAAO,gBAAgB;IAC/D,IAAIF,KAAK,CAACE,UAAU,KAAK,qBAAqB,EAAE,OAAO,kBAAkB;IACzE,IAAIF,KAAK,CAACE,UAAU,KAAK,eAAe,EAAE,OAAO,eAAe;IAChE,OAAO,OAAO;EAChB,CAAC;EAED,MAAM+G,YAAY,GAAG;IACnBC,UAAU,EAAE,IAAI;IAChBC,mBAAmB,EAAE,KAAK;IAC1BC,WAAW,EAAE;MACXC,SAAS,EAAE,KAAK;MAChBC,IAAI,EAAE;IACR,CAAC;IACDC,SAAS,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;IACDC,MAAM,EAAE;MACNC,OAAO,EAAE;QACPC,GAAG,EAAE,EAAE;QACPC,MAAM,EAAE,EAAE;QACVC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE;MACT;IACF,CAAC;IACDC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE,QAAQ;QAClBnE,MAAM,EAAE;UACNrK,KAAK,EAAE,SAAS;UAChByO,aAAa,EAAE,IAAI;UACnBC,UAAU,EAAE,QAAQ;UACpBT,OAAO,EAAE,EAAE;UACXU,IAAI,EAAE;YACJC,IAAI,EAAE;UACR;QACF;MACF,CAAC;MACDC,OAAO,EAAE;QACPrE,eAAe,EAAE,wBAAwB;QACzCsE,UAAU,EAAE,SAAS;QACrBC,SAAS,EAAE,SAAS;QACpBxE,WAAW,EAAE,SAAS;QACtBa,WAAW,EAAE,CAAC;QACd4D,YAAY,EAAE,CAAC;QACfC,aAAa,EAAE,IAAI;QACnBC,SAAS,EAAE;UACTxN,KAAK,EAAE,SAAAA,CAASyN,YAAY,EAAE;YAC5B,OAAOA,YAAY,CAAC,CAAC,CAAC,CAACpP,KAAK;UAC9B,CAAC;UACDA,KAAK,EAAE,SAAAA,CAASqP,OAAO,EAAE;YACvB,OAAO,GAAGA,OAAO,CAACC,OAAO,CAACtP,KAAK,KAAKqP,OAAO,CAACE,MAAM,CAACC,CAAC,EAAE;UACxD;QACF;MACF;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,KAAK,EAAE;UACL1P,KAAK,EAAE,SAAS;UAChB2P,WAAW,EAAE,EAAE;UACfC,WAAW,EAAE,CAAC;UACd3B,OAAO,EAAE;QACX,CAAC;QACD4B,IAAI,EAAE;UACJ7P,KAAK,EAAE,SAAS;UAChB8P,UAAU,EAAE;QACd;MACF,CAAC;MACDP,CAAC,EAAE;QACDG,KAAK,EAAE;UACL1P,KAAK,EAAE,SAAS;UAChBiO,OAAO,EAAE,CAAC;UACV8B,WAAW,EAAE;QACf,CAAC;QACDF,IAAI,EAAE;UACJ7P,KAAK,EAAE,SAAS;UAChB8P,UAAU,EAAE;QACd;MACF;IACF;EACF,CAAC;EAED,MAAME,eAAe,GAAG;IACtBvC,UAAU,EAAE,IAAI;IAChBC,mBAAmB,EAAE,KAAK;IAC1BM,MAAM,EAAE;MACNC,OAAO,EAAE;QACPC,GAAG,EAAE,EAAE;QACPC,MAAM,EAAE,EAAE;QACVC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE;MACT;IACF,CAAC;IACDC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE,QAAQ;QAClBnE,MAAM,EAAE;UACNrK,KAAK,EAAE,SAAS;UAChByO,aAAa,EAAE,IAAI;UACnBC,UAAU,EAAE,QAAQ;UACpBT,OAAO,EAAE,EAAE;UACXU,IAAI,EAAE;YACJC,IAAI,EAAE;UACR;QACF;MACF,CAAC;MACDC,OAAO,EAAE;QACPrE,eAAe,EAAE,wBAAwB;QACzCsE,UAAU,EAAE,SAAS;QACrBC,SAAS,EAAE,SAAS;QACpBxE,WAAW,EAAE,SAAS;QACtBa,WAAW,EAAE,CAAC;QACd4D,YAAY,EAAE,CAAC;QACfC,aAAa,EAAE,IAAI;QACnBC,SAAS,EAAE;UACTxN,KAAK,EAAE,SAAAA,CAASyN,YAAY,EAAE;YAC5B,OAAOA,YAAY,CAAC,CAAC,CAAC,CAACpP,KAAK;UAC9B,CAAC;UACDA,KAAK,EAAE,SAAAA,CAASqP,OAAO,EAAE;YACvB,MAAMvE,KAAK,GAAGuE,OAAO,CAACC,OAAO,CAACzL,IAAI,CAACqM,MAAM,CAAC,CAAC7D,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,EAAE,CAAC,CAAC;YAC7D,MAAMnM,UAAU,GAAG,CAAEkP,OAAO,CAACE,MAAM,GAAGzE,KAAK,GAAI,GAAG,EAAEqF,OAAO,CAAC,CAAC,CAAC;YAC9D,OAAO,GAAGd,OAAO,CAACE,MAAM,KAAKpP,UAAU,IAAI;UAC7C;QACF;MACF;IACF;EACF,CAAC;EAED,IAAI4B,OAAO,EAAE;IACX,oBACEtC,OAAA;MAAKgB,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BjB,OAAA;QAAKgB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCjB,OAAA;UAAKgB,SAAS,EAAC;QAAiB;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACvC5B,OAAA;UAAAiB,QAAA,EAAG;QAAoB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,IAAIkD,KAAK,EAAE;IACT,oBACE9E,OAAA;MAAKgB,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BjB,OAAA;QAAKgB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BjB,OAAA;UAAAiB,QAAA,GAAG,eAAG,EAAC6D,KAAK;QAAA;UAAArD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjB5B,OAAA;UAAQqC,OAAO,EAAE4D,iBAAkB;UAACjF,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,MAAM+O,OAAO,GAAGvM,IAAI,CAACuM,OAAO,IAAI,CAAC,CAAC;EAClC,MAAMC,YAAY,GAAGxD,oBAAoB,CAAC,CAAC;EAE3C,oBACEpN,OAAA;IAAKgB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAEjCjB,OAAA;MAAKgB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BjB,OAAA;QAAKgB,SAAS,EAAE,oBAAoB2C,WAAW,GAAG,WAAW,GAAG,cAAc,EAAG;QAAA1C,QAAA,gBAC/EjB,OAAA;UAAMgB,SAAS,EAAC;QAAY;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpC5B,OAAA;UAAMgB,SAAS,EAAC,aAAa;UAAAC,QAAA,EAC1B0C,WAAW,GAAG,qBAAqB,GAAG;QAAwB;UAAAlC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,EACLuC,qBAAqB,iBACpBnE,OAAA;QAAKgB,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAClCjB,OAAA;UAAMgB,SAAS,EAAC;QAAkB;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1C5B,OAAA;UAAMgB,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAAwB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CACN,EACA+C,WAAW,iBACV3E,OAAA;QAAKgB,SAAS,EAAC,cAAc;QAAAC,QAAA,GAAC,gBACd,EAAC,IAAI2D,IAAI,CAACD,WAAW,CAAC,CAACkM,kBAAkB,CAAC,CAAC;MAAA;QAAApP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eA2BN5B,OAAA;MAAKgB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BjB,OAAA;QAAAiB,QAAA,EAAI;MAAiB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1B5B,OAAA;QAAKgB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BjB,OAAA;UAAKgB,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAClCjB,OAAA;YAAAiB,QAAA,EAAO;UAAW;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1B5B,OAAA;YACEK,KAAK,EAAE8E,SAAU;YACjB2L,QAAQ,EAAGC,CAAC,IAAK3L,YAAY,CAAC4L,MAAM,CAACD,CAAC,CAACE,MAAM,CAAC5Q,KAAK,CAAC,CAAE;YAAAY,QAAA,gBAEtDjB,OAAA;cAAQK,KAAK,EAAE,CAAE;cAAAY,QAAA,EAAC;YAAS;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACpC5B,OAAA;cAAQK,KAAK,EAAE,CAAE;cAAAY,QAAA,EAAC;YAAY;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACvC5B,OAAA;cAAQK,KAAK,EAAE,EAAG;cAAAY,QAAA,EAAC;YAAa;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACzC5B,OAAA;cAAQK,KAAK,EAAE,GAAI;cAAAY,QAAA,EAAC;YAAS;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACN5B,OAAA;UACEgB,SAAS,EAAE,kBAAkBiE,UAAU,GAAG,YAAY,GAAG,EAAE,EAAG;UAC9D5C,OAAO,EAAEA,CAAA,KAAMqG,cAAc,CAAC,KAAK,CAAE;UACrCwI,QAAQ,EAAEjM,UAAW;UAAAhE,QAAA,EAEpBgE,UAAU,GAAG,eAAe,GAAG;QAAS;UAAAxD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN5B,OAAA;MAAKgB,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBA6BlCjB,OAAA;QAAKgB,SAAS,EAAC,2BAA2B;QAAAC,QAAA,eACxCjB,OAAA;UAAKgB,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAChCjB,OAAA,CAACgC,UAAU;YACTC,IAAI,EAAC,cAAI;YACTC,KAAK,EAAC,gBAAgB;YACpB7B,KAAK,EAAE,EAAA6C,iBAAA,GAAAkB,IAAI,CAACE,WAAW,cAAApB,iBAAA,uBAAhBA,iBAAA,CAAkBmI,KAAK,KAAI,CAAE;YACpClJ,MAAM,EAAE,CAAE;YACVC,UAAU,EAAC,SAAS;YACtB5B,KAAK,EAAC,UAAU;YAChB6B,OAAO,EAAEA,CAAA,KAAMoB,QAAQ,CAAC,UAAU,CAAE;YAClCnB,OAAO,EAAEA;UAAQ;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eACF5B,OAAA,CAACgC,UAAU;YACTC,IAAI,EAAC,cAAI;YACPC,KAAK,EAAC,eAAe;YACrB7B,KAAK,EAAE,CAAC,EAAA8C,kBAAA,GAAAiB,IAAI,CAACE,WAAW,cAAAnB,kBAAA,uBAAhBA,kBAAA,CAAkBmI,IAAI,KAAI,CAAC,KAAK,EAAAlI,kBAAA,GAAAgB,IAAI,CAACE,WAAW,cAAAlB,kBAAA,uBAAhBA,kBAAA,CAAkB4I,QAAQ,KAAI,CAAC,CAAE;YACzE7J,MAAM,EAAE,CAAE;YACVC,UAAU,EAAC,SAAS;YACtB5B,KAAK,EAAC,SAAS;YACf6B,OAAO,EAAEA,CAAA,KAAMoB,QAAQ,CAAC,UAAU,CAAE;YAClCnB,OAAO,EAAEA;UAAQ;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eACF5B,OAAA,CAACgC,UAAU;YACTC,IAAI,EAAC,cAAI;YACTC,KAAK,EAAC,iBAAiB;YACrB7B,KAAK,EAAE,EAAAgD,kBAAA,GAAAe,IAAI,CAACE,WAAW,cAAAjB,kBAAA,uBAAhBA,kBAAA,CAAkB8N,cAAc,KAAI,CAAE;YAC7ChP,MAAM,EAAE,CAAE;YACVC,UAAU,EAAC,SAAS;YACtB5B,KAAK,EAAC,MAAM;YACZ6B,OAAO,EAAEA,CAAA,KAAMoB,QAAQ,CAAC,UAAU,CAAE;YAClCnB,OAAO,EAAEA;UAAQ;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eACF5B,OAAA,CAACgC,UAAU;YACPC,IAAI,EAAC,cAAI;YACTC,KAAK,EAAC,YAAY;YAClB7B,KAAK,EAAE,EAAAiD,kBAAA,GAAAc,IAAI,CAACE,WAAW,cAAAhB,kBAAA,uBAAhBA,kBAAA,CAAkB8N,SAAS,KAAI,CAAE;YAC1CjP,MAAM,EAAE,CAAE;YACVC,UAAU,EAAC,SAAS;YACpB5B,KAAK,EAAC,SAAS;YACf6B,OAAO,EAAEA,CAAA,KAAMoB,QAAQ,CAAC,UAAU,CAAE;YAClCnB,OAAO,EAAEA;UAAQ;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGN5B,OAAA;QAAKgB,SAAS,EAAC,0BAA0B;QAAAC,QAAA,gBACvCjB,OAAA;UAAKgB,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACvBjB,OAAA;YAAKgB,SAAS,EAAC,cAAc;YAAAC,QAAA,eAC/BjB,OAAA;cAAAiB,QAAA,EAAI;YAAa;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CAAC,eACR5B,OAAA;YAAKgB,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBjB,OAAA,CAACI,UAAU;cACPC,KAAK,EAAEoF,YAAY,CAACE,MAAM,KAAK,SAAS,GAAG,GAAG,GAAGF,YAAY,CAACE,MAAM,KAAK,WAAW,GAAG,EAAE,GAAG,CAAE;cAChGrF,QAAQ,EAAE,GAAI;cACdC,KAAK,EAAC,QAAQ;cACZC,KAAK,EAAEiF,YAAY,CAACE,MAAM,KAAK,SAAS,GAAG,SAAS,GAAGF,YAAY,CAACE,MAAM,KAAK,WAAW,GAAG,SAAS,GAAG;YAAU;cAAAlE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtH,CAAC,eACF5B,OAAA,CAACI,UAAU;cACPC,KAAK,EAAEoF,YAAY,CAACG,MAAO;cAC7BtF,QAAQ,EAAE,GAAI;cACZC,KAAK,EAAC,QAAQ;cACdC,KAAK,EAAEiF,YAAY,CAACG,MAAM,GAAG,EAAE,GAAG,SAAS,GAAGH,YAAY,CAACG,MAAM,GAAG,EAAE,GAAG,SAAS,GAAG;YAAU;cAAAnE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClG,CAAC,eACF5B,OAAA,CAACI,UAAU;cACPC,KAAK,EAAEM,IAAI,CAACC,GAAG,CAAC6E,YAAY,CAACI,GAAG,EAAE,GAAG,CAAE;cACzCvF,QAAQ,EAAE,GAAI;cACZC,KAAK,EAAC,WAAW;cACjBC,KAAK,EAAEiF,YAAY,CAACI,GAAG,GAAG,EAAE,GAAG,SAAS,GAAGJ,YAAY,CAACI,GAAG,GAAG,EAAE,GAAG,SAAS,GAAG;YAAU;cAAApE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1F,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACN5B,OAAA;YAAKgB,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5BjB,OAAA;cAAKgB,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BjB,OAAA;gBAAMgB,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAAS;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC/C5B,OAAA;gBAAMgB,SAAS,EAAE,gBAAgByE,YAAY,CAACK,QAAQ,KAAK,WAAW,GAAG,WAAW,GAAG,cAAc,EAAG;gBAAA7E,QAAA,EACrGwE,YAAY,CAACK;cAAQ;gBAAArE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eACN5B,OAAA;cAAKgB,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BjB,OAAA;gBAAMgB,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAAU;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAChD5B,OAAA;gBAAMgB,SAAS,EAAE,gBAAgB2C,WAAW,GAAG,QAAQ,GAAG,UAAU,EAAG;gBAAA1C,QAAA,EACpE0C,WAAW,GAAG,QAAQ,GAAG;cAAU;gBAAAlC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAEN5B,OAAA;UAAKgB,SAAS,EAAC,YAAY;UAAAC,QAAA,gBAC3BjB,OAAA;YAAKgB,SAAS,EAAC,cAAc;YAAAC,QAAA,eACzBjB,OAAA;cAAAiB,QAAA,EAAI;YAAwB;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,eACN5B,OAAA;YAAKgB,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAC3B2J,uBAAuB,CAAC,CAAC,gBAC5B5K,OAAA,CAACrB,IAAI;cAEHyF,IAAI,EAAEwG,uBAAuB,CAAC,CAAE;cAChCyG,OAAO,EAAErD;YAAa,GAFjB,iBAAiBrJ,WAAW,CAAC2M,OAAO,CAAC,CAAC,EAAE;cAAA7P,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAG9C,CAAC,gBAEE5B,OAAA;cAAKgB,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BjB,OAAA;gBAAMgB,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAE;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACtC5B,OAAA;gBAAAiB,QAAA,EAAG;cAAiB;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB;UACN;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAEJ5B,OAAA;UAAKgB,SAAS,EAAC,YAAY;UAAAC,QAAA,gBAC3BjB,OAAA;YAAKgB,SAAS,EAAC,cAAc;YAAAC,QAAA,eAC3BjB,OAAA;cAAAiB,QAAA,EAAI;YAAmB;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC,eACN5B,OAAA;YAAKgB,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAC3BuK,8BAA8B,CAAC,CAAC,gBACnCxL,OAAA,CAACpB,QAAQ;cAEPwF,IAAI,EAAEoH,8BAA8B,CAAC,CAAE;cACvC6F,OAAO,EAAEb;YAAgB,GAFpB,uBAAuB7L,WAAW,CAAC2M,OAAO,CAAC,CAAC,EAAE;cAAA7P,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGpD,CAAC,gBAEE5B,OAAA;cAAKgB,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BjB,OAAA;gBAAMgB,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAE;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACtC5B,OAAA;gBAAAiB,QAAA,EAAG;cAAiB;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB;UACN;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGN5B,OAAA;QAAKgB,SAAS,EAAC,4BAA4B;QAAAC,QAAA,gBACzCjB,OAAA;UAAKgB,SAAS,EAAC,2BAA2B;UAAAC,QAAA,eACxCjB,OAAA,CAACJ,cAAc;YACb0E,WAAW,EAAEF,IAAI,CAACE,WAAY;YAC9BhC,OAAO,EAAE2C;UAAW;YAAAxD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN5B,OAAA;UAAKgB,SAAS,EAAC,YAAY;UAAAC,QAAA,gBAC3BjB,OAAA;YAAKgB,SAAS,EAAC,cAAc;YAAAC,QAAA,eAC3BjB,OAAA;cAAAiB,QAAA,EAAI;YAAc;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eACN5B,OAAA;YAAKgB,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAC3BsL,wBAAwB,CAAC,CAAC,gBAC7BvM,OAAA,CAACnB,GAAG;cAEFuF,IAAI,EAAEmI,wBAAwB,CAAC,CAAE;cACjC8E,OAAO,EAAErD;YAAa,GAFjB,kBAAkBrJ,WAAW,CAAC2M,OAAO,CAAC,CAAC,EAAE;cAAA7P,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAG/C,CAAC,gBAEE5B,OAAA;cAAKgB,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BjB,OAAA;gBAAMgB,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAG;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACvC5B,OAAA;gBAAAiB,QAAA,EAAG;cAAiB;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB;UACN;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGN5B,OAAA;QAAKgB,SAAS,EAAC,4BAA4B;QAAAC,QAAA,gBACzCjB,OAAA;UAAKgB,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC9BjB,OAAA;YAAKgB,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9BjB,OAAA;cAAAiB,QAAA,EAAI;YAAkB;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACzB5B,OAAA;cAAKgB,SAAS,EAAC,mBAAmB;cAAAC,QAAA,eACpCjB,OAAA;gBAAMgB,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,GAAEN,IAAI,CAACC,GAAG,CAACgQ,YAAY,CAACjK,MAAM,EAAE,CAAC,CAAC,EAAC,gBAAc;cAAA;gBAAAlF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACN5B,OAAA;YAAKgB,SAAS,EAAC,eAAe;YAAAC,QAAA,EAC3B2P,YAAY,CAACjK,MAAM,KAAK,CAAC,gBACxB3G,OAAA;cAAKgB,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BjB,OAAA;gBAAMgB,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAE;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACtC5B,OAAA;gBAAAiB,QAAA,EAAG;cAAkB;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB,CAAC,gBAEN5B,OAAA,CAAAE,SAAA;cAAAe,QAAA,GACG2P,YAAY,CAACzG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACrD,GAAG,CAAC,CAACpE,IAAI,EAAE2K,KAAK,kBACxCrN,OAAA,CAACyC,YAAY;gBAEXC,IAAI,EAAEA,IAAK;gBACXL,OAAO,EAAEA,CAAA,KAAMoB,QAAQ,CAAC,mBAAmBf,IAAI,CAAC+K,EAAE,EAAE;cAAE,GAFjDJ,KAAK;gBAAA5L,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAGX,CACF,CAAC,EACDgP,YAAY,CAACjK,MAAM,GAAG,CAAC,iBACtB3G,OAAA;gBAAKgB,SAAS,EAAC,qBAAqB;gBAAAC,QAAA,eAClCjB,OAAA;kBAAMgB,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,GAAC,GAAC,EAAC2P,YAAY,CAACjK,MAAM,GAAG,CAAC,EAAC,cAAY;gBAAA;kBAAAlF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3E,CACN;YAAA,eACD;UACH;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEJ5B,OAAA;UAAKgB,SAAS,EAAC,uBAAuB;UAAAC,QAAA,eACpCjB,OAAA,CAACH,mBAAmB;YAClByE,WAAW,EAAEF,IAAI,CAACE,WAAY;YAC9BC,cAAc,EAAEH,IAAI,CAACG,cAAe;YACpCjC,OAAO,EAAE2C;UAAW;YAAAxD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACqB,EAAA,CAhjCID,QAAQ;EAAA,QAGKjF,WAAW,EAYxB+B,YAAY;AAAA;AAAAyR,GAAA,GAfZvO,QAAQ;AAkjCd,eAAeA,QAAQ;AAAC,IAAAjB,EAAA,EAAAS,GAAA,EAAAO,GAAA,EAAAwO,GAAA;AAAAC,YAAA,CAAAzP,EAAA;AAAAyP,YAAA,CAAAhP,GAAA;AAAAgP,YAAA,CAAAzO,GAAA;AAAAyO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}