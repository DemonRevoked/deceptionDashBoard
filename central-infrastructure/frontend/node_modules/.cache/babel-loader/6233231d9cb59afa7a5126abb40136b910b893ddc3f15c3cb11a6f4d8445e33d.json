{"ast":null,"code":"import React,{useEffect,useState,useMemo}from'react';import{Link}from'react-router-dom';import{fetchHoneypots,fetchEvents,fetchHoneypotStatuses}from'../api';import useRealTimeEvents from'../hooks/useRealTimeEvents';import HealthStatus from'../components/HealthStatus';import styles from'../styles/HoneypotStatus.module.css';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,LineElement,PointElement,Title,Tooltip,Legend,ArcElement}from'chart.js';import{Pie,Bar,Line}from'react-chartjs-2';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,LineElement,PointElement,Title,Tooltip,Legend,ArcElement);export default function HoneypotStatus(){const[honeypots,setHoneypots]=useState([]);const[historicalEvents,setHistoricalEvents]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[refreshing,setRefreshing]=useState(false);const[activeFilter,setActiveFilter]=useState('all');// Real-time events and status updates\nconst{events:realTimeEvents,honeypotStatuses,securityAlerts,isConnected}=useRealTimeEvents({maxEvents:200,enableNotifications:true,enableSecurityAlerts:true});// Combine historical and real-time events\nconst allEvents=useMemo(()=>{const eventMap=new Map();historicalEvents.forEach(event=>{eventMap.set(event._id,event);});realTimeEvents.forEach(event=>{eventMap.set(event._id,event);});return Array.from(eventMap.values()).sort((a,b)=>new Date(b.timestamp)-new Date(a.timestamp));},[historicalEvents,realTimeEvents]);// Update honeypot statuses with real-time data\nconst updatedHoneypots=useMemo(()=>{return honeypots.map(hp=>{const statusUpdate=honeypotStatuses[hp._id];if(statusUpdate){return{...hp,status:statusUpdate.status,updated_at:statusUpdate.updated_at};}return hp;});},[honeypots,honeypotStatuses]);// Analytics calculations\nconst analytics=useMemo(()=>{const now=Date.now();const last24Hours=allEvents.filter(e=>now-new Date(e.timestamp).getTime()<24*60*60*1000).length;const last7Days=allEvents.filter(e=>now-new Date(e.timestamp).getTime()<7*24*60*60*1000).length;// Hourly activity for last 24 hours\nconst hourlyActivity=Array.from({length:24},(_,i)=>{const hour=new Date().getHours()-i;const hourStart=new Date();hourStart.setHours(hour<0?24+hour:hour,0,0,0);const hourEnd=new Date(hourStart);hourEnd.setHours(hourStart.getHours()+1);const count=allEvents.filter(e=>{const eventTime=new Date(e.timestamp);return eventTime>=hourStart&&eventTime<hourEnd;}).length;return{hour:hour<0?24+hour:hour,count};}).reverse();// Top attacking IPs\nconst ipCounts={};allEvents.forEach(event=>{if(event.source_ip){ipCounts[event.source_ip]=(ipCounts[event.source_ip]||0)+1;}});const topIPs=Object.entries(ipCounts).sort((_ref,_ref2)=>{let[,a]=_ref;let[,b]=_ref2;return b-a;}).slice(0,10);// Event types distribution\nconst eventTypes={};allEvents.forEach(event=>{const type=event.event_type||event.data_type||'unknown';eventTypes[type]=(eventTypes[type]||0)+1;});// Severity distribution\nconst severityCount={low:allEvents.filter(e=>e.severity==='low').length,medium:allEvents.filter(e=>e.severity==='medium').length,high:allEvents.filter(e=>e.severity==='high').length,critical:allEvents.filter(e=>e.severity==='critical').length};return{last24Hours,last7Days,hourlyActivity,topIPs,eventTypes,severityCount,totalEvents:allEvents.length,uniqueIPs:Object.keys(ipCounts).length,activeHoneypots:updatedHoneypots.filter(hp=>hp.status==='running').length,totalHoneypots:updatedHoneypots.length};},[allEvents,updatedHoneypots]);// Load initial data\nuseEffect(()=>{async function loadData(){try{setLoading(true);const hps=await fetchHoneypots();setHoneypots(hps);const evs=await fetchEvents({limit:1000});setHistoricalEvents(evs);}catch(e){console.error('Error loading honeypot status data:',e);setError(e.message||'Failed to load honeypot data');}finally{setLoading(false);}}loadData();},[]);const refreshStatuses=async()=>{setRefreshing(true);try{const statuses=await fetchHoneypotStatuses();setHoneypots(honeypots=>honeypots.map(hp=>{const found=statuses.find(s=>s._id===hp._id);return found?{...hp,status:found.status}:hp;}));}catch(e){setError('Failed to refresh statuses: '+e.message);}finally{setRefreshing(false);}};// Filter honeypots based on active filter\nconst filteredHoneypots=useMemo(()=>{if(activeFilter==='all')return updatedHoneypots;if(activeFilter==='running')return updatedHoneypots.filter(hp=>hp.status==='running');if(activeFilter==='stopped')return updatedHoneypots.filter(hp=>hp.status==='stopped');return updatedHoneypots;},[updatedHoneypots,activeFilter]);// Chart configurations\nconst hourlyChartData={labels:analytics.hourlyActivity.map(h=>`${h.hour}:00`),datasets:[{label:'Events per Hour',data:analytics.hourlyActivity.map(h=>h.count),borderColor:'#06b6d4',backgroundColor:'rgba(6, 182, 212, 0.1)',tension:0.4,fill:true}]};const eventTypeChartData={labels:Object.keys(analytics.eventTypes).map(type=>type.replace('_',' ').toUpperCase()),datasets:[{data:Object.values(analytics.eventTypes),backgroundColor:['#06b6d4','#10b981','#f59e0b','#ef4444','#8b5cf6','#ec4899','#84cc16','#f97316'],borderColor:'#1e293b',borderWidth:2}]};const severityChartData={labels:['Low','Medium','High','Critical'],datasets:[{data:[analytics.severityCount.low,analytics.severityCount.medium,analytics.severityCount.high,analytics.severityCount.critical],backgroundColor:['#22c55e','#f59e0b','#f97316','#ef4444'],borderColor:'#1e293b',borderWidth:2}]};const chartOptions={responsive:true,maintainAspectRatio:false,plugins:{legend:{position:'bottom',labels:{color:'#cbd5e1',font:{size:12}}}}};if(loading)return/*#__PURE__*/_jsx(\"div\",{className:styles.loading,children:\"Loading honeypot status...\"});if(error)return/*#__PURE__*/_jsx(\"div\",{className:styles.error,children:error});return/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.header,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.headerLeft,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Honeypot Status Dashboard\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Live monitoring and analytics for your honeypot infrastructure\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.headerRight,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.connectionStatus,children:[/*#__PURE__*/_jsx(\"span\",{className:`${styles.statusDot} ${isConnected?styles.connected:styles.disconnected}`}),/*#__PURE__*/_jsx(\"span\",{children:isConnected?'Real-time Connected':'Disconnected'})]}),/*#__PURE__*/_jsx(Link,{to:\"/honeypots/management\",className:styles.manageBtn,children:\"\\uD83C\\uDF9B\\uFE0F Manage Honeypots\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.healthSection,children:/*#__PURE__*/_jsx(HealthStatus,{showDetails:true})}),securityAlerts.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:styles.alertsSection,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDEA8 Active Security Alerts\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.alertsList,children:securityAlerts.slice(0,5).map((alert,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`${styles.alertItem} ${styles[alert.severity]||''}`,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.alertType,children:alert.type}),/*#__PURE__*/_jsx(\"span\",{className:styles.alertMessage,children:alert.message}),/*#__PURE__*/_jsx(\"span\",{className:styles.alertTime,children:new Date(alert.timestamp).toLocaleString()})]},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.metricsGrid,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.metricCard,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.metricIcon,children:\"\\uD83D\\uDEE1\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.metricContent,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Active Honeypots\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.metricValue,children:analytics.activeHoneypots}),/*#__PURE__*/_jsxs(\"div\",{className:styles.metricChange,children:[\"of \",analytics.totalHoneypots,\" total\",realTimeEvents.length>0&&/*#__PURE__*/_jsx(\"span\",{className:styles.realtimeIndicator,children:\"\\u2022 Live updates\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.metricCard,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.metricIcon,children:\"\\u26A1\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.metricContent,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"24h Activity\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.metricValue,children:analytics.last24Hours}),/*#__PURE__*/_jsxs(\"div\",{className:styles.metricChange,children:[\"Recent security events\",realTimeEvents.length>0&&/*#__PURE__*/_jsxs(\"span\",{className:styles.realtimeIndicator,children:[\"\\u2022 \",realTimeEvents.length,\" new\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.metricCard,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.metricIcon,children:\"\\uD83C\\uDF10\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.metricContent,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Unique Attackers\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.metricValue,children:analytics.uniqueIPs}),/*#__PURE__*/_jsx(\"div\",{className:styles.metricChange,children:\"Distinct IP addresses\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.metricCard,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.metricIcon,children:\"\\uD83C\\uDFAF\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.metricContent,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Total Events\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.metricValue,children:analytics.totalEvents}),/*#__PURE__*/_jsx(\"div\",{className:styles.metricChange,children:\"All time incidents\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.chartsGrid,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.chartCard,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"24-Hour Activity Timeline\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.chartContainer,children:/*#__PURE__*/_jsx(Line,{data:hourlyChartData,options:chartOptions})})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.chartCard,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Event Types Distribution\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.chartContainer,children:/*#__PURE__*/_jsx(Pie,{data:eventTypeChartData,options:chartOptions})})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.chartCard,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Threat Severity Levels\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.chartContainer,children:/*#__PURE__*/_jsx(Pie,{data:severityChartData,options:chartOptions})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.statusSection,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.statusHeader,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Honeypot Infrastructure Status\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.statusControls,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.filterButtons,children:[/*#__PURE__*/_jsxs(\"button\",{className:`${styles.filterBtn} ${activeFilter==='all'?styles.active:''}`,onClick:()=>setActiveFilter('all'),children:[\"All (\",updatedHoneypots.length,\")\"]}),/*#__PURE__*/_jsxs(\"button\",{className:`${styles.filterBtn} ${activeFilter==='running'?styles.active:''}`,onClick:()=>setActiveFilter('running'),children:[\"Running (\",updatedHoneypots.filter(hp=>hp.status==='running').length,\")\"]}),/*#__PURE__*/_jsxs(\"button\",{className:`${styles.filterBtn} ${activeFilter==='stopped'?styles.active:''}`,onClick:()=>setActiveFilter('stopped'),children:[\"Stopped (\",updatedHoneypots.filter(hp=>hp.status==='stopped').length,\")\"]})]}),/*#__PURE__*/_jsx(\"button\",{className:styles.refreshBtn,onClick:refreshStatuses,disabled:refreshing,children:refreshing?'Refreshing...':'🔄 Refresh Status'})]})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.honeypotGrid,children:filteredHoneypots.map(hp=>{var _hp$protocol;const hpEvents=allEvents.filter(ev=>ev.honeypot_id===hp._id);const lastEvent=hpEvents[0];const lastEventTime=lastEvent?new Date(lastEvent.timestamp).toLocaleString():'No activity';const isRealTimeUpdate=honeypotStatuses[hp._id];const last24hEvents=hpEvents.filter(e=>Date.now()-new Date(e.timestamp).getTime()<24*60*60*1000).length;return/*#__PURE__*/_jsxs(Link,{to:`/honeypot/${hp._id}`,className:styles.honeypotCard,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.cardHeader,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.honeypotInfo,children:[/*#__PURE__*/_jsxs(\"span\",{className:styles.name,children:[hp.name,isRealTimeUpdate&&/*#__PURE__*/_jsx(\"span\",{className:styles.liveIndicator,children:\"\\uD83D\\uDD34 LIVE\"})]}),/*#__PURE__*/_jsx(\"span\",{className:styles.protocol,children:(_hp$protocol=hp.protocol)===null||_hp$protocol===void 0?void 0:_hp$protocol.toUpperCase()})]}),/*#__PURE__*/_jsx(\"span\",{className:`${styles.status} ${styles[hp.status]}`,children:hp.status.toUpperCase()})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.cardDetails,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.detailRow,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.label,children:\"Type:\"}),/*#__PURE__*/_jsx(\"span\",{className:styles.value,children:hp.type})]}),hp.host&&hp.port&&/*#__PURE__*/_jsxs(\"div\",{className:styles.detailRow,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.label,children:\"Address:\"}),/*#__PURE__*/_jsxs(\"span\",{className:styles.value,children:[hp.host,\":\",hp.port]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.detailRow,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.label,children:\"Total Events:\"}),/*#__PURE__*/_jsx(\"span\",{className:styles.value,children:hpEvents.length})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.detailRow,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.label,children:\"24h Activity:\"}),/*#__PURE__*/_jsx(\"span\",{className:styles.value,children:last24hEvents})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.detailRow,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.label,children:\"Last Activity:\"}),/*#__PURE__*/_jsx(\"span\",{className:styles.value,children:lastEventTime})]})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.cardFooter,children:/*#__PURE__*/_jsx(\"span\",{className:styles.viewDetails,children:\"View Details \\u2192\"})})]},hp._id);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.threatsSection,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Top Threat Sources (24h)\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.threatsList,children:analytics.topIPs.slice(0,10).map((_ref3,index)=>{let[ip,count]=_ref3;return/*#__PURE__*/_jsxs(\"div\",{className:styles.threatItem,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.threatRank,children:[\"#\",index+1]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.threatInfo,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.threatIP,children:ip}),/*#__PURE__*/_jsxs(\"span\",{className:styles.threatCount,children:[count,\" attacks\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.threatSeverity,children:count>=50?'🔴':count>=20?'🟡':'🟢'})]},ip);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.eventsSection,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.eventsHeader,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Recent Security Events\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.eventsControls,children:[realTimeEvents.length>0&&/*#__PURE__*/_jsxs(\"span\",{className:styles.newEventsCounter,children:[realTimeEvents.length,\" new events\"]}),/*#__PURE__*/_jsx(Link,{to:\"/honeypots/management\",className:styles.manageBtn,children:\"Manage Honeypots \\u2192\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.eventsList,children:allEvents.slice(0,15).map(event=>{var _event$commands,_event$data,_event$data2,_event$data3;const isNewEvent=realTimeEvents.some(e=>e._id===event._id);return/*#__PURE__*/_jsxs(Link,{to:`/sessions/${event._id}`,className:`${styles.eventItem} ${isNewEvent?styles.newEvent:''}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.eventHeader,children:[/*#__PURE__*/_jsxs(\"span\",{className:styles.eventIP,children:[event.source_ip,isNewEvent&&/*#__PURE__*/_jsx(\"span\",{className:styles.newBadge,children:\"NEW\"})]}),/*#__PURE__*/_jsx(\"span\",{className:styles.eventTime,children:new Date(event.timestamp).toLocaleString()}),/*#__PURE__*/_jsx(\"span\",{className:`${styles.eventBadge} ${styles[event.severity]||''}`,children:(event.event_type||event.data_type||'unknown').replace('_',' ').toUpperCase()})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.eventDetails,children:(event.event_type||event.data_type)==='session'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"SSH Session \\u2022 \",((_event$commands=event.commands)===null||_event$commands===void 0?void 0:_event$commands.length)||0,\" commands\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Duration: \",Math.round(event.duration||0),\"s\"]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Severity: \",event.severity]}),((_event$data=event.data)===null||_event$data===void 0?void 0:_event$data.username)&&/*#__PURE__*/_jsxs(\"span\",{children:[\"User: \",event.data.username]}),((_event$data2=event.data)===null||_event$data2===void 0?void 0:_event$data2.filename)&&/*#__PURE__*/_jsxs(\"span\",{children:[\"File: \",event.data.filename]}),((_event$data3=event.data)===null||_event$data3===void 0?void 0:_event$data3.path)&&/*#__PURE__*/_jsxs(\"span\",{children:[\"Path: \",event.data.path]})]})})]},event._id);})})]})]});}","map":{"version":3,"names":["React","useEffect","useState","useMemo","Link","fetchHoneypots","fetchEvents","fetchHoneypotStatuses","useRealTimeEvents","HealthStatus","styles","Chart","ChartJS","CategoryScale","LinearScale","BarElement","LineElement","PointElement","Title","Tooltip","Legend","ArcElement","Pie","Bar","Line","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","register","HoneypotStatus","honeypots","setHoneypots","historicalEvents","setHistoricalEvents","loading","setLoading","error","setError","refreshing","setRefreshing","activeFilter","setActiveFilter","events","realTimeEvents","honeypotStatuses","securityAlerts","isConnected","maxEvents","enableNotifications","enableSecurityAlerts","allEvents","eventMap","Map","forEach","event","set","_id","Array","from","values","sort","a","b","Date","timestamp","updatedHoneypots","map","hp","statusUpdate","status","updated_at","analytics","now","last24Hours","filter","e","getTime","length","last7Days","hourlyActivity","_","i","hour","getHours","hourStart","setHours","hourEnd","count","eventTime","reverse","ipCounts","source_ip","topIPs","Object","entries","_ref","_ref2","slice","eventTypes","type","event_type","data_type","severityCount","low","severity","medium","high","critical","totalEvents","uniqueIPs","keys","activeHoneypots","totalHoneypots","loadData","hps","evs","limit","console","message","refreshStatuses","statuses","found","find","s","filteredHoneypots","hourlyChartData","labels","h","datasets","label","data","borderColor","backgroundColor","tension","fill","eventTypeChartData","replace","toUpperCase","borderWidth","severityChartData","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","color","font","size","className","children","container","header","headerLeft","headerRight","connectionStatus","statusDot","connected","disconnected","to","manageBtn","healthSection","showDetails","alertsSection","alertsList","alert","index","alertItem","alertType","alertMessage","alertTime","toLocaleString","metricsGrid","metricCard","metricIcon","metricContent","metricValue","metricChange","realtimeIndicator","chartsGrid","chartCard","chartContainer","options","statusSection","statusHeader","statusControls","filterButtons","filterBtn","active","onClick","refreshBtn","disabled","honeypotGrid","_hp$protocol","hpEvents","ev","honeypot_id","lastEvent","lastEventTime","isRealTimeUpdate","last24hEvents","honeypotCard","cardHeader","honeypotInfo","name","liveIndicator","protocol","cardDetails","detailRow","value","host","port","cardFooter","viewDetails","threatsSection","threatsList","_ref3","ip","threatItem","threatRank","threatInfo","threatIP","threatCount","threatSeverity","eventsSection","eventsHeader","eventsControls","newEventsCounter","eventsList","_event$commands","_event$data","_event$data2","_event$data3","isNewEvent","some","eventItem","newEvent","eventHeader","eventIP","newBadge","eventBadge","eventDetails","commands","Math","round","duration","username","filename","path"],"sources":["/home/demon/distributed-architecture/central-infrastructure/frontend/src/pages/HoneypotStatus.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchHoneypots, fetchEvents, fetchHoneypotStatuses } from '../api';\nimport useRealTimeEvents from '../hooks/useRealTimeEvents';\nimport HealthStatus from '../components/HealthStatus';\nimport styles from '../styles/HoneypotStatus.module.css';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  LineElement,\n  PointElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n} from 'chart.js';\nimport { Pie, Bar, Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  LineElement,\n  PointElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement\n);\n\nexport default function HoneypotStatus() {\n  const [honeypots, setHoneypots] = useState([]);\n  const [historicalEvents, setHistoricalEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [refreshing, setRefreshing] = useState(false);\n  const [activeFilter, setActiveFilter] = useState('all');\n\n  // Real-time events and status updates\n  const { \n    events: realTimeEvents, \n    honeypotStatuses, \n    securityAlerts, \n    isConnected \n  } = useRealTimeEvents({\n    maxEvents: 200,\n    enableNotifications: true,\n    enableSecurityAlerts: true\n  });\n\n  // Combine historical and real-time events\n  const allEvents = useMemo(() => {\n    const eventMap = new Map();\n    \n    historicalEvents.forEach(event => {\n      eventMap.set(event._id, event);\n    });\n    \n    realTimeEvents.forEach(event => {\n      eventMap.set(event._id, event);\n    });\n    \n    return Array.from(eventMap.values())\n      .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n  }, [historicalEvents, realTimeEvents]);\n\n  // Update honeypot statuses with real-time data\n  const updatedHoneypots = useMemo(() => {\n    return honeypots.map(hp => {\n      const statusUpdate = honeypotStatuses[hp._id];\n      if (statusUpdate) {\n        return {\n          ...hp,\n          status: statusUpdate.status,\n          updated_at: statusUpdate.updated_at\n        };\n      }\n      return hp;\n    });\n  }, [honeypots, honeypotStatuses]);\n\n  // Analytics calculations\n  const analytics = useMemo(() => {\n    const now = Date.now();\n    const last24Hours = allEvents.filter(e => \n      now - new Date(e.timestamp).getTime() < 24 * 60 * 60 * 1000\n    ).length;\n    \n    const last7Days = allEvents.filter(e => \n      now - new Date(e.timestamp).getTime() < 7 * 24 * 60 * 60 * 1000\n    ).length;\n\n    // Hourly activity for last 24 hours\n    const hourlyActivity = Array.from({ length: 24 }, (_, i) => {\n      const hour = new Date().getHours() - i;\n      const hourStart = new Date();\n      hourStart.setHours(hour < 0 ? 24 + hour : hour, 0, 0, 0);\n      const hourEnd = new Date(hourStart);\n      hourEnd.setHours(hourStart.getHours() + 1);\n      \n      const count = allEvents.filter(e => {\n        const eventTime = new Date(e.timestamp);\n        return eventTime >= hourStart && eventTime < hourEnd;\n      }).length;\n      \n      return { hour: hour < 0 ? 24 + hour : hour, count };\n    }).reverse();\n\n    // Top attacking IPs\n    const ipCounts = {};\n    allEvents.forEach(event => {\n      if (event.source_ip) {\n        ipCounts[event.source_ip] = (ipCounts[event.source_ip] || 0) + 1;\n      }\n    });\n    const topIPs = Object.entries(ipCounts)\n      .sort(([,a], [,b]) => b - a)\n      .slice(0, 10);\n\n    // Event types distribution\n    const eventTypes = {};\n    allEvents.forEach(event => {\n      const type = event.event_type || event.data_type || 'unknown';\n      eventTypes[type] = (eventTypes[type] || 0) + 1;\n    });\n\n    // Severity distribution\n    const severityCount = {\n      low: allEvents.filter(e => e.severity === 'low').length,\n      medium: allEvents.filter(e => e.severity === 'medium').length,\n      high: allEvents.filter(e => e.severity === 'high').length,\n      critical: allEvents.filter(e => e.severity === 'critical').length\n    };\n\n    return {\n      last24Hours,\n      last7Days,\n      hourlyActivity,\n      topIPs,\n      eventTypes,\n      severityCount,\n      totalEvents: allEvents.length,\n      uniqueIPs: Object.keys(ipCounts).length,\n      activeHoneypots: updatedHoneypots.filter(hp => hp.status === 'running').length,\n      totalHoneypots: updatedHoneypots.length\n    };\n  }, [allEvents, updatedHoneypots]);\n\n  // Load initial data\n  useEffect(() => {\n    async function loadData() {\n      try {\n        setLoading(true);\n        const hps = await fetchHoneypots();\n        setHoneypots(hps);\n        \n        const evs = await fetchEvents({ limit: 1000 });\n        setHistoricalEvents(evs);\n        \n      } catch (e) {\n        console.error('Error loading honeypot status data:', e);\n        setError(e.message || 'Failed to load honeypot data');\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadData();\n  }, []);\n\n  const refreshStatuses = async () => {\n    setRefreshing(true);\n    try {\n      const statuses = await fetchHoneypotStatuses();\n      setHoneypots(honeypots => honeypots.map(hp => {\n        const found = statuses.find(s => s._id === hp._id);\n        return found ? { ...hp, status: found.status } : hp;\n      }));\n    } catch (e) {\n      setError('Failed to refresh statuses: ' + e.message);\n    } finally {\n      setRefreshing(false);\n    }\n  };\n\n  // Filter honeypots based on active filter\n  const filteredHoneypots = useMemo(() => {\n    if (activeFilter === 'all') return updatedHoneypots;\n    if (activeFilter === 'running') return updatedHoneypots.filter(hp => hp.status === 'running');\n    if (activeFilter === 'stopped') return updatedHoneypots.filter(hp => hp.status === 'stopped');\n    return updatedHoneypots;\n  }, [updatedHoneypots, activeFilter]);\n\n  // Chart configurations\n  const hourlyChartData = {\n    labels: analytics.hourlyActivity.map(h => `${h.hour}:00`),\n    datasets: [{\n      label: 'Events per Hour',\n      data: analytics.hourlyActivity.map(h => h.count),\n      borderColor: '#06b6d4',\n      backgroundColor: 'rgba(6, 182, 212, 0.1)',\n      tension: 0.4,\n      fill: true\n    }]\n  };\n\n  const eventTypeChartData = {\n    labels: Object.keys(analytics.eventTypes).map(type => \n      type.replace('_', ' ').toUpperCase()\n    ),\n    datasets: [{\n      data: Object.values(analytics.eventTypes),\n      backgroundColor: [\n        '#06b6d4', '#10b981', '#f59e0b', '#ef4444', \n        '#8b5cf6', '#ec4899', '#84cc16', '#f97316'\n      ],\n      borderColor: '#1e293b',\n      borderWidth: 2,\n    }]\n  };\n\n  const severityChartData = {\n    labels: ['Low', 'Medium', 'High', 'Critical'],\n    datasets: [{\n      data: [\n        analytics.severityCount.low,\n        analytics.severityCount.medium,\n        analytics.severityCount.high,\n        analytics.severityCount.critical\n      ],\n      backgroundColor: ['#22c55e', '#f59e0b', '#f97316', '#ef4444'],\n      borderColor: '#1e293b',\n      borderWidth: 2,\n    }]\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          color: '#cbd5e1',\n          font: { size: 12 }\n        }\n      }\n    }\n  };\n\n  if (loading) return <div className={styles.loading}>Loading honeypot status...</div>;\n  if (error) return <div className={styles.error}>{error}</div>;\n\n  return (\n    <div className={styles.container}>\n      {/* Header */}\n      <div className={styles.header}>\n        <div className={styles.headerLeft}>\n          <h2>Honeypot Status Dashboard</h2>\n          <p>Live monitoring and analytics for your honeypot infrastructure</p>\n        </div>\n        <div className={styles.headerRight}>\n          <div className={styles.connectionStatus}>\n            <span className={`${styles.statusDot} ${isConnected ? styles.connected : styles.disconnected}`}></span>\n            <span>{isConnected ? 'Real-time Connected' : 'Disconnected'}</span>\n          </div>\n          <Link to=\"/honeypots/management\" className={styles.manageBtn}>\n            🎛️ Manage Honeypots\n          </Link>\n        </div>\n      </div>\n\n      {/* System Health Status */}\n      <div className={styles.healthSection}>\n        <HealthStatus showDetails={true} />\n      </div>\n\n      {/* Security Alerts */}\n      {securityAlerts.length > 0 && (\n        <div className={styles.alertsSection}>\n          <h3>🚨 Active Security Alerts</h3>\n          <div className={styles.alertsList}>\n            {securityAlerts.slice(0, 5).map((alert, index) => (\n              <div key={index} className={`${styles.alertItem} ${styles[alert.severity] || ''}`}>\n                <span className={styles.alertType}>{alert.type}</span>\n                <span className={styles.alertMessage}>{alert.message}</span>\n                <span className={styles.alertTime}>\n                  {new Date(alert.timestamp).toLocaleString()}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Key Metrics */}\n      <div className={styles.metricsGrid}>\n        <div className={styles.metricCard}>\n          <div className={styles.metricIcon}>🛡️</div>\n          <div className={styles.metricContent}>\n            <h3>Active Honeypots</h3>\n            <div className={styles.metricValue}>{analytics.activeHoneypots}</div>\n            <div className={styles.metricChange}>\n              of {analytics.totalHoneypots} total\n              {realTimeEvents.length > 0 && (\n                <span className={styles.realtimeIndicator}>• Live updates</span>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className={styles.metricCard}>\n          <div className={styles.metricIcon}>⚡</div>\n          <div className={styles.metricContent}>\n            <h3>24h Activity</h3>\n            <div className={styles.metricValue}>{analytics.last24Hours}</div>\n            <div className={styles.metricChange}>\n              Recent security events\n              {realTimeEvents.length > 0 && (\n                <span className={styles.realtimeIndicator}>• {realTimeEvents.length} new</span>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className={styles.metricCard}>\n          <div className={styles.metricIcon}>🌐</div>\n          <div className={styles.metricContent}>\n            <h3>Unique Attackers</h3>\n            <div className={styles.metricValue}>{analytics.uniqueIPs}</div>\n            <div className={styles.metricChange}>Distinct IP addresses</div>\n          </div>\n        </div>\n\n        <div className={styles.metricCard}>\n          <div className={styles.metricIcon}>🎯</div>\n          <div className={styles.metricContent}>\n            <h3>Total Events</h3>\n            <div className={styles.metricValue}>{analytics.totalEvents}</div>\n            <div className={styles.metricChange}>All time incidents</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Analytics Charts */}\n      <div className={styles.chartsGrid}>\n        <div className={styles.chartCard}>\n          <h3>24-Hour Activity Timeline</h3>\n          <div className={styles.chartContainer}>\n            <Line data={hourlyChartData} options={chartOptions} />\n          </div>\n        </div>\n\n        <div className={styles.chartCard}>\n          <h3>Event Types Distribution</h3>\n          <div className={styles.chartContainer}>\n            <Pie data={eventTypeChartData} options={chartOptions} />\n          </div>\n        </div>\n\n        <div className={styles.chartCard}>\n          <h3>Threat Severity Levels</h3>\n          <div className={styles.chartContainer}>\n            <Pie data={severityChartData} options={chartOptions} />\n          </div>\n        </div>\n      </div>\n\n      {/* Honeypot Status Overview */}\n      <div className={styles.statusSection}>\n        <div className={styles.statusHeader}>\n          <h3>Honeypot Infrastructure Status</h3>\n          <div className={styles.statusControls}>\n            <div className={styles.filterButtons}>\n              <button \n                className={`${styles.filterBtn} ${activeFilter === 'all' ? styles.active : ''}`}\n                onClick={() => setActiveFilter('all')}\n              >\n                All ({updatedHoneypots.length})\n              </button>\n              <button \n                className={`${styles.filterBtn} ${activeFilter === 'running' ? styles.active : ''}`}\n                onClick={() => setActiveFilter('running')}\n              >\n                Running ({updatedHoneypots.filter(hp => hp.status === 'running').length})\n              </button>\n              <button \n                className={`${styles.filterBtn} ${activeFilter === 'stopped' ? styles.active : ''}`}\n                onClick={() => setActiveFilter('stopped')}\n              >\n                Stopped ({updatedHoneypots.filter(hp => hp.status === 'stopped').length})\n              </button>\n            </div>\n            <button \n              className={styles.refreshBtn} \n              onClick={refreshStatuses} \n              disabled={refreshing}\n            >\n              {refreshing ? 'Refreshing...' : '🔄 Refresh Status'}\n            </button>\n          </div>\n        </div>\n\n        <div className={styles.honeypotGrid}>\n          {filteredHoneypots.map(hp => {\n            const hpEvents = allEvents.filter(ev => ev.honeypot_id === hp._id);\n            const lastEvent = hpEvents[0];\n            const lastEventTime = lastEvent ? new Date(lastEvent.timestamp).toLocaleString() : 'No activity';\n            const isRealTimeUpdate = honeypotStatuses[hp._id];\n            const last24hEvents = hpEvents.filter(e => \n              Date.now() - new Date(e.timestamp).getTime() < 24 * 60 * 60 * 1000\n            ).length;\n            \n            return (\n              <Link to={`/honeypot/${hp._id}`} key={hp._id} className={styles.honeypotCard}>\n                <div className={styles.cardHeader}>\n                  <div className={styles.honeypotInfo}>\n                    <span className={styles.name}>\n                      {hp.name}\n                      {isRealTimeUpdate && (\n                        <span className={styles.liveIndicator}>🔴 LIVE</span>\n                      )}\n                    </span>\n                    <span className={styles.protocol}>{hp.protocol?.toUpperCase()}</span>\n                  </div>\n                  <span className={`${styles.status} ${styles[hp.status]}`}>\n                    {hp.status.toUpperCase()}\n                  </span>\n                </div>\n                \n                <div className={styles.cardDetails}>\n                  <div className={styles.detailRow}>\n                    <span className={styles.label}>Type:</span>\n                    <span className={styles.value}>{hp.type}</span>\n                  </div>\n                  {hp.host && hp.port && (\n                    <div className={styles.detailRow}>\n                      <span className={styles.label}>Address:</span>\n                      <span className={styles.value}>{hp.host}:{hp.port}</span>\n                    </div>\n                  )}\n                  <div className={styles.detailRow}>\n                    <span className={styles.label}>Total Events:</span>\n                    <span className={styles.value}>{hpEvents.length}</span>\n                  </div>\n                  <div className={styles.detailRow}>\n                    <span className={styles.label}>24h Activity:</span>\n                    <span className={styles.value}>{last24hEvents}</span>\n                  </div>\n                  <div className={styles.detailRow}>\n                    <span className={styles.label}>Last Activity:</span>\n                    <span className={styles.value}>{lastEventTime}</span>\n                  </div>\n                </div>\n\n                <div className={styles.cardFooter}>\n                  <span className={styles.viewDetails}>View Details →</span>\n                </div>\n              </Link>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Top Threat Sources */}\n      <div className={styles.threatsSection}>\n        <h3>Top Threat Sources (24h)</h3>\n        <div className={styles.threatsList}>\n          {analytics.topIPs.slice(0, 10).map(([ip, count], index) => (\n            <div key={ip} className={styles.threatItem}>\n              <div className={styles.threatRank}>#{index + 1}</div>\n              <div className={styles.threatInfo}>\n                <span className={styles.threatIP}>{ip}</span>\n                <span className={styles.threatCount}>{count} attacks</span>\n              </div>\n              <div className={styles.threatSeverity}>\n                {count >= 50 ? '🔴' : count >= 20 ? '🟡' : '🟢'}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Recent Events */}\n      <div className={styles.eventsSection}>\n        <div className={styles.eventsHeader}>\n          <h3>Recent Security Events</h3>\n          <div className={styles.eventsControls}>\n            {realTimeEvents.length > 0 && (\n              <span className={styles.newEventsCounter}>\n                {realTimeEvents.length} new events\n              </span>\n            )}\n            <Link to=\"/honeypots/management\" className={styles.manageBtn}>\n              Manage Honeypots →\n            </Link>\n          </div>\n        </div>\n        \n        <div className={styles.eventsList}>\n          {allEvents.slice(0, 15).map(event => {\n            const isNewEvent = realTimeEvents.some(e => e._id === event._id);\n            \n            return (\n              <Link \n                to={`/sessions/${event._id}`} \n                key={event._id} \n                className={`${styles.eventItem} ${isNewEvent ? styles.newEvent : ''}`}\n              >\n                <div className={styles.eventHeader}>\n                  <span className={styles.eventIP}>\n                    {event.source_ip}\n                    {isNewEvent && <span className={styles.newBadge}>NEW</span>}\n                  </span>\n                  <span className={styles.eventTime}>\n                    {new Date(event.timestamp).toLocaleString()}\n                  </span>\n                  <span className={`${styles.eventBadge} ${styles[event.severity] || ''}`}>\n                    {(event.event_type || event.data_type || 'unknown').replace('_', ' ').toUpperCase()}\n                  </span>\n                </div>\n                <div className={styles.eventDetails}>\n                  {(event.event_type || event.data_type) === 'session' ? (\n                    <>\n                      <span>SSH Session • {event.commands?.length || 0} commands</span>\n                      <span>Duration: {Math.round(event.duration || 0)}s</span>\n                    </>\n                  ) : (\n                    <>\n                      <span>Severity: {event.severity}</span>\n                      {event.data?.username && <span>User: {event.data.username}</span>}\n                      {event.data?.filename && <span>File: {event.data.filename}</span>}\n                      {event.data?.path && <span>Path: {event.data.path}</span>}\n                    </>\n                  )}\n                </div>\n              </Link>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}