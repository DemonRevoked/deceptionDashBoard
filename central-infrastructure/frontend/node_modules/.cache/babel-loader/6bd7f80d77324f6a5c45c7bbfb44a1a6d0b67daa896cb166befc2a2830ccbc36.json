{"ast":null,"code":"var _jsxFileName = \"/home/demon/distributed-architecture/central-infrastructure/frontend/src/features/Honeypot/HoneypotPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { fetchHoneypots, fetchEvents, startHoneypot, stopHoneypot } from '../../api';\nimport useRealTimeEvents from '../../hooks/useRealTimeEvents';\nimport useWebSocket from '../../hooks/useWebSocket';\nimport toast from 'react-hot-toast';\nimport styles from './HoneypotPage.module.css';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, LineElement, PointElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport { Pie, Bar, Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, LineElement, PointElement, Title, Tooltip, Legend, ArcElement);\nexport default function HoneypotPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [honeypot, setHoneypot] = useState(null);\n  const [historicalEvents, setHistoricalEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [controlling, setControlling] = useState(false);\n\n  // Real-time events for this specific honeypot\n  const {\n    events: realTimeEvents,\n    honeypotStatuses,\n    securityAlerts,\n    isConnected\n  } = useRealTimeEvents({\n    honeypotId: id,\n    maxEvents: 200,\n    enableNotifications: true,\n    enableSecurityAlerts: true\n  });\n\n  // WebSocket connection for real-time updates\n  const {\n    socket\n  } = useWebSocket();\n\n  // Combine historical and real-time events\n  const allEvents = useMemo(() => {\n    const eventMap = new Map();\n\n    // Add historical events\n    historicalEvents.forEach(event => {\n      eventMap.set(event._id, event);\n    });\n\n    // Add real-time events (will override historical if same ID)\n    realTimeEvents.forEach(event => {\n      eventMap.set(event._id, event);\n    });\n    return Array.from(eventMap.values()).sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n  }, [historicalEvents, realTimeEvents]);\n\n  // Update honeypot status with real-time data\n  const updatedHoneypot = useMemo(() => {\n    if (!honeypot) return null;\n    const statusUpdate = honeypotStatuses[honeypot._id];\n    if (statusUpdate) {\n      return {\n        ...honeypot,\n        status: statusUpdate.status,\n        updated_at: statusUpdate.updated_at\n      };\n    }\n    return honeypot;\n  }, [honeypot, honeypotStatuses]);\n\n  // Calculate analytics\n  const analytics = useMemo(() => {\n    const last24Hours = allEvents.filter(ev => new Date(ev.timestamp) > new Date(Date.now() - 24 * 60 * 60 * 1000)).length;\n    const last7Days = allEvents.filter(ev => new Date(ev.timestamp) > new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)).length;\n\n    // Attack patterns by hour\n    const hourlyActivity = Array.from({\n      length: 24\n    }, (_, i) => {\n      const hour = i;\n      const count = allEvents.filter(ev => {\n        const evHour = new Date(ev.timestamp).getHours();\n        return evHour === hour;\n      }).length;\n      return {\n        hour,\n        count\n      };\n    });\n\n    // Top attacking IPs\n    const ipCount = {};\n    allEvents.forEach(ev => {\n      ipCount[ev.source_ip] = (ipCount[ev.source_ip] || 0) + 1;\n    });\n    const topIPs = Object.entries(ipCount).sort(([, a], [, b]) => b - a).slice(0, 10);\n\n    // Event types distribution\n    const eventTypes = {};\n    allEvents.forEach(ev => {\n      eventTypes[ev.event_type] = (eventTypes[ev.event_type] || 0) + 1;\n    });\n\n    // Severity distribution\n    const severityCount = {\n      low: allEvents.filter(ev => ev.severity === 'low').length,\n      medium: allEvents.filter(ev => ev.severity === 'medium').length,\n      high: allEvents.filter(ev => ev.severity === 'high').length,\n      critical: allEvents.filter(ev => ev.severity === 'critical').length\n    };\n\n    // Geographic distribution - based on IP ranges\n    const countries = {};\n    allEvents.forEach(ev => {\n      let country = 'Unknown';\n\n      // Basic IP range detection (no mock data)\n      if (ev.source_ip.startsWith('192.168') || ev.source_ip.startsWith('10.') || ev.source_ip.startsWith('172.')) {\n        country = 'Local Network';\n      } else if (ev.source_ip.startsWith('127.')) {\n        country = 'Localhost';\n      } else {\n        // For external IPs, we would need a geolocation service\n        // For now, mark as external\n        country = 'External';\n      }\n      countries[country] = (countries[country] || 0) + 1;\n    });\n    return {\n      last24Hours,\n      last7Days,\n      hourlyActivity,\n      topIPs,\n      eventTypes,\n      severityCount,\n      countries\n    };\n  }, [allEvents]);\n\n  // Load initial data\n  useEffect(() => {\n    async function loadData() {\n      try {\n        // Removed console.log to reduce spam\n        const hps = await fetchHoneypots();\n        const hp = hps.find(h => h._id === id);\n        if (!hp) {\n          setError('Honeypot not found');\n          return;\n        }\n        setHoneypot(hp);\n\n        // Load historical events for this honeypot\n        const evs = await fetchEvents({\n          honeypot_id: id,\n          limit: 500\n        });\n        setHistoricalEvents(evs);\n\n        // Join honeypot-specific room for real-time updates\n        if (socket) {\n          socket.emit('join-honeypot', id);\n        }\n      } catch (e) {\n        console.error('Error loading data:', e);\n        setError(e.message || 'Failed to load honeypot data');\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (id) loadData();\n\n    // Cleanup function\n    return () => {\n      if (socket) {\n        socket.emit('leave-honeypot', id);\n      }\n    };\n  }, [id, socket]);\n\n  // Control functions\n  const startHoneypotAction = async () => {\n    setControlling(true);\n    try {\n      await startHoneypot(id);\n      toast.success('Honeypot started successfully');\n\n      // Update local state optimistically\n      setHoneypot(prev => ({\n        ...prev,\n        status: 'starting'\n      }));\n    } catch (error) {\n      toast.error('Failed to start honeypot: ' + error.message);\n    } finally {\n      setControlling(false);\n    }\n  };\n  const stopHoneypotAction = async () => {\n    setControlling(true);\n    try {\n      await stopHoneypot(id);\n      toast.success('Honeypot stopped successfully');\n\n      // Update local state optimistically\n      setHoneypot(prev => ({\n        ...prev,\n        status: 'stopping'\n      }));\n    } catch (error) {\n      toast.error('Failed to stop honeypot: ' + error.message);\n    } finally {\n      setControlling(false);\n    }\n  };\n  const restartHoneypot = async () => {\n    setControlling(true);\n    try {\n      await stopHoneypotAction();\n      setTimeout(() => startHoneypotAction(), 2000);\n      toast.success('Honeypot restart initiated');\n    } catch (error) {\n      toast.error('Failed to restart honeypot: ' + error.message);\n    } finally {\n      setControlling(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.loading,\n    children: \"Loading honeypot control center...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.error,\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 21\n  }, this);\n  if (!updatedHoneypot) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.error,\n    children: \"Honeypot not found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 32\n  }, this);\n\n  // Chart configurations\n  const hourlyChartData = {\n    labels: analytics.hourlyActivity.map(h => `${h.hour}:00`),\n    datasets: [{\n      label: 'Attacks per Hour',\n      data: analytics.hourlyActivity.map(h => h.count),\n      borderColor: '#06b6d4',\n      backgroundColor: 'rgba(6, 182, 212, 0.1)',\n      tension: 0.4,\n      fill: true\n    }]\n  };\n  const eventTypeChartData = {\n    labels: Object.keys(analytics.eventTypes).map(type => type.replace('_', ' ').toUpperCase()),\n    datasets: [{\n      data: Object.values(analytics.eventTypes),\n      backgroundColor: ['#06b6d4', '#10b981', '#f59e0b', '#ef4444', '#8b5cf6', '#ec4899', '#84cc16', '#f97316'],\n      borderColor: '#1e293b',\n      borderWidth: 2\n    }]\n  };\n  const severityChartData = {\n    labels: ['Low', 'Medium', 'High', 'Critical'],\n    datasets: [{\n      data: [analytics.severityCount.low, analytics.severityCount.medium, analytics.severityCount.high, analytics.severityCount.critical],\n      backgroundColor: ['#22c55e', '#f59e0b', '#f97316', '#ef4444'],\n      borderColor: '#1e293b',\n      borderWidth: 2\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          color: '#cbd5e1',\n          font: {\n            size: 12\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.headerLeft,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: styles.backButton,\n          children: \"\\u2190 Back to Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.honeypotTitle,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: updatedHoneypot.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.protocol,\n            children: updatedHoneypot.protocol.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.headerRight,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.connectionStatus,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `${styles.statusDot} ${isConnected ? styles.connected : styles.disconnected}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: isConnected ? 'Real-time Connected' : 'Disconnected'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.statusBadge} ${styles[updatedHoneypot.status]}`,\n          children: updatedHoneypot.status.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.controlPanel,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.controlButtons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startHoneypotAction,\n          disabled: controlling || updatedHoneypot.status === 'running',\n          className: `${styles.controlBtn} ${styles.startBtn}`,\n          children: controlling ? 'Starting...' : 'Start'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopHoneypotAction,\n          disabled: controlling || updatedHoneypot.status === 'stopped',\n          className: `${styles.controlBtn} ${styles.stopBtn}`,\n          children: controlling ? 'Stopping...' : 'Stop'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: restartHoneypot,\n          disabled: controlling,\n          className: `${styles.controlBtn} ${styles.restartBtn}`,\n          children: controlling ? 'Restarting...' : 'Restart'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.quickStats,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statItem,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.statLabel,\n            children: \"Port\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.statValue,\n            children: updatedHoneypot.port\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statItem,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.statLabel,\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.statValue,\n            children: updatedHoneypot.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statItem,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.statLabel,\n            children: \"Total Events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.statValue,\n            children: allEvents.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statItem,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.statLabel,\n            children: \"24h Activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.statValue,\n            children: analytics.last24Hours\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), securityAlerts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.alertsSection,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDEA8 Active Security Alerts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.alertsList,\n        children: securityAlerts.slice(0, 3).map((alert, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.alertItem,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.alertType,\n            children: alert.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.alertMessage,\n            children: alert.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.alertTime,\n            children: new Date(alert.timestamp).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tabs,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tab} ${activeTab === 'overview' ? styles.active : ''}`,\n        onClick: () => setActiveTab('overview'),\n        children: \"Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tab} ${activeTab === 'events' ? styles.active : ''}`,\n        onClick: () => setActiveTab('events'),\n        children: [\"Events (\", allEvents.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tab} ${activeTab === 'analytics' ? styles.active : ''}`,\n        onClick: () => setActiveTab('analytics'),\n        children: \"Analytics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tab} ${activeTab === 'threats' ? styles.active : ''}`,\n        onClick: () => setActiveTab('threats'),\n        children: \"Threat Intelligence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tabContent,\n      children: [activeTab === 'overview' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.overviewContent,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.overviewGrid,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.overviewCard,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Recent Activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.activityFeed,\n              children: allEvents.slice(0, 5).map(event => {\n                var _event$commands;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.activityItem,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.activityIcon,\n                    children: event.event_type === 'session' ? '🔐' : '⚠️'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.activityContent,\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: styles.activityHeader,\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: styles.activityIP,\n                        children: event.source_ip\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 444,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: styles.activityTime,\n                        children: new Date(event.timestamp).toLocaleString()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 445,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 443,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: styles.activityDetails,\n                      children: [event.event_type.replace('_', ' ').toUpperCase(), event.event_type === 'session' && ` - ${((_event$commands = event.commands) === null || _event$commands === void 0 ? void 0 : _event$commands.length) || 0} commands`]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 449,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 23\n                  }, this)]\n                }, event._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.overviewCard,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"System Health\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.healthMetrics,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.healthItem,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.healthLabel,\n                  children: \"Uptime\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.healthValue,\n                  children: updatedHoneypot.status === 'running' ? '🟢 Active' : '🔴 Stopped'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.healthItem,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.healthLabel,\n                  children: \"Last Event\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.healthValue,\n                  children: allEvents.length > 0 ? new Date(allEvents[0].timestamp).toLocaleString() : 'No events yet'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.healthItem,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.healthLabel,\n                  children: \"Threat Level\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.healthValue,\n                  children: analytics.last24Hours > 50 ? '🔴 High' : analytics.last24Hours > 20 ? '🟡 Medium' : analytics.last24Hours > 0 ? '🟢 Low' : '⚪ Quiet'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this), activeTab === 'events' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.eventsContent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.eventsHeader,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Security Events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 15\n          }, this), realTimeEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.liveIndicator,\n            children: [\"\\uD83D\\uDD34 \", realTimeEvents.length, \" Live Events\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.eventsList,\n          children: allEvents.slice(0, 20).map(event => {\n            var _event$commands2, _event$data, _event$data2;\n            return /*#__PURE__*/_jsxDEV(Link, {\n              to: `/sessions/${event._id}`,\n              className: styles.eventItem,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.eventHeader,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.eventIP,\n                  children: event.source_ip\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.eventTime,\n                  children: new Date(event.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `${styles.eventBadge} ${styles[event.severity]}`,\n                  children: event.event_type.replace('_', ' ').toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.eventDetails,\n                children: event.event_type === 'session' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Commands: \", ((_event$commands2 = event.commands) === null || _event$commands2 === void 0 ? void 0 : _event$commands2.length) || 0]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Duration: \", Math.round(event.duration || 0), \"s\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Severity: \", event.severity]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 525,\n                    columnNumber: 23\n                  }, this), ((_event$data = event.data) === null || _event$data === void 0 ? void 0 : _event$data.username) && /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"User: \", event.data.username]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 526,\n                    columnNumber: 48\n                  }, this), ((_event$data2 = event.data) === null || _event$data2 === void 0 ? void 0 : _event$data2.filename) && /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"File: \", event.data.filename]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 527,\n                    columnNumber: 48\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 19\n              }, this)]\n            }, event._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 11\n      }, this), activeTab === 'analytics' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.analyticsContent,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.chartsGrid,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.chartCard,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Attack Patterns (24h)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.chartContainer,\n              children: /*#__PURE__*/_jsxDEV(Line, {\n                data: hourlyChartData,\n                options: chartOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.chartCard,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Event Types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.chartContainer,\n              children: /*#__PURE__*/_jsxDEV(Pie, {\n                data: eventTypeChartData,\n                options: chartOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.chartCard,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Severity Distribution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.chartContainer,\n              children: /*#__PURE__*/_jsxDEV(Pie, {\n                data: severityChartData,\n                options: chartOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 11\n      }, this), activeTab === 'threats' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.threatsContent,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.threatsGrid,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.threatCard,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Top Threat Sources\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.threatList,\n              children: analytics.topIPs.map(([ip, count], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.threatItem,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.threatRank,\n                  children: [\"#\", index + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.threatInfo,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: styles.threatIP,\n                    children: ip\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 574,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: styles.threatCount,\n                    children: [count, \" attacks\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 575,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.threatSeverity,\n                  children: count >= 50 ? '🔴' : count >= 20 ? '🟡' : '🟢'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 23\n                }, this)]\n              }, ip, true, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.threatCard,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Geographic Distribution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.geoList,\n              children: Object.entries(analytics.countries).sort(([, a], [, b]) => b - a).slice(0, 8).map(([country, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.geoItem,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.geoCountry,\n                  children: country\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.geoCount,\n                  children: [count, \" attacks\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 594,\n                  columnNumber: 25\n                }, this)]\n              }, country, true, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 5\n  }, this);\n}\n_s(HoneypotPage, \"2s0zrh8hHMN3ZDkW8BcE/nFIgU0=\", false, function () {\n  return [useParams, useNavigate, useRealTimeEvents, useWebSocket];\n});\n_c = HoneypotPage;\nvar _c;\n$RefreshReg$(_c, \"HoneypotPage\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","useParams","Link","useNavigate","fetchHoneypots","fetchEvents","startHoneypot","stopHoneypot","useRealTimeEvents","useWebSocket","toast","styles","Chart","ChartJS","CategoryScale","LinearScale","BarElement","LineElement","PointElement","Title","Tooltip","Legend","ArcElement","Pie","Bar","Line","jsxDEV","_jsxDEV","Fragment","_Fragment","register","HoneypotPage","_s","id","navigate","honeypot","setHoneypot","historicalEvents","setHistoricalEvents","loading","setLoading","error","setError","activeTab","setActiveTab","controlling","setControlling","events","realTimeEvents","honeypotStatuses","securityAlerts","isConnected","honeypotId","maxEvents","enableNotifications","enableSecurityAlerts","socket","allEvents","eventMap","Map","forEach","event","set","_id","Array","from","values","sort","a","b","Date","timestamp","updatedHoneypot","statusUpdate","status","updated_at","analytics","last24Hours","filter","ev","now","length","last7Days","hourlyActivity","_","i","hour","count","evHour","getHours","ipCount","source_ip","topIPs","Object","entries","slice","eventTypes","event_type","severityCount","low","severity","medium","high","critical","countries","country","startsWith","loadData","hps","hp","find","h","evs","honeypot_id","limit","emit","e","console","message","startHoneypotAction","success","prev","stopHoneypotAction","restartHoneypot","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","hourlyChartData","labels","map","datasets","label","data","borderColor","backgroundColor","tension","fill","eventTypeChartData","keys","type","replace","toUpperCase","borderWidth","severityChartData","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","color","font","size","container","header","headerLeft","to","backButton","honeypotTitle","name","protocol","headerRight","connectionStatus","statusDot","connected","disconnected","statusBadge","controlPanel","controlButtons","onClick","disabled","controlBtn","startBtn","stopBtn","restartBtn","quickStats","statItem","statLabel","statValue","port","alertsSection","alertsList","alert","index","alertItem","alertType","alertMessage","alertTime","toLocaleString","tabs","tab","active","tabContent","overviewContent","overviewGrid","overviewCard","activityFeed","_event$commands","activityItem","activityIcon","activityContent","activityHeader","activityIP","activityTime","activityDetails","commands","healthMetrics","healthItem","healthLabel","healthValue","eventsContent","eventsHeader","liveIndicator","eventsList","_event$commands2","_event$data","_event$data2","eventItem","eventHeader","eventIP","eventTime","eventBadge","eventDetails","Math","round","duration","username","filename","analyticsContent","chartsGrid","chartCard","chartContainer","options","threatsContent","threatsGrid","threatCard","threatList","ip","threatItem","threatRank","threatInfo","threatIP","threatCount","threatSeverity","geoList","geoItem","geoCountry","geoCount","_c","$RefreshReg$"],"sources":["/home/demon/distributed-architecture/central-infrastructure/frontend/src/features/Honeypot/HoneypotPage.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { fetchHoneypots, fetchEvents, startHoneypot, stopHoneypot } from '../../api';\nimport useRealTimeEvents from '../../hooks/useRealTimeEvents';\nimport useWebSocket from '../../hooks/useWebSocket';\nimport toast from 'react-hot-toast';\nimport styles from './HoneypotPage.module.css';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  LineElement,\n  PointElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n} from 'chart.js';\nimport { Pie, Bar, Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  LineElement,\n  PointElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement\n);\n\nexport default function HoneypotPage() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [honeypot, setHoneypot] = useState(null);\n  const [historicalEvents, setHistoricalEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [controlling, setControlling] = useState(false);\n\n  // Real-time events for this specific honeypot\n  const { \n    events: realTimeEvents, \n    honeypotStatuses, \n    securityAlerts, \n    isConnected \n  } = useRealTimeEvents({\n    honeypotId: id,\n    maxEvents: 200,\n    enableNotifications: true,\n    enableSecurityAlerts: true\n  });\n\n  // WebSocket connection for real-time updates\n  const { socket } = useWebSocket();\n\n  // Combine historical and real-time events\n  const allEvents = useMemo(() => {\n    const eventMap = new Map();\n    \n    // Add historical events\n    historicalEvents.forEach(event => {\n      eventMap.set(event._id, event);\n    });\n    \n    // Add real-time events (will override historical if same ID)\n    realTimeEvents.forEach(event => {\n      eventMap.set(event._id, event);\n    });\n    \n    return Array.from(eventMap.values())\n      .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n  }, [historicalEvents, realTimeEvents]);\n\n  // Update honeypot status with real-time data\n  const updatedHoneypot = useMemo(() => {\n    if (!honeypot) return null;\n    \n    const statusUpdate = honeypotStatuses[honeypot._id];\n    if (statusUpdate) {\n      return {\n        ...honeypot,\n        status: statusUpdate.status,\n        updated_at: statusUpdate.updated_at\n      };\n    }\n    return honeypot;\n  }, [honeypot, honeypotStatuses]);\n\n  // Calculate analytics\n  const analytics = useMemo(() => {\n    const last24Hours = allEvents.filter(ev => \n      new Date(ev.timestamp) > new Date(Date.now() - 24 * 60 * 60 * 1000)\n    ).length;\n    \n    const last7Days = allEvents.filter(ev => \n      new Date(ev.timestamp) > new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)\n    ).length;\n\n    // Attack patterns by hour\n    const hourlyActivity = Array.from({ length: 24 }, (_, i) => {\n      const hour = i;\n      const count = allEvents.filter(ev => {\n        const evHour = new Date(ev.timestamp).getHours();\n        return evHour === hour;\n      }).length;\n      return { hour, count };\n    });\n\n    // Top attacking IPs\n    const ipCount = {};\n    allEvents.forEach(ev => {\n      ipCount[ev.source_ip] = (ipCount[ev.source_ip] || 0) + 1;\n    });\n    const topIPs = Object.entries(ipCount)\n      .sort(([,a], [,b]) => b - a)\n      .slice(0, 10);\n\n    // Event types distribution\n    const eventTypes = {};\n    allEvents.forEach(ev => {\n      eventTypes[ev.event_type] = (eventTypes[ev.event_type] || 0) + 1;\n    });\n\n    // Severity distribution\n    const severityCount = {\n      low: allEvents.filter(ev => ev.severity === 'low').length,\n      medium: allEvents.filter(ev => ev.severity === 'medium').length,\n      high: allEvents.filter(ev => ev.severity === 'high').length,\n      critical: allEvents.filter(ev => ev.severity === 'critical').length,\n    };\n\n    // Geographic distribution - based on IP ranges\n    const countries = {};\n    allEvents.forEach(ev => {\n      let country = 'Unknown';\n      \n      // Basic IP range detection (no mock data)\n      if (ev.source_ip.startsWith('192.168') || ev.source_ip.startsWith('10.') || ev.source_ip.startsWith('172.')) {\n        country = 'Local Network';\n      } else if (ev.source_ip.startsWith('127.')) {\n        country = 'Localhost';\n      } else {\n        // For external IPs, we would need a geolocation service\n        // For now, mark as external\n        country = 'External';\n      }\n      \n      countries[country] = (countries[country] || 0) + 1;\n    });\n\n    return {\n      last24Hours,\n      last7Days,\n      hourlyActivity,\n      topIPs,\n      eventTypes,\n      severityCount,\n      countries\n    };\n  }, [allEvents]);\n\n  // Load initial data\n  useEffect(() => {\n    async function loadData() {\n      try {\n        // Removed console.log to reduce spam\n        const hps = await fetchHoneypots();\n        const hp = hps.find(h => h._id === id);\n        \n        if (!hp) {\n          setError('Honeypot not found');\n          return;\n        }\n        \n        setHoneypot(hp);\n        \n        // Load historical events for this honeypot\n        const evs = await fetchEvents({ honeypot_id: id, limit: 500 });\n        setHistoricalEvents(evs);\n        \n        // Join honeypot-specific room for real-time updates\n        if (socket) {\n          socket.emit('join-honeypot', id);\n        }\n        \n      } catch (e) {\n        console.error('Error loading data:', e);\n        setError(e.message || 'Failed to load honeypot data');\n      } finally {\n        setLoading(false);\n      }\n    }\n    \n    if (id) loadData();\n    \n    // Cleanup function\n    return () => {\n      if (socket) {\n        socket.emit('leave-honeypot', id);\n      }\n    };\n  }, [id, socket]);\n\n  // Control functions\n  const startHoneypotAction = async () => {\n    setControlling(true);\n    try {\n      await startHoneypot(id);\n      toast.success('Honeypot started successfully');\n      \n      // Update local state optimistically\n      setHoneypot(prev => ({ ...prev, status: 'starting' }));\n      \n    } catch (error) {\n      toast.error('Failed to start honeypot: ' + error.message);\n    } finally {\n      setControlling(false);\n    }\n  };\n\n  const stopHoneypotAction = async () => {\n    setControlling(true);\n    try {\n      await stopHoneypot(id);\n      toast.success('Honeypot stopped successfully');\n      \n      // Update local state optimistically\n      setHoneypot(prev => ({ ...prev, status: 'stopping' }));\n      \n    } catch (error) {\n      toast.error('Failed to stop honeypot: ' + error.message);\n    } finally {\n      setControlling(false);\n    }\n  };\n\n  const restartHoneypot = async () => {\n    setControlling(true);\n    try {\n      await stopHoneypotAction();\n      setTimeout(() => startHoneypotAction(), 2000);\n      toast.success('Honeypot restart initiated');\n    } catch (error) {\n      toast.error('Failed to restart honeypot: ' + error.message);\n    } finally {\n      setControlling(false);\n    }\n  };\n\n  if (loading) return <div className={styles.loading}>Loading honeypot control center...</div>;\n  if (error) return <div className={styles.error}>Error: {error}</div>;\n  if (!updatedHoneypot) return <div className={styles.error}>Honeypot not found.</div>;\n\n  // Chart configurations\n  const hourlyChartData = {\n    labels: analytics.hourlyActivity.map(h => `${h.hour}:00`),\n    datasets: [{\n      label: 'Attacks per Hour',\n      data: analytics.hourlyActivity.map(h => h.count),\n      borderColor: '#06b6d4',\n      backgroundColor: 'rgba(6, 182, 212, 0.1)',\n      tension: 0.4,\n      fill: true\n    }]\n  };\n\n  const eventTypeChartData = {\n    labels: Object.keys(analytics.eventTypes).map(type => \n      type.replace('_', ' ').toUpperCase()\n    ),\n    datasets: [{\n      data: Object.values(analytics.eventTypes),\n      backgroundColor: [\n        '#06b6d4', '#10b981', '#f59e0b', '#ef4444', \n        '#8b5cf6', '#ec4899', '#84cc16', '#f97316'\n      ],\n      borderColor: '#1e293b',\n      borderWidth: 2,\n    }]\n  };\n\n  const severityChartData = {\n    labels: ['Low', 'Medium', 'High', 'Critical'],\n    datasets: [{\n      data: [\n        analytics.severityCount.low,\n        analytics.severityCount.medium,\n        analytics.severityCount.high,\n        analytics.severityCount.critical\n      ],\n      backgroundColor: ['#22c55e', '#f59e0b', '#f97316', '#ef4444'],\n      borderColor: '#1e293b',\n      borderWidth: 2,\n    }]\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          color: '#cbd5e1',\n          font: { size: 12 }\n        }\n      }\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      {/* Header */}\n      <div className={styles.header}>\n        <div className={styles.headerLeft}>\n          <Link to=\"/\" className={styles.backButton}>← Back to Dashboard</Link>\n          <div className={styles.honeypotTitle}>\n            <h1>{updatedHoneypot.name}</h1>\n            <span className={styles.protocol}>{updatedHoneypot.protocol.toUpperCase()}</span>\n          </div>\n        </div>\n        <div className={styles.headerRight}>\n          <div className={styles.connectionStatus}>\n            <span className={`${styles.statusDot} ${isConnected ? styles.connected : styles.disconnected}`}></span>\n            <span>{isConnected ? 'Real-time Connected' : 'Disconnected'}</span>\n          </div>\n          <div className={`${styles.statusBadge} ${styles[updatedHoneypot.status]}`}>\n            {updatedHoneypot.status.toUpperCase()}\n          </div>\n        </div>\n      </div>\n\n      {/* Control Panel */}\n      <div className={styles.controlPanel}>\n        <div className={styles.controlButtons}>\n          <button \n            onClick={startHoneypotAction}\n            disabled={controlling || updatedHoneypot.status === 'running'}\n            className={`${styles.controlBtn} ${styles.startBtn}`}\n          >\n            {controlling ? 'Starting...' : 'Start'}\n          </button>\n          <button \n            onClick={stopHoneypotAction}\n            disabled={controlling || updatedHoneypot.status === 'stopped'}\n            className={`${styles.controlBtn} ${styles.stopBtn}`}\n          >\n            {controlling ? 'Stopping...' : 'Stop'}\n          </button>\n          <button \n            onClick={restartHoneypot}\n            disabled={controlling}\n            className={`${styles.controlBtn} ${styles.restartBtn}`}\n          >\n            {controlling ? 'Restarting...' : 'Restart'}\n          </button>\n        </div>\n        \n        <div className={styles.quickStats}>\n          <div className={styles.statItem}>\n            <span className={styles.statLabel}>Port</span>\n            <span className={styles.statValue}>{updatedHoneypot.port}</span>\n          </div>\n          <div className={styles.statItem}>\n            <span className={styles.statLabel}>Type</span>\n            <span className={styles.statValue}>{updatedHoneypot.type}</span>\n          </div>\n          <div className={styles.statItem}>\n            <span className={styles.statLabel}>Total Events</span>\n            <span className={styles.statValue}>{allEvents.length}</span>\n          </div>\n          <div className={styles.statItem}>\n            <span className={styles.statLabel}>24h Activity</span>\n            <span className={styles.statValue}>{analytics.last24Hours}</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Security Alerts */}\n      {securityAlerts.length > 0 && (\n        <div className={styles.alertsSection}>\n          <h3>🚨 Active Security Alerts</h3>\n          <div className={styles.alertsList}>\n            {securityAlerts.slice(0, 3).map((alert, index) => (\n              <div key={index} className={styles.alertItem}>\n                <span className={styles.alertType}>{alert.type}</span>\n                <span className={styles.alertMessage}>{alert.message}</span>\n                <span className={styles.alertTime}>\n                  {new Date(alert.timestamp).toLocaleString()}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Tabs */}\n      <div className={styles.tabs}>\n        <button \n          className={`${styles.tab} ${activeTab === 'overview' ? styles.active : ''}`}\n          onClick={() => setActiveTab('overview')}\n        >\n          Overview\n        </button>\n        <button \n          className={`${styles.tab} ${activeTab === 'events' ? styles.active : ''}`}\n          onClick={() => setActiveTab('events')}\n        >\n          Events ({allEvents.length})\n        </button>\n        <button \n          className={`${styles.tab} ${activeTab === 'analytics' ? styles.active : ''}`}\n          onClick={() => setActiveTab('analytics')}\n        >\n          Analytics\n        </button>\n        <button \n          className={`${styles.tab} ${activeTab === 'threats' ? styles.active : ''}`}\n          onClick={() => setActiveTab('threats')}\n        >\n          Threat Intelligence\n        </button>\n      </div>\n\n      {/* Tab Content */}\n      <div className={styles.tabContent}>\n        {activeTab === 'overview' && (\n          <div className={styles.overviewContent}>\n            <div className={styles.overviewGrid}>\n              <div className={styles.overviewCard}>\n                <h3>Recent Activity</h3>\n                <div className={styles.activityFeed}>\n                  {allEvents.slice(0, 5).map(event => (\n                    <div key={event._id} className={styles.activityItem}>\n                      <div className={styles.activityIcon}>\n                        {event.event_type === 'session' ? '🔐' : '⚠️'}\n                      </div>\n                      <div className={styles.activityContent}>\n                        <div className={styles.activityHeader}>\n                          <span className={styles.activityIP}>{event.source_ip}</span>\n                          <span className={styles.activityTime}>\n                            {new Date(event.timestamp).toLocaleString()}\n                          </span>\n                        </div>\n                        <div className={styles.activityDetails}>\n                          {event.event_type.replace('_', ' ').toUpperCase()}\n                          {event.event_type === 'session' && ` - ${event.commands?.length || 0} commands`}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              \n              <div className={styles.overviewCard}>\n                <h3>System Health</h3>\n                <div className={styles.healthMetrics}>\n                  <div className={styles.healthItem}>\n                    <span className={styles.healthLabel}>Uptime</span>\n                    <span className={styles.healthValue}>\n                      {updatedHoneypot.status === 'running' ? '🟢 Active' : '🔴 Stopped'}\n                    </span>\n                  </div>\n                  <div className={styles.healthItem}>\n                    <span className={styles.healthLabel}>Last Event</span>\n                    <span className={styles.healthValue}>\n                      {allEvents.length > 0 \n                        ? new Date(allEvents[0].timestamp).toLocaleString()\n                        : 'No events yet'\n                      }\n                    </span>\n                  </div>\n                  <div className={styles.healthItem}>\n                    <span className={styles.healthLabel}>Threat Level</span>\n                    <span className={styles.healthValue}>\n                      {analytics.last24Hours > 50 ? '🔴 High' : \n                       analytics.last24Hours > 20 ? '🟡 Medium' : \n                       analytics.last24Hours > 0 ? '🟢 Low' : '⚪ Quiet'}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'events' && (\n          <div className={styles.eventsContent}>\n            <div className={styles.eventsHeader}>\n              <h3>Security Events</h3>\n              {realTimeEvents.length > 0 && (\n                <span className={styles.liveIndicator}>\n                  🔴 {realTimeEvents.length} Live Events\n                </span>\n              )}\n            </div>\n            <div className={styles.eventsList}>\n              {allEvents.slice(0, 20).map(event => (\n              <Link\n                  key={event._id} \n                to={`/sessions/${event._id}`}\n                  className={styles.eventItem}\n              >\n                  <div className={styles.eventHeader}>\n                    <span className={styles.eventIP}>{event.source_ip}</span>\n                    <span className={styles.eventTime}>\n                    {new Date(event.timestamp).toLocaleString()}\n                  </span>\n                    <span className={`${styles.eventBadge} ${styles[event.severity]}`}>\n                    {event.event_type.replace('_', ' ').toUpperCase()}\n                  </span>\n                </div>\n                  <div className={styles.eventDetails}>\n                  {event.event_type === 'session' ? (\n                    <>\n                      <span>Commands: {event.commands?.length || 0}</span>\n                        <span>Duration: {Math.round(event.duration || 0)}s</span>\n                    </>\n                  ) : (\n                    <>\n                      <span>Severity: {event.severity}</span>\n                      {event.data?.username && <span>User: {event.data.username}</span>}\n                      {event.data?.filename && <span>File: {event.data.filename}</span>}\n                    </>\n                  )}\n                  </div>\n                </Link>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'analytics' && (\n          <div className={styles.analyticsContent}>\n            <div className={styles.chartsGrid}>\n              <div className={styles.chartCard}>\n                <h3>Attack Patterns (24h)</h3>\n                <div className={styles.chartContainer}>\n                  <Line data={hourlyChartData} options={chartOptions} />\n                </div>\n              </div>\n              \n              <div className={styles.chartCard}>\n                <h3>Event Types</h3>\n                <div className={styles.chartContainer}>\n                  <Pie data={eventTypeChartData} options={chartOptions} />\n                </div>\n              </div>\n              \n              <div className={styles.chartCard}>\n                <h3>Severity Distribution</h3>\n                <div className={styles.chartContainer}>\n                  <Pie data={severityChartData} options={chartOptions} />\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'threats' && (\n          <div className={styles.threatsContent}>\n            <div className={styles.threatsGrid}>\n              <div className={styles.threatCard}>\n                <h3>Top Threat Sources</h3>\n                <div className={styles.threatList}>\n                  {analytics.topIPs.map(([ip, count], index) => (\n                    <div key={ip} className={styles.threatItem}>\n                      <div className={styles.threatRank}>#{index + 1}</div>\n                      <div className={styles.threatInfo}>\n                        <span className={styles.threatIP}>{ip}</span>\n                        <span className={styles.threatCount}>{count} attacks</span>\n                      </div>\n                      <div className={styles.threatSeverity}>\n                        {count >= 50 ? '🔴' : count >= 20 ? '🟡' : '🟢'}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              \n              <div className={styles.threatCard}>\n                <h3>Geographic Distribution</h3>\n                <div className={styles.geoList}>\n                  {Object.entries(analytics.countries)\n                    .sort(([,a], [,b]) => b - a)\n                    .slice(0, 8)\n                    .map(([country, count]) => (\n                      <div key={country} className={styles.geoItem}>\n                        <span className={styles.geoCountry}>{country}</span>\n                        <span className={styles.geoCount}>{count} attacks</span>\n                      </div>\n            ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}