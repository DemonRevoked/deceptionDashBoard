{"ast":null,"code":"import{useEffect,useState,useCallback,useRef}from'react';import useWebSocket from'./useWebSocket';import toast from'react-hot-toast';const useRealTimeEvents=function(){let options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const{maxEvents=100,enableNotifications=true,honeypotId=null,enableSecurityAlerts=true,category=null}=options;const{socket,isConnected,subscribe,unsubscribe,joinHoneypotRoom,leaveHoneypotRoom}=useWebSocket();const[events,setEvents]=useState([]);const[honeypotStatuses,setHoneypotStatuses]=useState({});const[securityAlerts,setSecurityAlerts]=useState([]);// Use refs to store cleanup functions\nconst unsubscribeFunctionsRef=useRef([]);const previousHoneypotIdRef=useRef(null);// Handle new events with error boundary\nconst handleNewEvent=useCallback(event=>{try{if(!event||typeof event!=='object'){console.warn('Invalid event received:',event);return;}setEvents(prevEvents=>{const newEvents=[event,...prevEvents];return newEvents.slice(0,maxEvents);});// Show notification for important events\nif(enableNotifications&&event.severity&&['high','critical'].includes(event.severity)){toast.error(`ðŸš¨ ${event.event_type} from ${event.source_ip}`,{duration:5000,position:'top-right',style:{background:'#ef4444',color:'#ffffff'}});}}catch(error){console.error('Error handling new event:',error);}},[maxEvents,enableNotifications]);// Handle honeypot-specific events with validation\nconst handleHoneypotEvent=useCallback(event=>{try{if(!event||typeof event!=='object'){console.warn('Invalid honeypot event received:',event);return;}// Only add to events if it's for the current honeypot or no specific honeypot\nif(!honeypotId||event.honeypot_id===honeypotId){handleNewEvent(event);}}catch(error){console.error('Error handling honeypot event:',error);}},[honeypotId,handleNewEvent]);// Handle security alerts with validation\nconst handleSecurityAlert=useCallback(alert=>{try{if(!alert||typeof alert!=='object'){console.warn('Invalid security alert received:',alert);return;}setSecurityAlerts(prevAlerts=>{const newAlerts=[alert,...prevAlerts];return newAlerts.slice(0,50);// Keep last 50 alerts\n});if(enableSecurityAlerts&&alert.message){toast.error(alert.message,{duration:8000,position:'top-center',style:{background:'#dc2626',color:'#ffffff',fontWeight:'bold'}});}}catch(error){console.error('Error handling security alert:',error);}},[enableSecurityAlerts]);// Handle honeypot status updates with validation\nconst handleHoneypotStatusUpdate=useCallback(statusUpdate=>{try{if(!statusUpdate||typeof statusUpdate!=='object'||!statusUpdate.honeypot_id){console.warn('Invalid honeypot status update:',statusUpdate);return;}setHoneypotStatuses(prevStatuses=>({...prevStatuses,[statusUpdate.honeypot_id]:statusUpdate}));// Show notification for status changes\nif(enableNotifications&&statusUpdate.name&&statusUpdate.status){const statusEmoji=statusUpdate.status==='running'?'ðŸŸ¢':'ðŸ”´';toast.success(`${statusEmoji} ${statusUpdate.name} is now ${statusUpdate.status}`,{duration:3000,position:'bottom-right'});}}catch(error){console.error('Error handling honeypot status update:',error);}},[enableNotifications]);// Cleanup function\nconst cleanup=useCallback(()=>{// Clean up all subscriptions\nunsubscribeFunctionsRef.current.forEach(unsubscribeFn=>{try{if(typeof unsubscribeFn==='function'){unsubscribeFn();}}catch(error){console.error('Error during cleanup:',error);}});unsubscribeFunctionsRef.current=[];// Leave previous honeypot room if needed\nif(previousHoneypotIdRef.current){try{leaveHoneypotRoom(previousHoneypotIdRef.current);}catch(error){console.error('Error leaving honeypot room:',error);}previousHoneypotIdRef.current=null;}},[leaveHoneypotRoom]);// Subscribe to WebSocket events\nuseEffect(()=>{if(socket&&isConnected){// Clean up previous subscriptions\ncleanup();// Subscribe to events with error handling\ntry{const unsubscribeFunctions=[subscribe('new-event',handleNewEvent),subscribe('honeypot-event',handleHoneypotEvent),subscribe('security-alert',handleSecurityAlert),subscribe('honeypot-status-update',handleHoneypotStatusUpdate)].filter(fn=>typeof fn==='function');unsubscribeFunctionsRef.current=unsubscribeFunctions;// Join honeypot room if specified\nif(honeypotId&&honeypotId!==previousHoneypotIdRef.current){// Leave previous room if different\nif(previousHoneypotIdRef.current){leaveHoneypotRoom(previousHoneypotIdRef.current);}joinHoneypotRoom(honeypotId);previousHoneypotIdRef.current=honeypotId;}}catch(error){console.error('Error setting up WebSocket subscriptions:',error);}}// Cleanup on dependency change or unmount\nreturn cleanup;},[socket,isConnected,honeypotId// Removed all callback dependencies that were causing infinite loops\n]);// Clear events\nconst clearEvents=useCallback(()=>{setEvents([]);toast.success('Events cleared',{duration:2000,position:'bottom-center'});},[]);// Clear security alerts\nconst clearSecurityAlerts=useCallback(()=>{setSecurityAlerts([]);toast.success('Security alerts cleared',{duration:2000,position:'bottom-center'});},[]);// Get events by severity\nconst getEventsBySeverity=useCallback(severity=>{return events.filter(event=>event&&event.severity===severity);},[events]);// Get events by honeypot\nconst getEventsByHoneypot=useCallback(honeypotId=>{return events.filter(event=>event&&event.honeypot_id===honeypotId);},[events]);// Get events by category (if specified)\nconst getEventsByCategory=useCallback(cat=>{return events.filter(event=>event&&event.category===cat);},[events]);// Filter events by category if specified\nconst filteredEvents=category?getEventsByCategory(category):events;return{events:filteredEvents,honeypotStatuses,securityAlerts,isConnected,clearEvents,clearSecurityAlerts,getEventsBySeverity,getEventsByHoneypot,getEventsByCategory};};export default useRealTimeEvents;","map":{"version":3,"names":["useEffect","useState","useCallback","useRef","useWebSocket","toast","useRealTimeEvents","options","arguments","length","undefined","maxEvents","enableNotifications","honeypotId","enableSecurityAlerts","category","socket","isConnected","subscribe","unsubscribe","joinHoneypotRoom","leaveHoneypotRoom","events","setEvents","honeypotStatuses","setHoneypotStatuses","securityAlerts","setSecurityAlerts","unsubscribeFunctionsRef","previousHoneypotIdRef","handleNewEvent","event","console","warn","prevEvents","newEvents","slice","severity","includes","error","event_type","source_ip","duration","position","style","background","color","handleHoneypotEvent","honeypot_id","handleSecurityAlert","alert","prevAlerts","newAlerts","message","fontWeight","handleHoneypotStatusUpdate","statusUpdate","prevStatuses","name","status","statusEmoji","success","cleanup","current","forEach","unsubscribeFn","unsubscribeFunctions","filter","fn","clearEvents","clearSecurityAlerts","getEventsBySeverity","getEventsByHoneypot","getEventsByCategory","cat","filteredEvents"],"sources":["/home/demon/distributed-architecture/central-infrastructure/frontend/src/hooks/useRealTimeEvents.js"],"sourcesContent":["import { useEffect, useState, useCallback, useRef } from 'react';\nimport useWebSocket from './useWebSocket';\nimport toast from 'react-hot-toast';\n\nconst useRealTimeEvents = (options = {}) => {\n  const { \n    maxEvents = 100, \n    enableNotifications = true, \n    honeypotId = null,\n    enableSecurityAlerts = true,\n    category = null\n  } = options;\n\n  const { socket, isConnected, subscribe, unsubscribe, joinHoneypotRoom, leaveHoneypotRoom } = useWebSocket();\n  const [events, setEvents] = useState([]);\n  const [honeypotStatuses, setHoneypotStatuses] = useState({});\n  const [securityAlerts, setSecurityAlerts] = useState([]);\n  \n  // Use refs to store cleanup functions\n  const unsubscribeFunctionsRef = useRef([]);\n  const previousHoneypotIdRef = useRef(null);\n\n  // Handle new events with error boundary\n  const handleNewEvent = useCallback((event) => {\n    try {\n      if (!event || typeof event !== 'object') {\n        console.warn('Invalid event received:', event);\n        return;\n      }\n      \n      setEvents(prevEvents => {\n        const newEvents = [event, ...prevEvents];\n        return newEvents.slice(0, maxEvents);\n      });\n\n      // Show notification for important events\n      if (enableNotifications && event.severity && ['high', 'critical'].includes(event.severity)) {\n        toast.error(`ðŸš¨ ${event.event_type} from ${event.source_ip}`, {\n          duration: 5000,\n          position: 'top-right',\n          style: {\n            background: '#ef4444',\n            color: '#ffffff',\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Error handling new event:', error);\n    }\n  }, [maxEvents, enableNotifications]);\n\n  // Handle honeypot-specific events with validation\n  const handleHoneypotEvent = useCallback((event) => {\n    try {\n      if (!event || typeof event !== 'object') {\n        console.warn('Invalid honeypot event received:', event);\n        return;\n      }\n      \n      // Only add to events if it's for the current honeypot or no specific honeypot\n      if (!honeypotId || event.honeypot_id === honeypotId) {\n        handleNewEvent(event);\n      }\n    } catch (error) {\n      console.error('Error handling honeypot event:', error);\n    }\n  }, [honeypotId, handleNewEvent]);\n\n  // Handle security alerts with validation\n  const handleSecurityAlert = useCallback((alert) => {\n    try {\n      if (!alert || typeof alert !== 'object') {\n        console.warn('Invalid security alert received:', alert);\n        return;\n      }\n      \n      setSecurityAlerts(prevAlerts => {\n        const newAlerts = [alert, ...prevAlerts];\n        return newAlerts.slice(0, 50); // Keep last 50 alerts\n      });\n\n      if (enableSecurityAlerts && alert.message) {\n        toast.error(alert.message, {\n          duration: 8000,\n          position: 'top-center',\n          style: {\n            background: '#dc2626',\n            color: '#ffffff',\n            fontWeight: 'bold'\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Error handling security alert:', error);\n    }\n  }, [enableSecurityAlerts]);\n\n  // Handle honeypot status updates with validation\n  const handleHoneypotStatusUpdate = useCallback((statusUpdate) => {\n    try {\n      if (!statusUpdate || typeof statusUpdate !== 'object' || !statusUpdate.honeypot_id) {\n        console.warn('Invalid honeypot status update:', statusUpdate);\n        return;\n      }\n      \n      setHoneypotStatuses(prevStatuses => ({\n        ...prevStatuses,\n        [statusUpdate.honeypot_id]: statusUpdate\n      }));\n\n      // Show notification for status changes\n      if (enableNotifications && statusUpdate.name && statusUpdate.status) {\n        const statusEmoji = statusUpdate.status === 'running' ? 'ðŸŸ¢' : 'ðŸ”´';\n        toast.success(`${statusEmoji} ${statusUpdate.name} is now ${statusUpdate.status}`, {\n          duration: 3000,\n          position: 'bottom-right'\n        });\n      }\n    } catch (error) {\n      console.error('Error handling honeypot status update:', error);\n    }\n  }, [enableNotifications]);\n\n  // Cleanup function\n  const cleanup = useCallback(() => {\n    // Clean up all subscriptions\n    unsubscribeFunctionsRef.current.forEach(unsubscribeFn => {\n      try {\n        if (typeof unsubscribeFn === 'function') {\n          unsubscribeFn();\n        }\n      } catch (error) {\n        console.error('Error during cleanup:', error);\n      }\n    });\n    unsubscribeFunctionsRef.current = [];\n\n    // Leave previous honeypot room if needed\n    if (previousHoneypotIdRef.current) {\n      try {\n        leaveHoneypotRoom(previousHoneypotIdRef.current);\n      } catch (error) {\n        console.error('Error leaving honeypot room:', error);\n      }\n      previousHoneypotIdRef.current = null;\n    }\n  }, [leaveHoneypotRoom]);\n\n  // Subscribe to WebSocket events\n  useEffect(() => {\n    if (socket && isConnected) {\n      // Clean up previous subscriptions\n      cleanup();\n      \n      // Subscribe to events with error handling\n      try {\n        const unsubscribeFunctions = [\n          subscribe('new-event', handleNewEvent),\n          subscribe('honeypot-event', handleHoneypotEvent), \n          subscribe('security-alert', handleSecurityAlert),\n          subscribe('honeypot-status-update', handleHoneypotStatusUpdate)\n        ].filter(fn => typeof fn === 'function');\n\n        unsubscribeFunctionsRef.current = unsubscribeFunctions;\n\n        // Join honeypot room if specified\n        if (honeypotId && honeypotId !== previousHoneypotIdRef.current) {\n          // Leave previous room if different\n          if (previousHoneypotIdRef.current) {\n            leaveHoneypotRoom(previousHoneypotIdRef.current);\n          }\n          \n          joinHoneypotRoom(honeypotId);\n          previousHoneypotIdRef.current = honeypotId;\n        }\n      } catch (error) {\n        console.error('Error setting up WebSocket subscriptions:', error);\n      }\n    }\n\n    // Cleanup on dependency change or unmount\n    return cleanup;\n  }, [\n    socket, \n    isConnected, \n    honeypotId\n    // Removed all callback dependencies that were causing infinite loops\n  ]);\n\n  // Clear events\n  const clearEvents = useCallback(() => {\n    setEvents([]);\n    toast.success('Events cleared', {\n      duration: 2000,\n      position: 'bottom-center'\n    });\n  }, []);\n\n  // Clear security alerts\n  const clearSecurityAlerts = useCallback(() => {\n    setSecurityAlerts([]);\n    toast.success('Security alerts cleared', {\n      duration: 2000,\n      position: 'bottom-center'\n    });\n  }, []);\n\n  // Get events by severity\n  const getEventsBySeverity = useCallback((severity) => {\n    return events.filter(event => event && event.severity === severity);\n  }, [events]);\n\n  // Get events by honeypot\n  const getEventsByHoneypot = useCallback((honeypotId) => {\n    return events.filter(event => event && event.honeypot_id === honeypotId);\n  }, [events]);\n\n  // Get events by category (if specified)\n  const getEventsByCategory = useCallback((cat) => {\n    return events.filter(event => event && event.category === cat);\n  }, [events]);\n\n  // Filter events by category if specified\n  const filteredEvents = category ? getEventsByCategory(category) : events;\n\n  return {\n    events: filteredEvents,\n    honeypotStatuses,\n    securityAlerts,\n    isConnected,\n    clearEvents,\n    clearSecurityAlerts,\n    getEventsBySeverity,\n    getEventsByHoneypot,\n    getEventsByCategory\n  };\n};\n\nexport default useRealTimeEvents; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}