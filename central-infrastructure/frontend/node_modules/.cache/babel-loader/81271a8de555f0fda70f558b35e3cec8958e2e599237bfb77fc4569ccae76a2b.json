{"ast":null,"code":"import React from'react';import{Doughnut,Bar}from'react-chartjs-2';import'./ProtocolWidget.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProtocolWidget=_ref=>{var _topProtocol$protocol;let{threatStats,loading=false}=_ref;if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"protocol-widget loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"widget-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Protocol Analysis\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"loading-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading protocol data...\"})]})]});}if(!threatStats||!threatStats.byProtocol||Object.keys(threatStats.byProtocol).length===0){return/*#__PURE__*/_jsxs(\"div\",{className:\"protocol-widget empty\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"widget-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Protocol Analysis\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"empty-icon\",children:\"\\uD83D\\uDCCA\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No protocol data available\"})]})]});}const protocols=threatStats.byProtocol;const totalEvents=Object.values(protocols).reduce((sum,count)=>sum+count,0);// Prepare chart data\nconst chartData={labels:Object.keys(protocols),datasets:[{data:Object.values(protocols),backgroundColor:['#dc3545',// Red - HTTPS\n'#ffc107',// Yellow - SSH\n'#28a745',// Green - FTP\n'#17a2b8',// Cyan - Telnet\n'#6f42c1',// Purple - HTTP\n'#fd7e14',// Orange - Other\n'#20c997',// Teal\n'#6610f2'// Indigo\n],borderWidth:2,borderColor:'#fff'}]};const chartOptions={responsive:true,maintainAspectRatio:false,plugins:{legend:{position:'bottom',labels:{color:'#cbd5e1',usePointStyle:true,pointStyle:'circle',padding:15,font:{size:11}}},tooltip:{callbacks:{label:function(context){const percentage=(context.parsed/totalEvents*100).toFixed(1);return`${context.label}: ${context.parsed} (${percentage}%)`;}}}}};// Calculate protocol statistics\nconst protocolStats=Object.entries(protocols).sort((_ref2,_ref3)=>{let[,a]=_ref2;let[,b]=_ref3;return b-a;}).map(_ref4=>{let[protocol,count]=_ref4;return{protocol,count,percentage:(count/totalEvents*100).toFixed(1)};});const topProtocol=protocolStats[0];return/*#__PURE__*/_jsxs(\"div\",{className:\"protocol-widget\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"widget-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Protocol Analysis\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"widget-stats\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"total-protocols\",children:[Object.keys(protocols).length,\" protocols\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"total-events\",children:[totalEvents,\" events\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"widget-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"top-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chart-section\",children:/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:/*#__PURE__*/_jsx(Doughnut,{data:chartData,options:chartOptions})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"primary-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"primary-stat\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Most Targeted\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-value\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"protocol-name\",children:(topProtocol===null||topProtocol===void 0?void 0:(_topProtocol$protocol=topProtocol.protocol)===null||_topProtocol$protocol===void 0?void 0:_topProtocol$protocol.toUpperCase())||'N/A'}),/*#__PURE__*/_jsxs(\"span\",{className:\"protocol-count\",children:[(topProtocol===null||topProtocol===void 0?void 0:topProtocol.count)||0,\" events\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"quick-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"quick-stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"quick-label\",children:\"Total Events\"}),/*#__PURE__*/_jsx(\"span\",{className:\"quick-value\",children:totalEvents})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"quick-stat\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"quick-label\",children:\"Active Protocols\"}),/*#__PURE__*/_jsx(\"span\",{className:\"quick-value\",children:Object.keys(protocols).length})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"protocol-breakdown-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Protocol Distribution\"}),/*#__PURE__*/_jsx(\"div\",{className:\"protocol-breakdown\",children:protocolStats.slice(0,4).map((stat,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"protocol-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"protocol-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"protocol-label\",children:stat.protocol.toUpperCase()}),/*#__PURE__*/_jsxs(\"span\",{className:\"protocol-percentage\",children:[stat.percentage,\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"protocol-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"protocol-fill\",style:{width:`${stat.percentage}%`,backgroundColor:chartData.datasets[0].backgroundColor[index]}})})]},stat.protocol))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"security-insights-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Security Insights\"}),/*#__PURE__*/_jsx(\"div\",{className:\"insights-list\",children:getSecurityInsights(protocolStats).map((insight,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`insight-item ${insight.severity}`,children:[/*#__PURE__*/_jsx(\"span\",{className:\"insight-icon\",children:insight.icon}),/*#__PURE__*/_jsx(\"span\",{className:\"insight-text\",children:insight.text})]},index))})]})]})]});};// Generate security insights based on protocol data\nconst getSecurityInsights=protocolStats=>{const insights=[];if(protocolStats.length===0)return insights;const topProtocol=protocolStats[0];const sshAttacks=protocolStats.find(p=>p.protocol.toLowerCase()==='ssh');const httpsAttacks=protocolStats.find(p=>p.protocol.toLowerCase()==='https');const ftpAttacks=protocolStats.find(p=>p.protocol.toLowerCase()==='ftp');// Top protocol insight\nif(topProtocol.percentage>50){insights.push({severity:'high',icon:'⚠️',text:`${topProtocol.protocol.toUpperCase()} is heavily targeted (${topProtocol.percentage}%)`});}else{insights.push({severity:'info',icon:'ℹ️',text:`${topProtocol.protocol.toUpperCase()} is most targeted protocol`});}// SSH specific insights\nif(sshAttacks&&sshAttacks.percentage>20){insights.push({severity:'medium',icon:'🔑',text:`High SSH brute force activity detected`});}// HTTPS specific insights\nif(httpsAttacks&&httpsAttacks.percentage>30){insights.push({severity:'medium',icon:'🌐',text:`Significant web service reconnaissance`});}// FTP specific insights\nif(ftpAttacks&&ftpAttacks.percentage>15){insights.push({severity:'medium',icon:'📁',text:`FTP service being actively probed`});}// Diversity insight\nif(protocolStats.length>=4){insights.push({severity:'info',icon:'🎯',text:`Multi-protocol attack pattern detected`});}return insights.slice(0,3);// Limit to 3 insights\n};export default ProtocolWidget;","map":{"version":3,"names":["React","Doughnut","Bar","jsx","_jsx","jsxs","_jsxs","ProtocolWidget","_ref","_topProtocol$protocol","threatStats","loading","className","children","byProtocol","Object","keys","length","protocols","totalEvents","values","reduce","sum","count","chartData","labels","datasets","data","backgroundColor","borderWidth","borderColor","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","color","usePointStyle","pointStyle","padding","font","size","tooltip","callbacks","label","context","percentage","parsed","toFixed","protocolStats","entries","sort","_ref2","_ref3","a","b","map","_ref4","protocol","topProtocol","options","toUpperCase","slice","stat","index","style","width","getSecurityInsights","insight","severity","icon","text","insights","sshAttacks","find","p","toLowerCase","httpsAttacks","ftpAttacks","push"],"sources":["/home/demon/distributed-architecture/central-infrastructure/frontend/src/components/ProtocolWidget.js"],"sourcesContent":["import React from 'react';\nimport { Doughnut, Bar } from 'react-chartjs-2';\nimport './ProtocolWidget.css';\n\nconst ProtocolWidget = ({ threatStats, loading = false }) => {\n  if (loading) {\n    return (\n      <div className=\"protocol-widget loading\">\n        <div className=\"widget-header\">\n          <h3>Protocol Analysis</h3>\n        </div>\n        <div className=\"loading-content\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading protocol data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!threatStats || !threatStats.byProtocol || Object.keys(threatStats.byProtocol).length === 0) {\n    return (\n      <div className=\"protocol-widget empty\">\n        <div className=\"widget-header\">\n          <h3>Protocol Analysis</h3>\n        </div>\n        <div className=\"empty-state\">\n          <span className=\"empty-icon\">📊</span>\n          <p>No protocol data available</p>\n        </div>\n      </div>\n    );\n  }\n\n  const protocols = threatStats.byProtocol;\n  const totalEvents = Object.values(protocols).reduce((sum, count) => sum + count, 0);\n\n  // Prepare chart data\n  const chartData = {\n    labels: Object.keys(protocols),\n    datasets: [{\n      data: Object.values(protocols),\n      backgroundColor: [\n        '#dc3545', // Red - HTTPS\n        '#ffc107', // Yellow - SSH\n        '#28a745', // Green - FTP\n        '#17a2b8', // Cyan - Telnet\n        '#6f42c1', // Purple - HTTP\n        '#fd7e14', // Orange - Other\n        '#20c997', // Teal\n        '#6610f2'  // Indigo\n      ],\n      borderWidth: 2,\n      borderColor: '#fff'\n    }]\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          color: '#cbd5e1',\n          usePointStyle: true,\n          pointStyle: 'circle',\n          padding: 15,\n          font: {\n            size: 11\n          }\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            const percentage = ((context.parsed / totalEvents) * 100).toFixed(1);\n            return `${context.label}: ${context.parsed} (${percentage}%)`;\n          }\n        }\n      }\n    }\n  };\n\n  // Calculate protocol statistics\n  const protocolStats = Object.entries(protocols)\n    .sort(([,a], [,b]) => b - a)\n    .map(([protocol, count]) => ({\n      protocol,\n      count,\n      percentage: ((count / totalEvents) * 100).toFixed(1)\n    }));\n\n  const topProtocol = protocolStats[0];\n\n  return (\n    <div className=\"protocol-widget\">\n      <div className=\"widget-header\">\n        <h3>Protocol Analysis</h3>\n        <div className=\"widget-stats\">\n          <span className=\"total-protocols\">{Object.keys(protocols).length} protocols</span>\n          <span className=\"total-events\">{totalEvents} events</span>\n        </div>\n      </div>\n\n      <div className=\"widget-content\">\n        {/* Top Section: Chart and Primary Stats */}\n        <div className=\"top-section\">\n          <div className=\"chart-section\">\n            <div className=\"chart-container\">\n              <Doughnut data={chartData} options={chartOptions} />\n            </div>\n          </div>\n\n          <div className=\"primary-stats\">\n            <div className=\"primary-stat\">\n              <div className=\"stat-label\">Most Targeted</div>\n              <div className=\"stat-value\">\n                <span className=\"protocol-name\">{topProtocol?.protocol?.toUpperCase() || 'N/A'}</span>\n                <span className=\"protocol-count\">{topProtocol?.count || 0} events</span>\n              </div>\n            </div>\n            \n            <div className=\"quick-stats\">\n              <div className=\"quick-stat\">\n                <span className=\"quick-label\">Total Events</span>\n                <span className=\"quick-value\">{totalEvents}</span>\n              </div>\n              <div className=\"quick-stat\">\n                <span className=\"quick-label\">Active Protocols</span>\n                <span className=\"quick-value\">{Object.keys(protocols).length}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Middle Section: Protocol Breakdown */}\n        <div className=\"protocol-breakdown-section\">\n          <h4>Protocol Distribution</h4>\n          <div className=\"protocol-breakdown\">\n            {protocolStats.slice(0, 4).map((stat, index) => (\n              <div key={stat.protocol} className=\"protocol-item\">\n                <div className=\"protocol-info\">\n                  <span className=\"protocol-label\">{stat.protocol.toUpperCase()}</span>\n                  <span className=\"protocol-percentage\">{stat.percentage}%</span>\n                </div>\n                <div className=\"protocol-bar\">\n                  <div \n                    className=\"protocol-fill\" \n                    style={{ \n                      width: `${stat.percentage}%`,\n                      backgroundColor: chartData.datasets[0].backgroundColor[index]\n                    }}\n                  ></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Bottom Section: Security Insights */}\n        <div className=\"security-insights-section\">\n          <h4>Security Insights</h4>\n          <div className=\"insights-list\">\n            {getSecurityInsights(protocolStats).map((insight, index) => (\n              <div key={index} className={`insight-item ${insight.severity}`}>\n                <span className=\"insight-icon\">{insight.icon}</span>\n                <span className=\"insight-text\">{insight.text}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Generate security insights based on protocol data\nconst getSecurityInsights = (protocolStats) => {\n  const insights = [];\n  \n  if (protocolStats.length === 0) return insights;\n  \n  const topProtocol = protocolStats[0];\n  const sshAttacks = protocolStats.find(p => p.protocol.toLowerCase() === 'ssh');\n  const httpsAttacks = protocolStats.find(p => p.protocol.toLowerCase() === 'https');\n  const ftpAttacks = protocolStats.find(p => p.protocol.toLowerCase() === 'ftp');\n  \n  // Top protocol insight\n  if (topProtocol.percentage > 50) {\n    insights.push({\n      severity: 'high',\n      icon: '⚠️',\n      text: `${topProtocol.protocol.toUpperCase()} is heavily targeted (${topProtocol.percentage}%)`\n    });\n  } else {\n    insights.push({\n      severity: 'info',\n      icon: 'ℹ️',\n      text: `${topProtocol.protocol.toUpperCase()} is most targeted protocol`\n    });\n  }\n  \n  // SSH specific insights\n  if (sshAttacks && sshAttacks.percentage > 20) {\n    insights.push({\n      severity: 'medium',\n      icon: '🔑',\n      text: `High SSH brute force activity detected`\n    });\n  }\n  \n  // HTTPS specific insights\n  if (httpsAttacks && httpsAttacks.percentage > 30) {\n    insights.push({\n      severity: 'medium',\n      icon: '🌐',\n      text: `Significant web service reconnaissance`\n    });\n  }\n  \n  // FTP specific insights\n  if (ftpAttacks && ftpAttacks.percentage > 15) {\n    insights.push({\n      severity: 'medium',\n      icon: '📁',\n      text: `FTP service being actively probed`\n    });\n  }\n  \n  // Diversity insight\n  if (protocolStats.length >= 4) {\n    insights.push({\n      severity: 'info',\n      icon: '🎯',\n      text: `Multi-protocol attack pattern detected`\n    });\n  }\n  \n  return insights.slice(0, 3); // Limit to 3 insights\n};\n\nexport default ProtocolWidget;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}