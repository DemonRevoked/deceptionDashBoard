{"ast":null,"code":"var _jsxFileName = \"/home/demon/distributed-architecture/central-infrastructure/frontend/src/components/AttackTimeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './AttackTimeline.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttackTimeline = ({\n  attackerIP,\n  attackPath,\n  onStepClick\n}) => {\n  _s();\n  const [expandedSteps, setExpandedSteps] = useState(new Set());\n  const toggleStep = stepId => {\n    const newExpanded = new Set(expandedSteps);\n    if (newExpanded.has(stepId)) {\n      newExpanded.delete(stepId);\n    } else {\n      newExpanded.add(stepId);\n    }\n    setExpandedSteps(newExpanded);\n  };\n  const getStepIcon = attackType => {\n    switch (attackType) {\n      case 'port_scan':\n        return '🎯';\n      case 'nmap_detection':\n        return '👁️';\n      case 'ping_sweep':\n        return '📡';\n      case 'service_access':\n        return '🛡️';\n      case 'syn_scan':\n        return '⚡';\n      case 'udp_scan':\n        return '⚡';\n      case 'ssh_attempt':\n        return '🔐';\n      case 'ftp_attempt':\n        return '📁';\n      case 'http_attempt':\n        return '🌐';\n      case 'telnet_attempt':\n        return '📞';\n      case 's7_attack':\n        return '🏭';\n      case 'dcs_attack':\n        return '⚙️';\n      default:\n        return '⚠️';\n    }\n  };\n  const getStepColor = platform => {\n    switch (platform) {\n      case 'Network':\n        return 'network';\n      case 'IT':\n        return 'it';\n      case 'OT':\n        return 'ot';\n      default:\n        return 'unknown';\n    }\n  };\n  const formatTimestamp = timestamp => {\n    if (!timestamp) return 'Unknown';\n    try {\n      return new Date(timestamp).toLocaleString();\n    } catch (error) {\n      return 'Invalid date';\n    }\n  };\n  const getStepDetails = attack => {\n    const details = [];\n    if (attack.alertType === 'port_scan' && attack.details) {\n      var _attack$details$ports;\n      details.push(`Ports: ${((_attack$details$ports = attack.details.ports) === null || _attack$details$ports === void 0 ? void 0 : _attack$details$ports.join(', ')) || 'Unknown'}`);\n      details.push(`Scan Type: ${attack.details.scanType || 'Unknown'}`);\n      details.push(`Duration: ${attack.details.duration || 'Unknown'}`);\n    }\n    if (attack.alertType === 'nmap_detection' && attack.details) {\n      details.push(`Nmap Version: ${attack.details.nmapVersion || 'Unknown'}`);\n      details.push(`Scan Flags: ${attack.details.scanFlags || 'Unknown'}`);\n      details.push(`Target Ports: ${attack.details.targetPorts || 'Unknown'}`);\n    }\n    if (attack.alertType === 'service_access' && attack.details) {\n      details.push(`Service: ${attack.details.service || 'Unknown'}`);\n      details.push(`Port: ${attack.details.port || 'Unknown'}`);\n      details.push(`Attempts: ${attack.details.attempts || 'Unknown'}`);\n      if (attack.details.credentials) {\n        details.push(`Credentials: ${attack.details.credentials.join(', ')}`);\n      }\n    }\n    if (attack.type === 'ssh_attempt') {\n      var _attack$commands;\n      details.push(`Username: ${attack.username || 'Unknown'}`);\n      details.push(`Password: ${attack.password || 'Unknown'}`);\n      details.push(`Commands: ${((_attack$commands = attack.commands) === null || _attack$commands === void 0 ? void 0 : _attack$commands.length) || 0} executed`);\n    }\n    if (attack.type === 'ftp_attempt') {\n      var _attack$filesAccessed;\n      details.push(`Username: ${attack.username || 'Unknown'}`);\n      details.push(`Password: ${attack.password || 'Unknown'}`);\n      details.push(`Files Accessed: ${((_attack$filesAccessed = attack.filesAccessed) === null || _attack$filesAccessed === void 0 ? void 0 : _attack$filesAccessed.length) || 0}`);\n    }\n    return details;\n  };\n\n  // Flatten all attacks into a single timeline\n  const timelineSteps = [];\n  attackPath.forEach((path, pathIndex) => {\n    path.attacks.forEach((attack, attackIndex) => {\n      timelineSteps.push({\n        id: `${pathIndex}-${attackIndex}`,\n        platform: path.platform,\n        attack: attack,\n        icon: path.icon,\n        color: path.color,\n        timestamp: attack.timestamp,\n        attackType: attack.alertType || attack.type\n      });\n    });\n  });\n\n  // Sort by timestamp\n  timelineSteps.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"attack-timeline\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Attack Timeline: \", attackerIP]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Complete attack path with \", timelineSteps.length, \" steps across \", attackPath.length, \" platforms\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-container\",\n      children: timelineSteps.map((step, index) => {\n        var _step$attackType;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `timeline-step ${step.color}`,\n          children: [index > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline-connector\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step-marker\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-icon\",\n              children: getStepIcon(step.attackType)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-number\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-header\",\n              onClick: () => toggleStep(step.id),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"step-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"step-platform\",\n                  children: step.platform\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"step-type\",\n                  children: (_step$attackType = step.attackType) === null || _step$attackType === void 0 ? void 0 : _step$attackType.replace('_', ' ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"step-time\",\n                  children: formatTimestamp(step.timestamp)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"step-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-secondary btn-sm\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    onStepClick(step);\n                  },\n                  children: \"\\uD83D\\uDD0D View Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-secondary btn-sm\",\n                  children: expandedSteps.has(step.id) ? '▼' : '▶'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), expandedSteps.has(step.id) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"details-grid\",\n                children: getStepDetails(step.attack).map((detail, detailIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detail-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detail-label\",\n                    children: [detail.split(':')[0], \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detail-value\",\n                    children: detail.split(':').slice(1).join(':')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 25\n                  }, this)]\n                }, detailIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"step-actions-expanded\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary\",\n                  onClick: () => onStepClick(step),\n                  children: \"\\uD83D\\uDCCA Full Analysis\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-secondary\",\n                  onClick: () => onStepClick({\n                    ...step,\n                    view: 'logs'\n                  }),\n                  children: \"\\uD83D\\uDCCB View Logs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, step.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-summary\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Total Steps:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: timelineSteps.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Platforms:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: attackPath.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Duration:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: timelineSteps.length > 1 ? `${Math.round((new Date(timelineSteps[timelineSteps.length - 1].timestamp) - new Date(timelineSteps[0].timestamp)) / 60000)}m` : 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(AttackTimeline, \"3DcCie6fwfy3ImtAUSsGf0NQgdI=\");\n_c = AttackTimeline;\nexport default AttackTimeline;\nvar _c;\n$RefreshReg$(_c, \"AttackTimeline\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AttackTimeline","attackerIP","attackPath","onStepClick","_s","expandedSteps","setExpandedSteps","Set","toggleStep","stepId","newExpanded","has","delete","add","getStepIcon","attackType","getStepColor","platform","formatTimestamp","timestamp","Date","toLocaleString","error","getStepDetails","attack","details","alertType","_attack$details$ports","push","ports","join","scanType","duration","nmapVersion","scanFlags","targetPorts","service","port","attempts","credentials","type","_attack$commands","username","password","commands","length","_attack$filesAccessed","filesAccessed","timelineSteps","forEach","path","pathIndex","attacks","attackIndex","id","icon","color","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","step","index","_step$attackType","onClick","replace","e","stopPropagation","detail","detailIndex","split","slice","view","Math","round","_c","$RefreshReg$"],"sources":["/home/demon/distributed-architecture/central-infrastructure/frontend/src/components/AttackTimeline.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './AttackTimeline.css';\n\nconst AttackTimeline = ({ attackerIP, attackPath, onStepClick }) => {\n  const [expandedSteps, setExpandedSteps] = useState(new Set());\n\n  const toggleStep = (stepId) => {\n    const newExpanded = new Set(expandedSteps);\n    if (newExpanded.has(stepId)) {\n      newExpanded.delete(stepId);\n    } else {\n      newExpanded.add(stepId);\n    }\n    setExpandedSteps(newExpanded);\n  };\n\n  const getStepIcon = (attackType) => {\n    switch (attackType) {\n      case 'port_scan': return '🎯';\n      case 'nmap_detection': return '👁️';\n      case 'ping_sweep': return '📡';\n      case 'service_access': return '🛡️';\n      case 'syn_scan': return '⚡';\n      case 'udp_scan': return '⚡';\n      case 'ssh_attempt': return '🔐';\n      case 'ftp_attempt': return '📁';\n      case 'http_attempt': return '🌐';\n      case 'telnet_attempt': return '📞';\n      case 's7_attack': return '🏭';\n      case 'dcs_attack': return '⚙️';\n      default: return '⚠️';\n    }\n  };\n\n  const getStepColor = (platform) => {\n    switch (platform) {\n      case 'Network': return 'network';\n      case 'IT': return 'it';\n      case 'OT': return 'ot';\n      default: return 'unknown';\n    }\n  };\n\n  const formatTimestamp = (timestamp) => {\n    if (!timestamp) return 'Unknown';\n    try {\n      return new Date(timestamp).toLocaleString();\n    } catch (error) {\n      return 'Invalid date';\n    }\n  };\n\n  const getStepDetails = (attack) => {\n    const details = [];\n    \n    if (attack.alertType === 'port_scan' && attack.details) {\n      details.push(`Ports: ${attack.details.ports?.join(', ') || 'Unknown'}`);\n      details.push(`Scan Type: ${attack.details.scanType || 'Unknown'}`);\n      details.push(`Duration: ${attack.details.duration || 'Unknown'}`);\n    }\n    \n    if (attack.alertType === 'nmap_detection' && attack.details) {\n      details.push(`Nmap Version: ${attack.details.nmapVersion || 'Unknown'}`);\n      details.push(`Scan Flags: ${attack.details.scanFlags || 'Unknown'}`);\n      details.push(`Target Ports: ${attack.details.targetPorts || 'Unknown'}`);\n    }\n    \n    if (attack.alertType === 'service_access' && attack.details) {\n      details.push(`Service: ${attack.details.service || 'Unknown'}`);\n      details.push(`Port: ${attack.details.port || 'Unknown'}`);\n      details.push(`Attempts: ${attack.details.attempts || 'Unknown'}`);\n      if (attack.details.credentials) {\n        details.push(`Credentials: ${attack.details.credentials.join(', ')}`);\n      }\n    }\n\n    if (attack.type === 'ssh_attempt') {\n      details.push(`Username: ${attack.username || 'Unknown'}`);\n      details.push(`Password: ${attack.password || 'Unknown'}`);\n      details.push(`Commands: ${attack.commands?.length || 0} executed`);\n    }\n\n    if (attack.type === 'ftp_attempt') {\n      details.push(`Username: ${attack.username || 'Unknown'}`);\n      details.push(`Password: ${attack.password || 'Unknown'}`);\n      details.push(`Files Accessed: ${attack.filesAccessed?.length || 0}`);\n    }\n\n    return details;\n  };\n\n  // Flatten all attacks into a single timeline\n  const timelineSteps = [];\n  attackPath.forEach((path, pathIndex) => {\n    path.attacks.forEach((attack, attackIndex) => {\n      timelineSteps.push({\n        id: `${pathIndex}-${attackIndex}`,\n        platform: path.platform,\n        attack: attack,\n        icon: path.icon,\n        color: path.color,\n        timestamp: attack.timestamp,\n        attackType: attack.alertType || attack.type\n      });\n    });\n  });\n\n  // Sort by timestamp\n  timelineSteps.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n\n  return (\n    <div className=\"attack-timeline\">\n      <div className=\"timeline-header\">\n        <h3>Attack Timeline: {attackerIP}</h3>\n        <p>Complete attack path with {timelineSteps.length} steps across {attackPath.length} platforms</p>\n      </div>\n\n      <div className=\"timeline-container\">\n        {timelineSteps.map((step, index) => (\n          <div key={step.id} className={`timeline-step ${step.color}`}>\n            {/* Timeline connector */}\n            {index > 0 && <div className=\"timeline-connector\" />}\n            \n            {/* Step marker */}\n            <div className=\"step-marker\">\n              <div className=\"step-icon\">{getStepIcon(step.attackType)}</div>\n              <div className=\"step-number\">{index + 1}</div>\n            </div>\n\n            {/* Step content */}\n            <div className=\"step-content\">\n              <div className=\"step-header\" onClick={() => toggleStep(step.id)}>\n                <div className=\"step-info\">\n                  <span className=\"step-platform\">{step.platform}</span>\n                  <span className=\"step-type\">{step.attackType?.replace('_', ' ')}</span>\n                  <span className=\"step-time\">{formatTimestamp(step.timestamp)}</span>\n                </div>\n                <div className=\"step-actions\">\n                  <button \n                    className=\"btn btn-secondary btn-sm\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      onStepClick(step);\n                    }}\n                  >\n                    🔍 View Details\n                  </button>\n                  <button className=\"btn btn-secondary btn-sm\">\n                    {expandedSteps.has(step.id) ? '▼' : '▶'}\n                  </button>\n                </div>\n              </div>\n\n              {/* Expanded details */}\n              {expandedSteps.has(step.id) && (\n                <div className=\"step-details\">\n                  <div className=\"details-grid\">\n                    {getStepDetails(step.attack).map((detail, detailIndex) => (\n                      <div key={detailIndex} className=\"detail-item\">\n                        <span className=\"detail-label\">{detail.split(':')[0]}:</span>\n                        <span className=\"detail-value\">{detail.split(':').slice(1).join(':')}</span>\n                      </div>\n                    ))}\n                  </div>\n                  \n                  <div className=\"step-actions-expanded\">\n                    <button \n                      className=\"btn btn-primary\"\n                      onClick={() => onStepClick(step)}\n                    >\n                      📊 Full Analysis\n                    </button>\n                    <button \n                      className=\"btn btn-secondary\"\n                      onClick={() => onStepClick({ ...step, view: 'logs' })}\n                    >\n                      📋 View Logs\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Timeline summary */}\n      <div className=\"timeline-summary\">\n        <div className=\"summary-stats\">\n          <div className=\"stat-item\">\n            <span className=\"stat-label\">Total Steps:</span>\n            <span className=\"stat-value\">{timelineSteps.length}</span>\n          </div>\n          <div className=\"stat-item\">\n            <span className=\"stat-label\">Platforms:</span>\n            <span className=\"stat-value\">{attackPath.length}</span>\n          </div>\n          <div className=\"stat-item\">\n            <span className=\"stat-label\">Duration:</span>\n            <span className=\"stat-value\">\n              {timelineSteps.length > 1 \n                ? `${Math.round((new Date(timelineSteps[timelineSteps.length - 1].timestamp) - new Date(timelineSteps[0].timestamp)) / 60000)}m`\n                : 'N/A'\n              }\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AttackTimeline; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}