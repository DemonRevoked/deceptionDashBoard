{"ast":null,"code":"import React,{useEffect,useState,useMemo}from'react';import{useParams,Link,useNavigate}from'react-router-dom';import{fetchHoneypots,fetchEvents,startHoneypot,stopHoneypot}from'../../api';import useRealTimeEvents from'../../hooks/useRealTimeEvents';import useWebSocket from'../../hooks/useWebSocket';import toast from'react-hot-toast';import styles from'./HoneypotPage.module.css';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,LineElement,PointElement,Title,Tooltip,Legend,ArcElement}from'chart.js';import{Pie,Bar,Line}from'react-chartjs-2';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,LineElement,PointElement,Title,Tooltip,Legend,ArcElement);export default function HoneypotPage(){const{id}=useParams();const navigate=useNavigate();const[honeypot,setHoneypot]=useState(null);const[historicalEvents,setHistoricalEvents]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[activeTab,setActiveTab]=useState('overview');const[controlling,setControlling]=useState(false);// Real-time events for this specific honeypot\nconst{events:realTimeEvents,honeypotStatuses,securityAlerts,isConnected}=useRealTimeEvents({honeypotId:id,maxEvents:200,enableNotifications:true,enableSecurityAlerts:true});// WebSocket connection for real-time updates\nconst{socket}=useWebSocket();// Combine historical and real-time events\nconst allEvents=useMemo(()=>{const eventMap=new Map();// Add historical events\nhistoricalEvents.forEach(event=>{eventMap.set(event._id,event);});// Add real-time events (will override historical if same ID)\nrealTimeEvents.forEach(event=>{eventMap.set(event._id,event);});return Array.from(eventMap.values()).sort((a,b)=>new Date(b.timestamp)-new Date(a.timestamp));},[historicalEvents,realTimeEvents]);// Update honeypot status with real-time data\nconst updatedHoneypot=useMemo(()=>{if(!honeypot)return null;const statusUpdate=honeypotStatuses[honeypot._id];if(statusUpdate){return{...honeypot,status:statusUpdate.status,updated_at:statusUpdate.updated_at};}return honeypot;},[honeypot,honeypotStatuses]);// Calculate analytics\nconst analytics=useMemo(()=>{const last24Hours=allEvents.filter(ev=>new Date(ev.timestamp)>new Date(Date.now()-24*60*60*1000)).length;const last7Days=allEvents.filter(ev=>new Date(ev.timestamp)>new Date(Date.now()-7*24*60*60*1000)).length;// Attack patterns by hour\nconst hourlyActivity=Array.from({length:24},(_,i)=>{const hour=i;const count=allEvents.filter(ev=>{const evHour=new Date(ev.timestamp).getHours();return evHour===hour;}).length;return{hour,count};});// Top attacking IPs\nconst ipCount={};allEvents.forEach(ev=>{ipCount[ev.source_ip]=(ipCount[ev.source_ip]||0)+1;});const topIPs=Object.entries(ipCount).sort((_ref,_ref2)=>{let[,a]=_ref;let[,b]=_ref2;return b-a;}).slice(0,10);// Event types distribution\nconst eventTypes={};allEvents.forEach(ev=>{eventTypes[ev.event_type]=(eventTypes[ev.event_type]||0)+1;});// Severity distribution\nconst severityCount={low:allEvents.filter(ev=>ev.severity==='low').length,medium:allEvents.filter(ev=>ev.severity==='medium').length,high:allEvents.filter(ev=>ev.severity==='high').length,critical:allEvents.filter(ev=>ev.severity==='critical').length};// Geographic distribution - based on IP ranges\nconst countries={};allEvents.forEach(ev=>{let country='Unknown';// Basic IP range detection (no mock data)\nif(ev.source_ip.startsWith('192.168')||ev.source_ip.startsWith('10.')||ev.source_ip.startsWith('172.')){country='Local Network';}else if(ev.source_ip.startsWith('127.')){country='Localhost';}else{// For external IPs, we would need a geolocation service\n// For now, mark as external\ncountry='External';}countries[country]=(countries[country]||0)+1;});return{last24Hours,last7Days,hourlyActivity,topIPs,eventTypes,severityCount,countries};},[allEvents]);// Load initial data\nuseEffect(()=>{async function loadData(){try{// Removed console.log to reduce spam\nconst hps=await fetchHoneypots();const hp=hps.find(h=>h._id===id);if(!hp){setError('Honeypot not found');return;}setHoneypot(hp);// Load historical events for this honeypot\nconst evs=await fetchEvents({honeypot_id:id,limit:500});setHistoricalEvents(evs);// Join honeypot-specific room for real-time updates\nif(socket){socket.emit('join-honeypot',id);}}catch(e){console.error('Error loading data:',e);setError(e.message||'Failed to load honeypot data');}finally{setLoading(false);}}if(id)loadData();// Cleanup function\nreturn()=>{if(socket){socket.emit('leave-honeypot',id);}};},[id,socket]);// Control functions\nconst startHoneypotAction=async()=>{setControlling(true);try{await startHoneypot(id);toast.success('Honeypot started successfully');// Update local state optimistically\nsetHoneypot(prev=>({...prev,status:'starting'}));}catch(error){toast.error('Failed to start honeypot: '+error.message);}finally{setControlling(false);}};const stopHoneypotAction=async()=>{setControlling(true);try{await stopHoneypot(id);toast.success('Honeypot stopped successfully');// Update local state optimistically\nsetHoneypot(prev=>({...prev,status:'stopping'}));}catch(error){toast.error('Failed to stop honeypot: '+error.message);}finally{setControlling(false);}};const restartHoneypot=async()=>{setControlling(true);try{await stopHoneypotAction();setTimeout(()=>startHoneypotAction(),2000);toast.success('Honeypot restart initiated');}catch(error){toast.error('Failed to restart honeypot: '+error.message);}finally{setControlling(false);}};if(loading)return/*#__PURE__*/_jsx(\"div\",{className:styles.loading,children:\"Loading honeypot control center...\"});if(error)return/*#__PURE__*/_jsxs(\"div\",{className:styles.error,children:[\"Error: \",error]});if(!updatedHoneypot)return/*#__PURE__*/_jsx(\"div\",{className:styles.error,children:\"Honeypot not found.\"});// Chart configurations\nconst hourlyChartData={labels:analytics.hourlyActivity.map(h=>`${h.hour}:00`),datasets:[{label:'Attacks per Hour',data:analytics.hourlyActivity.map(h=>h.count),borderColor:'#06b6d4',backgroundColor:'rgba(6, 182, 212, 0.1)',tension:0.4,fill:true}]};const eventTypeChartData={labels:Object.keys(analytics.eventTypes).map(type=>type.replace('_',' ').toUpperCase()),datasets:[{data:Object.values(analytics.eventTypes),backgroundColor:['#06b6d4','#10b981','#f59e0b','#ef4444','#8b5cf6','#ec4899','#84cc16','#f97316'],borderColor:'#1e293b',borderWidth:2}]};const severityChartData={labels:['Low','Medium','High','Critical'],datasets:[{data:[analytics.severityCount.low,analytics.severityCount.medium,analytics.severityCount.high,analytics.severityCount.critical],backgroundColor:['#22c55e','#f59e0b','#f97316','#ef4444'],borderColor:'#1e293b',borderWidth:2}]};const chartOptions={responsive:true,maintainAspectRatio:false,plugins:{legend:{position:'bottom',labels:{color:'#cbd5e1',font:{size:12}}}}};return/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.header,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.headerLeft,children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:styles.backButton,children:\"\\u2190 Back to Dashboard\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.honeypotTitle,children:[/*#__PURE__*/_jsx(\"h1\",{children:updatedHoneypot.name}),/*#__PURE__*/_jsx(\"span\",{className:styles.protocol,children:updatedHoneypot.protocol.toUpperCase()})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.headerRight,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.connectionStatus,children:[/*#__PURE__*/_jsx(\"span\",{className:`${styles.statusDot} ${isConnected?styles.connected:styles.disconnected}`}),/*#__PURE__*/_jsx(\"span\",{children:isConnected?'Real-time Connected':'Disconnected'})]}),/*#__PURE__*/_jsx(\"div\",{className:`${styles.statusBadge} ${styles[updatedHoneypot.status]}`,children:updatedHoneypot.status.toUpperCase()})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.controlPanel,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.controlButtons,children:[/*#__PURE__*/_jsx(\"button\",{onClick:startHoneypotAction,disabled:controlling||updatedHoneypot.status==='running',className:`${styles.controlBtn} ${styles.startBtn}`,children:controlling?'Starting...':'Start'}),/*#__PURE__*/_jsx(\"button\",{onClick:stopHoneypotAction,disabled:controlling||updatedHoneypot.status==='stopped',className:`${styles.controlBtn} ${styles.stopBtn}`,children:controlling?'Stopping...':'Stop'}),/*#__PURE__*/_jsx(\"button\",{onClick:restartHoneypot,disabled:controlling,className:`${styles.controlBtn} ${styles.restartBtn}`,children:controlling?'Restarting...':'Restart'})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.quickStats,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.statItem,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.statLabel,children:\"Port\"}),/*#__PURE__*/_jsx(\"span\",{className:styles.statValue,children:updatedHoneypot.port})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.statItem,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.statLabel,children:\"Type\"}),/*#__PURE__*/_jsx(\"span\",{className:styles.statValue,children:updatedHoneypot.type})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.statItem,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.statLabel,children:\"Total Events\"}),/*#__PURE__*/_jsx(\"span\",{className:styles.statValue,children:allEvents.length})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.statItem,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.statLabel,children:\"24h Activity\"}),/*#__PURE__*/_jsx(\"span\",{className:styles.statValue,children:analytics.last24Hours})]})]})]}),securityAlerts.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:styles.alertsSection,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDEA8 Active Security Alerts\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.alertsList,children:securityAlerts.slice(0,3).map((alert,index)=>/*#__PURE__*/_jsxs(\"div\",{className:styles.alertItem,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.alertType,children:alert.type}),/*#__PURE__*/_jsx(\"span\",{className:styles.alertMessage,children:alert.message}),/*#__PURE__*/_jsx(\"span\",{className:styles.alertTime,children:new Date(alert.timestamp).toLocaleString()})]},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.tabs,children:[/*#__PURE__*/_jsx(\"button\",{className:`${styles.tab} ${activeTab==='overview'?styles.active:''}`,onClick:()=>setActiveTab('overview'),children:\"Overview\"}),/*#__PURE__*/_jsxs(\"button\",{className:`${styles.tab} ${activeTab==='events'?styles.active:''}`,onClick:()=>setActiveTab('events'),children:[\"Events (\",allEvents.length,\")\"]}),/*#__PURE__*/_jsx(\"button\",{className:`${styles.tab} ${activeTab==='analytics'?styles.active:''}`,onClick:()=>setActiveTab('analytics'),children:\"Analytics\"}),/*#__PURE__*/_jsx(\"button\",{className:`${styles.tab} ${activeTab==='threats'?styles.active:''}`,onClick:()=>setActiveTab('threats'),children:\"Threat Intelligence\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.tabContent,children:[activeTab==='overview'&&/*#__PURE__*/_jsx(\"div\",{className:styles.overviewContent,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.overviewGrid,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.overviewCard,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Recent Activity\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.activityFeed,children:allEvents.slice(0,5).map(event=>{var _event$commands;return/*#__PURE__*/_jsxs(\"div\",{className:styles.activityItem,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.activityIcon,children:event.event_type==='session'?'🔐':'⚠️'}),/*#__PURE__*/_jsxs(\"div\",{className:styles.activityContent,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.activityHeader,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.activityIP,children:event.source_ip}),/*#__PURE__*/_jsx(\"span\",{className:styles.activityTime,children:new Date(event.timestamp).toLocaleString()})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.activityDetails,children:[event.event_type.replace('_',' ').toUpperCase(),event.event_type==='session'&&` - ${((_event$commands=event.commands)===null||_event$commands===void 0?void 0:_event$commands.length)||0} commands`]})]})]},event._id);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.overviewCard,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"System Health\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.healthMetrics,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.healthItem,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.healthLabel,children:\"Uptime\"}),/*#__PURE__*/_jsx(\"span\",{className:styles.healthValue,children:updatedHoneypot.status==='running'?'🟢 Active':'🔴 Stopped'})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.healthItem,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.healthLabel,children:\"Last Event\"}),/*#__PURE__*/_jsx(\"span\",{className:styles.healthValue,children:allEvents.length>0?new Date(allEvents[0].timestamp).toLocaleString():'No events yet'})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.healthItem,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.healthLabel,children:\"Threat Level\"}),/*#__PURE__*/_jsx(\"span\",{className:styles.healthValue,children:analytics.last24Hours>50?'🔴 High':analytics.last24Hours>20?'🟡 Medium':analytics.last24Hours>0?'🟢 Low':'⚪ Quiet'})]})]})]})]})}),activeTab==='events'&&/*#__PURE__*/_jsxs(\"div\",{className:styles.eventsContent,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.eventsHeader,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Security Events\"}),realTimeEvents.length>0&&/*#__PURE__*/_jsxs(\"span\",{className:styles.liveIndicator,children:[\"\\uD83D\\uDD34 \",realTimeEvents.length,\" Live Events\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.eventsList,children:allEvents.slice(0,20).map(event=>{var _event$commands2,_event$data,_event$data2;return/*#__PURE__*/_jsxs(Link,{to:`/sessions/${event._id}`,className:styles.eventItem,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.eventHeader,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.eventIP,children:event.source_ip}),/*#__PURE__*/_jsx(\"span\",{className:styles.eventTime,children:new Date(event.timestamp).toLocaleString()}),/*#__PURE__*/_jsx(\"span\",{className:`${styles.eventBadge} ${styles[event.severity]}`,children:event.event_type.replace('_',' ').toUpperCase()})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.eventDetails,children:event.event_type==='session'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Commands: \",((_event$commands2=event.commands)===null||_event$commands2===void 0?void 0:_event$commands2.length)||0]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Duration: \",Math.round(event.duration||0),\"s\"]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Severity: \",event.severity]}),((_event$data=event.data)===null||_event$data===void 0?void 0:_event$data.username)&&/*#__PURE__*/_jsxs(\"span\",{children:[\"User: \",event.data.username]}),((_event$data2=event.data)===null||_event$data2===void 0?void 0:_event$data2.filename)&&/*#__PURE__*/_jsxs(\"span\",{children:[\"File: \",event.data.filename]})]})})]},event._id);})})]}),activeTab==='analytics'&&/*#__PURE__*/_jsx(\"div\",{className:styles.analyticsContent,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.chartsGrid,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.chartCard,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Attack Patterns (24h)\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.chartContainer,children:/*#__PURE__*/_jsx(Line,{data:hourlyChartData,options:chartOptions})})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.chartCard,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Event Types\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.chartContainer,children:/*#__PURE__*/_jsx(Pie,{data:eventTypeChartData,options:chartOptions})})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.chartCard,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Severity Distribution\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.chartContainer,children:/*#__PURE__*/_jsx(Pie,{data:severityChartData,options:chartOptions})})]})]})}),activeTab==='threats'&&/*#__PURE__*/_jsx(\"div\",{className:styles.threatsContent,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.threatsGrid,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.threatCard,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Top Threat Sources\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.threatList,children:analytics.topIPs.map((_ref3,index)=>{let[ip,count]=_ref3;return/*#__PURE__*/_jsxs(\"div\",{className:styles.threatItem,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.threatRank,children:[\"#\",index+1]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.threatInfo,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.threatIP,children:ip}),/*#__PURE__*/_jsxs(\"span\",{className:styles.threatCount,children:[count,\" attacks\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.threatSeverity,children:count>=50?'🔴':count>=20?'🟡':'🟢'})]},ip);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.threatCard,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Geographic Distribution\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.geoList,children:Object.entries(analytics.countries).sort((_ref4,_ref5)=>{let[,a]=_ref4;let[,b]=_ref5;return b-a;}).slice(0,8).map(_ref6=>{let[country,count]=_ref6;return/*#__PURE__*/_jsxs(\"div\",{className:styles.geoItem,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.geoCountry,children:country}),/*#__PURE__*/_jsxs(\"span\",{className:styles.geoCount,children:[count,\" attacks\"]})]},country);})})]})]})})]})]});}","map":{"version":3,"names":["React","useEffect","useState","useMemo","useParams","Link","useNavigate","fetchHoneypots","fetchEvents","startHoneypot","stopHoneypot","useRealTimeEvents","useWebSocket","toast","styles","Chart","ChartJS","CategoryScale","LinearScale","BarElement","LineElement","PointElement","Title","Tooltip","Legend","ArcElement","Pie","Bar","Line","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","register","HoneypotPage","id","navigate","honeypot","setHoneypot","historicalEvents","setHistoricalEvents","loading","setLoading","error","setError","activeTab","setActiveTab","controlling","setControlling","events","realTimeEvents","honeypotStatuses","securityAlerts","isConnected","honeypotId","maxEvents","enableNotifications","enableSecurityAlerts","socket","allEvents","eventMap","Map","forEach","event","set","_id","Array","from","values","sort","a","b","Date","timestamp","updatedHoneypot","statusUpdate","status","updated_at","analytics","last24Hours","filter","ev","now","length","last7Days","hourlyActivity","_","i","hour","count","evHour","getHours","ipCount","source_ip","topIPs","Object","entries","_ref","_ref2","slice","eventTypes","event_type","severityCount","low","severity","medium","high","critical","countries","country","startsWith","loadData","hps","hp","find","h","evs","honeypot_id","limit","emit","e","console","message","startHoneypotAction","success","prev","stopHoneypotAction","restartHoneypot","setTimeout","className","children","hourlyChartData","labels","map","datasets","label","data","borderColor","backgroundColor","tension","fill","eventTypeChartData","keys","type","replace","toUpperCase","borderWidth","severityChartData","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","color","font","size","container","header","headerLeft","to","backButton","honeypotTitle","name","protocol","headerRight","connectionStatus","statusDot","connected","disconnected","statusBadge","controlPanel","controlButtons","onClick","disabled","controlBtn","startBtn","stopBtn","restartBtn","quickStats","statItem","statLabel","statValue","port","alertsSection","alertsList","alert","index","alertItem","alertType","alertMessage","alertTime","toLocaleString","tabs","tab","active","tabContent","overviewContent","overviewGrid","overviewCard","activityFeed","_event$commands","activityItem","activityIcon","activityContent","activityHeader","activityIP","activityTime","activityDetails","commands","healthMetrics","healthItem","healthLabel","healthValue","eventsContent","eventsHeader","liveIndicator","eventsList","_event$commands2","_event$data","_event$data2","eventItem","eventHeader","eventIP","eventTime","eventBadge","eventDetails","Math","round","duration","username","filename","analyticsContent","chartsGrid","chartCard","chartContainer","options","threatsContent","threatsGrid","threatCard","threatList","_ref3","ip","threatItem","threatRank","threatInfo","threatIP","threatCount","threatSeverity","geoList","_ref4","_ref5","_ref6","geoItem","geoCountry","geoCount"],"sources":["/home/demon/distributed-architecture/central-infrastructure/frontend/src/features/Honeypot/HoneypotPage.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { fetchHoneypots, fetchEvents, startHoneypot, stopHoneypot } from '../../api';\nimport useRealTimeEvents from '../../hooks/useRealTimeEvents';\nimport useWebSocket from '../../hooks/useWebSocket';\nimport toast from 'react-hot-toast';\nimport styles from './HoneypotPage.module.css';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  LineElement,\n  PointElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n} from 'chart.js';\nimport { Pie, Bar, Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  LineElement,\n  PointElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement\n);\n\nexport default function HoneypotPage() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [honeypot, setHoneypot] = useState(null);\n  const [historicalEvents, setHistoricalEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [controlling, setControlling] = useState(false);\n\n  // Real-time events for this specific honeypot\n  const { \n    events: realTimeEvents, \n    honeypotStatuses, \n    securityAlerts, \n    isConnected \n  } = useRealTimeEvents({\n    honeypotId: id,\n    maxEvents: 200,\n    enableNotifications: true,\n    enableSecurityAlerts: true\n  });\n\n  // WebSocket connection for real-time updates\n  const { socket } = useWebSocket();\n\n  // Combine historical and real-time events\n  const allEvents = useMemo(() => {\n    const eventMap = new Map();\n    \n    // Add historical events\n    historicalEvents.forEach(event => {\n      eventMap.set(event._id, event);\n    });\n    \n    // Add real-time events (will override historical if same ID)\n    realTimeEvents.forEach(event => {\n      eventMap.set(event._id, event);\n    });\n    \n    return Array.from(eventMap.values())\n      .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n  }, [historicalEvents, realTimeEvents]);\n\n  // Update honeypot status with real-time data\n  const updatedHoneypot = useMemo(() => {\n    if (!honeypot) return null;\n    \n    const statusUpdate = honeypotStatuses[honeypot._id];\n    if (statusUpdate) {\n      return {\n        ...honeypot,\n        status: statusUpdate.status,\n        updated_at: statusUpdate.updated_at\n      };\n    }\n    return honeypot;\n  }, [honeypot, honeypotStatuses]);\n\n  // Calculate analytics\n  const analytics = useMemo(() => {\n    const last24Hours = allEvents.filter(ev => \n      new Date(ev.timestamp) > new Date(Date.now() - 24 * 60 * 60 * 1000)\n    ).length;\n    \n    const last7Days = allEvents.filter(ev => \n      new Date(ev.timestamp) > new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)\n    ).length;\n\n    // Attack patterns by hour\n    const hourlyActivity = Array.from({ length: 24 }, (_, i) => {\n      const hour = i;\n      const count = allEvents.filter(ev => {\n        const evHour = new Date(ev.timestamp).getHours();\n        return evHour === hour;\n      }).length;\n      return { hour, count };\n    });\n\n    // Top attacking IPs\n    const ipCount = {};\n    allEvents.forEach(ev => {\n      ipCount[ev.source_ip] = (ipCount[ev.source_ip] || 0) + 1;\n    });\n    const topIPs = Object.entries(ipCount)\n      .sort(([,a], [,b]) => b - a)\n      .slice(0, 10);\n\n    // Event types distribution\n    const eventTypes = {};\n    allEvents.forEach(ev => {\n      eventTypes[ev.event_type] = (eventTypes[ev.event_type] || 0) + 1;\n    });\n\n    // Severity distribution\n    const severityCount = {\n      low: allEvents.filter(ev => ev.severity === 'low').length,\n      medium: allEvents.filter(ev => ev.severity === 'medium').length,\n      high: allEvents.filter(ev => ev.severity === 'high').length,\n      critical: allEvents.filter(ev => ev.severity === 'critical').length,\n    };\n\n    // Geographic distribution - based on IP ranges\n    const countries = {};\n    allEvents.forEach(ev => {\n      let country = 'Unknown';\n      \n      // Basic IP range detection (no mock data)\n      if (ev.source_ip.startsWith('192.168') || ev.source_ip.startsWith('10.') || ev.source_ip.startsWith('172.')) {\n        country = 'Local Network';\n      } else if (ev.source_ip.startsWith('127.')) {\n        country = 'Localhost';\n      } else {\n        // For external IPs, we would need a geolocation service\n        // For now, mark as external\n        country = 'External';\n      }\n      \n      countries[country] = (countries[country] || 0) + 1;\n    });\n\n    return {\n      last24Hours,\n      last7Days,\n      hourlyActivity,\n      topIPs,\n      eventTypes,\n      severityCount,\n      countries\n    };\n  }, [allEvents]);\n\n  // Load initial data\n  useEffect(() => {\n    async function loadData() {\n      try {\n        // Removed console.log to reduce spam\n        const hps = await fetchHoneypots();\n        const hp = hps.find(h => h._id === id);\n        \n        if (!hp) {\n          setError('Honeypot not found');\n          return;\n        }\n        \n        setHoneypot(hp);\n        \n        // Load historical events for this honeypot\n        const evs = await fetchEvents({ honeypot_id: id, limit: 500 });\n        setHistoricalEvents(evs);\n        \n        // Join honeypot-specific room for real-time updates\n        if (socket) {\n          socket.emit('join-honeypot', id);\n        }\n        \n      } catch (e) {\n        console.error('Error loading data:', e);\n        setError(e.message || 'Failed to load honeypot data');\n      } finally {\n        setLoading(false);\n      }\n    }\n    \n    if (id) loadData();\n    \n    // Cleanup function\n    return () => {\n      if (socket) {\n        socket.emit('leave-honeypot', id);\n      }\n    };\n  }, [id, socket]);\n\n  // Control functions\n  const startHoneypotAction = async () => {\n    setControlling(true);\n    try {\n      await startHoneypot(id);\n      toast.success('Honeypot started successfully');\n      \n      // Update local state optimistically\n      setHoneypot(prev => ({ ...prev, status: 'starting' }));\n      \n    } catch (error) {\n      toast.error('Failed to start honeypot: ' + error.message);\n    } finally {\n      setControlling(false);\n    }\n  };\n\n  const stopHoneypotAction = async () => {\n    setControlling(true);\n    try {\n      await stopHoneypot(id);\n      toast.success('Honeypot stopped successfully');\n      \n      // Update local state optimistically\n      setHoneypot(prev => ({ ...prev, status: 'stopping' }));\n      \n    } catch (error) {\n      toast.error('Failed to stop honeypot: ' + error.message);\n    } finally {\n      setControlling(false);\n    }\n  };\n\n  const restartHoneypot = async () => {\n    setControlling(true);\n    try {\n      await stopHoneypotAction();\n      setTimeout(() => startHoneypotAction(), 2000);\n      toast.success('Honeypot restart initiated');\n    } catch (error) {\n      toast.error('Failed to restart honeypot: ' + error.message);\n    } finally {\n      setControlling(false);\n    }\n  };\n\n  if (loading) return <div className={styles.loading}>Loading honeypot control center...</div>;\n  if (error) return <div className={styles.error}>Error: {error}</div>;\n  if (!updatedHoneypot) return <div className={styles.error}>Honeypot not found.</div>;\n\n  // Chart configurations\n  const hourlyChartData = {\n    labels: analytics.hourlyActivity.map(h => `${h.hour}:00`),\n    datasets: [{\n      label: 'Attacks per Hour',\n      data: analytics.hourlyActivity.map(h => h.count),\n      borderColor: '#06b6d4',\n      backgroundColor: 'rgba(6, 182, 212, 0.1)',\n      tension: 0.4,\n      fill: true\n    }]\n  };\n\n  const eventTypeChartData = {\n    labels: Object.keys(analytics.eventTypes).map(type => \n      type.replace('_', ' ').toUpperCase()\n    ),\n    datasets: [{\n      data: Object.values(analytics.eventTypes),\n      backgroundColor: [\n        '#06b6d4', '#10b981', '#f59e0b', '#ef4444', \n        '#8b5cf6', '#ec4899', '#84cc16', '#f97316'\n      ],\n      borderColor: '#1e293b',\n      borderWidth: 2,\n    }]\n  };\n\n  const severityChartData = {\n    labels: ['Low', 'Medium', 'High', 'Critical'],\n    datasets: [{\n      data: [\n        analytics.severityCount.low,\n        analytics.severityCount.medium,\n        analytics.severityCount.high,\n        analytics.severityCount.critical\n      ],\n      backgroundColor: ['#22c55e', '#f59e0b', '#f97316', '#ef4444'],\n      borderColor: '#1e293b',\n      borderWidth: 2,\n    }]\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          color: '#cbd5e1',\n          font: { size: 12 }\n        }\n      }\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      {/* Header */}\n      <div className={styles.header}>\n        <div className={styles.headerLeft}>\n          <Link to=\"/\" className={styles.backButton}>← Back to Dashboard</Link>\n          <div className={styles.honeypotTitle}>\n            <h1>{updatedHoneypot.name}</h1>\n            <span className={styles.protocol}>{updatedHoneypot.protocol.toUpperCase()}</span>\n          </div>\n        </div>\n        <div className={styles.headerRight}>\n          <div className={styles.connectionStatus}>\n            <span className={`${styles.statusDot} ${isConnected ? styles.connected : styles.disconnected}`}></span>\n            <span>{isConnected ? 'Real-time Connected' : 'Disconnected'}</span>\n          </div>\n          <div className={`${styles.statusBadge} ${styles[updatedHoneypot.status]}`}>\n            {updatedHoneypot.status.toUpperCase()}\n          </div>\n        </div>\n      </div>\n\n      {/* Control Panel */}\n      <div className={styles.controlPanel}>\n        <div className={styles.controlButtons}>\n          <button \n            onClick={startHoneypotAction}\n            disabled={controlling || updatedHoneypot.status === 'running'}\n            className={`${styles.controlBtn} ${styles.startBtn}`}\n          >\n            {controlling ? 'Starting...' : 'Start'}\n          </button>\n          <button \n            onClick={stopHoneypotAction}\n            disabled={controlling || updatedHoneypot.status === 'stopped'}\n            className={`${styles.controlBtn} ${styles.stopBtn}`}\n          >\n            {controlling ? 'Stopping...' : 'Stop'}\n          </button>\n          <button \n            onClick={restartHoneypot}\n            disabled={controlling}\n            className={`${styles.controlBtn} ${styles.restartBtn}`}\n          >\n            {controlling ? 'Restarting...' : 'Restart'}\n          </button>\n        </div>\n        \n        <div className={styles.quickStats}>\n          <div className={styles.statItem}>\n            <span className={styles.statLabel}>Port</span>\n            <span className={styles.statValue}>{updatedHoneypot.port}</span>\n          </div>\n          <div className={styles.statItem}>\n            <span className={styles.statLabel}>Type</span>\n            <span className={styles.statValue}>{updatedHoneypot.type}</span>\n          </div>\n          <div className={styles.statItem}>\n            <span className={styles.statLabel}>Total Events</span>\n            <span className={styles.statValue}>{allEvents.length}</span>\n          </div>\n          <div className={styles.statItem}>\n            <span className={styles.statLabel}>24h Activity</span>\n            <span className={styles.statValue}>{analytics.last24Hours}</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Security Alerts */}\n      {securityAlerts.length > 0 && (\n        <div className={styles.alertsSection}>\n          <h3>🚨 Active Security Alerts</h3>\n          <div className={styles.alertsList}>\n            {securityAlerts.slice(0, 3).map((alert, index) => (\n              <div key={index} className={styles.alertItem}>\n                <span className={styles.alertType}>{alert.type}</span>\n                <span className={styles.alertMessage}>{alert.message}</span>\n                <span className={styles.alertTime}>\n                  {new Date(alert.timestamp).toLocaleString()}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Tabs */}\n      <div className={styles.tabs}>\n        <button \n          className={`${styles.tab} ${activeTab === 'overview' ? styles.active : ''}`}\n          onClick={() => setActiveTab('overview')}\n        >\n          Overview\n        </button>\n        <button \n          className={`${styles.tab} ${activeTab === 'events' ? styles.active : ''}`}\n          onClick={() => setActiveTab('events')}\n        >\n          Events ({allEvents.length})\n        </button>\n        <button \n          className={`${styles.tab} ${activeTab === 'analytics' ? styles.active : ''}`}\n          onClick={() => setActiveTab('analytics')}\n        >\n          Analytics\n        </button>\n        <button \n          className={`${styles.tab} ${activeTab === 'threats' ? styles.active : ''}`}\n          onClick={() => setActiveTab('threats')}\n        >\n          Threat Intelligence\n        </button>\n      </div>\n\n      {/* Tab Content */}\n      <div className={styles.tabContent}>\n        {activeTab === 'overview' && (\n          <div className={styles.overviewContent}>\n            <div className={styles.overviewGrid}>\n              <div className={styles.overviewCard}>\n                <h3>Recent Activity</h3>\n                <div className={styles.activityFeed}>\n                  {allEvents.slice(0, 5).map(event => (\n                    <div key={event._id} className={styles.activityItem}>\n                      <div className={styles.activityIcon}>\n                        {event.event_type === 'session' ? '🔐' : '⚠️'}\n                      </div>\n                      <div className={styles.activityContent}>\n                        <div className={styles.activityHeader}>\n                          <span className={styles.activityIP}>{event.source_ip}</span>\n                          <span className={styles.activityTime}>\n                            {new Date(event.timestamp).toLocaleString()}\n                          </span>\n                        </div>\n                        <div className={styles.activityDetails}>\n                          {event.event_type.replace('_', ' ').toUpperCase()}\n                          {event.event_type === 'session' && ` - ${event.commands?.length || 0} commands`}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              \n              <div className={styles.overviewCard}>\n                <h3>System Health</h3>\n                <div className={styles.healthMetrics}>\n                  <div className={styles.healthItem}>\n                    <span className={styles.healthLabel}>Uptime</span>\n                    <span className={styles.healthValue}>\n                      {updatedHoneypot.status === 'running' ? '🟢 Active' : '🔴 Stopped'}\n                    </span>\n                  </div>\n                  <div className={styles.healthItem}>\n                    <span className={styles.healthLabel}>Last Event</span>\n                    <span className={styles.healthValue}>\n                      {allEvents.length > 0 \n                        ? new Date(allEvents[0].timestamp).toLocaleString()\n                        : 'No events yet'\n                      }\n                    </span>\n                  </div>\n                  <div className={styles.healthItem}>\n                    <span className={styles.healthLabel}>Threat Level</span>\n                    <span className={styles.healthValue}>\n                      {analytics.last24Hours > 50 ? '🔴 High' : \n                       analytics.last24Hours > 20 ? '🟡 Medium' : \n                       analytics.last24Hours > 0 ? '🟢 Low' : '⚪ Quiet'}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'events' && (\n          <div className={styles.eventsContent}>\n            <div className={styles.eventsHeader}>\n              <h3>Security Events</h3>\n              {realTimeEvents.length > 0 && (\n                <span className={styles.liveIndicator}>\n                  🔴 {realTimeEvents.length} Live Events\n                </span>\n              )}\n            </div>\n            <div className={styles.eventsList}>\n              {allEvents.slice(0, 20).map(event => (\n              <Link\n                  key={event._id} \n                to={`/sessions/${event._id}`}\n                  className={styles.eventItem}\n              >\n                  <div className={styles.eventHeader}>\n                    <span className={styles.eventIP}>{event.source_ip}</span>\n                    <span className={styles.eventTime}>\n                    {new Date(event.timestamp).toLocaleString()}\n                  </span>\n                    <span className={`${styles.eventBadge} ${styles[event.severity]}`}>\n                    {event.event_type.replace('_', ' ').toUpperCase()}\n                  </span>\n                </div>\n                  <div className={styles.eventDetails}>\n                  {event.event_type === 'session' ? (\n                    <>\n                      <span>Commands: {event.commands?.length || 0}</span>\n                        <span>Duration: {Math.round(event.duration || 0)}s</span>\n                    </>\n                  ) : (\n                    <>\n                      <span>Severity: {event.severity}</span>\n                      {event.data?.username && <span>User: {event.data.username}</span>}\n                      {event.data?.filename && <span>File: {event.data.filename}</span>}\n                    </>\n                  )}\n                  </div>\n                </Link>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'analytics' && (\n          <div className={styles.analyticsContent}>\n            <div className={styles.chartsGrid}>\n              <div className={styles.chartCard}>\n                <h3>Attack Patterns (24h)</h3>\n                <div className={styles.chartContainer}>\n                  <Line data={hourlyChartData} options={chartOptions} />\n                </div>\n              </div>\n              \n              <div className={styles.chartCard}>\n                <h3>Event Types</h3>\n                <div className={styles.chartContainer}>\n                  <Pie data={eventTypeChartData} options={chartOptions} />\n                </div>\n              </div>\n              \n              <div className={styles.chartCard}>\n                <h3>Severity Distribution</h3>\n                <div className={styles.chartContainer}>\n                  <Pie data={severityChartData} options={chartOptions} />\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'threats' && (\n          <div className={styles.threatsContent}>\n            <div className={styles.threatsGrid}>\n              <div className={styles.threatCard}>\n                <h3>Top Threat Sources</h3>\n                <div className={styles.threatList}>\n                  {analytics.topIPs.map(([ip, count], index) => (\n                    <div key={ip} className={styles.threatItem}>\n                      <div className={styles.threatRank}>#{index + 1}</div>\n                      <div className={styles.threatInfo}>\n                        <span className={styles.threatIP}>{ip}</span>\n                        <span className={styles.threatCount}>{count} attacks</span>\n                      </div>\n                      <div className={styles.threatSeverity}>\n                        {count >= 50 ? '🔴' : count >= 20 ? '🟡' : '🟢'}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              \n              <div className={styles.threatCard}>\n                <h3>Geographic Distribution</h3>\n                <div className={styles.geoList}>\n                  {Object.entries(analytics.countries)\n                    .sort(([,a], [,b]) => b - a)\n                    .slice(0, 8)\n                    .map(([country, count]) => (\n                      <div key={country} className={styles.geoItem}>\n                        <span className={styles.geoCountry}>{country}</span>\n                        <span className={styles.geoCount}>{count} attacks</span>\n                      </div>\n            ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}