{"ast":null,"code":"var _jsxFileName = \"/home/demon/distributed-architecture/central-infrastructure/frontend/src/components/NmapDetectionWidget.js\";\nimport React from 'react';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport './NmapDetectionWidget.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NmapDetectionWidget = ({\n  threatStats,\n  combinedEvents = [],\n  loading = false\n}) => {\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nmap-widget loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Nmap Detection Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading Nmap data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Filter Nmap-related events\n  const nmapEvents = combinedEvents.filter(event => {\n    var _event$event_type, _event$user_agent;\n    return ((_event$event_type = event.event_type) === null || _event$event_type === void 0 ? void 0 : _event$event_type.includes('nmap')) || event.scan_type || ((_event$user_agent = event.user_agent) === null || _event$user_agent === void 0 ? void 0 : _event$user_agent.toLowerCase().includes('nmap'));\n  });\n  if (nmapEvents.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nmap-widget empty\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Nmap Detection Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"empty-icon\",\n          children: \"\\uD83D\\uDD0D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No Nmap scans detected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Analyze scan types\n  const scanTypes = {};\n  const scanMethods = {};\n  const timeDistribution = {};\n  const sourceIPs = {};\n  nmapEvents.forEach(event => {\n    // Scan types\n    const scanType = event.scan_type || 'unknown';\n    scanTypes[scanType] = (scanTypes[scanType] || 0) + 1;\n\n    // Scan methods (from event_type)\n    const method = event.event_type || 'unknown';\n    scanMethods[method] = (scanMethods[method] || 0) + 1;\n\n    // Time distribution (last 24 hours)\n    const eventTime = new Date(event.timestamp);\n    const hour = eventTime.getHours();\n    timeDistribution[hour] = (timeDistribution[hour] || 0) + 1;\n\n    // Source IPs\n    if (event.source_ip) {\n      sourceIPs[event.source_ip] = (sourceIPs[event.source_ip] || 0) + 1;\n    }\n  });\n\n  // Prepare scan types chart data\n  const scanTypesData = {\n    labels: Object.keys(scanTypes).map(type => type.replace(/[-_]/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())),\n    datasets: [{\n      data: Object.values(scanTypes),\n      backgroundColor: ['#dc3545',\n      // Red\n      '#ffc107',\n      // Yellow\n      '#28a745',\n      // Green\n      '#17a2b8',\n      // Cyan\n      '#6f42c1',\n      // Purple\n      '#fd7e14' // Orange\n      ],\n      borderWidth: 2,\n      borderColor: '#fff'\n    }]\n  };\n\n  // Prepare time distribution chart data\n  const hours = Array.from({\n    length: 24\n  }, (_, i) => i);\n  const timeData = {\n    labels: hours.map(h => `${h}:00`),\n    datasets: [{\n      label: 'Nmap Scans',\n      data: hours.map(h => timeDistribution[h] || 0),\n      backgroundColor: 'rgba(220, 53, 69, 0.8)',\n      borderColor: '#dc3545',\n      borderWidth: 1\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      }\n    },\n    scales: {\n      x: {\n        ticks: {\n          color: '#64748b',\n          maxTicksLimit: 12\n        },\n        grid: {\n          color: '#334155'\n        }\n      },\n      y: {\n        ticks: {\n          color: '#64748b'\n        },\n        grid: {\n          color: '#334155'\n        }\n      }\n    }\n  };\n  const doughnutOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          color: '#cbd5e1',\n          usePointStyle: true,\n          pointStyle: 'circle',\n          padding: 10,\n          font: {\n            size: 11\n          }\n        }\n      }\n    }\n  };\n\n  // Calculate statistics\n  const totalScans = nmapEvents.length;\n  const uniqueIPs = Object.keys(sourceIPs).length;\n  const avgScansPerIP = (totalScans / uniqueIPs).toFixed(1);\n  const topScanner = Object.entries(sourceIPs).sort(([, a], [, b]) => b - a)[0];\n\n  // Recent activity (last hour)\n  const oneHourAgo = new Date(Date.now() - 60 * 60 * 1000);\n  const recentScans = nmapEvents.filter(event => new Date(event.timestamp) > oneHourAgo).length;\n\n  // Threat level assessment\n  const getThreatLevel = () => {\n    if (totalScans > 50) return {\n      level: 'high',\n      color: '#dc3545',\n      text: 'High'\n    };\n    if (totalScans > 20) return {\n      level: 'medium',\n      color: '#ffc107',\n      text: 'Medium'\n    };\n    if (totalScans > 5) return {\n      level: 'low',\n      color: '#28a745',\n      text: 'Low'\n    };\n    return {\n      level: 'minimal',\n      color: '#6c757d',\n      text: 'Minimal'\n    };\n  };\n  const threatLevel = getThreatLevel();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nmap-widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widget-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Nmap Detection Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `threat-level ${threatLevel.level}`,\n          style: {\n            color: threatLevel.color\n          },\n          children: [threatLevel.text, \" Activity\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"total-scans\",\n          children: [totalScans, \" scans\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widget-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Scan Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card primary\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: totalScans\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Total Scans\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: uniqueIPs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Unique IPs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: avgScansPerIP\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Avg/IP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: recentScans\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Last Hour\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Scan Types Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container small\",\n            children: /*#__PURE__*/_jsxDEV(Doughnut, {\n              data: scanTypesData,\n              options: doughnutOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"24-Hour Activity Timeline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: timeData,\n              options: chartOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Top Scanner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), topScanner ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scanner-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"scanner-ip\",\n              children: topScanner[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"scanner-count\",\n              children: [topScanner[1], \" scans\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"no-data\",\n            children: \"No data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Detection Signatures\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signatures-list\",\n            children: Object.entries(scanTypes).slice(0, 3).map(([type, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"signature-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"signature-name\",\n                children: type.replace(/[-_]/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"signature-count\",\n                children: count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this)]\n            }, type, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Threat Indicators\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"indicators-list\",\n            children: getThreatIndicators(nmapEvents, threatLevel.level).map((indicator, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `indicator-item ${indicator.severity}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"indicator-icon\",\n                children: indicator.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"indicator-text\",\n                children: indicator.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n\n// Generate threat indicators based on Nmap activity\n_c = NmapDetectionWidget;\nconst getThreatIndicators = (nmapEvents, threatLevel) => {\n  const indicators = [];\n\n  // Aggressive scans\n  const aggressiveScans = nmapEvents.filter(e => {\n    var _e$scan_type;\n    return e.event_type === 'nmap_aggressive' || ((_e$scan_type = e.scan_type) === null || _e$scan_type === void 0 ? void 0 : _e$scan_type.toLowerCase().includes('aggressive'));\n  }).length;\n  if (aggressiveScans > 0) {\n    indicators.push({\n      severity: 'high',\n      icon: '⚠️',\n      text: `${aggressiveScans} aggressive scan(s) detected`\n    });\n  }\n\n  // Reconnaissance patterns\n  const reconScans = nmapEvents.filter(e => {\n    var _e$scan_type2;\n    return e.event_type === 'nmap_recon' || ((_e$scan_type2 = e.scan_type) === null || _e$scan_type2 === void 0 ? void 0 : _e$scan_type2.toLowerCase().includes('recon'));\n  }).length;\n  if (reconScans > 10) {\n    indicators.push({\n      severity: 'medium',\n      icon: '🔍',\n      text: `High reconnaissance activity (${reconScans} scans)`\n    });\n  }\n\n  // Repeated targeting\n  const uniqueIPs = [...new Set(nmapEvents.map(e => e.source_ip))];\n  if (nmapEvents.length / uniqueIPs.length > 5) {\n    indicators.push({\n      severity: 'medium',\n      icon: '🎯',\n      text: 'Repeated targeting from same sources'\n    });\n  }\n\n  // Recent activity spike\n  const lastHour = nmapEvents.filter(e => new Date(e.timestamp) > new Date(Date.now() - 60 * 60 * 1000)).length;\n  if (lastHour > 5) {\n    indicators.push({\n      severity: 'high',\n      icon: '📈',\n      text: `Activity spike: ${lastHour} scans in last hour`\n    });\n  }\n\n  // Service enumeration\n  const serviceScans = nmapEvents.filter(e => {\n    var _e$scan_type3, _e$scan_type4;\n    return ((_e$scan_type3 = e.scan_type) === null || _e$scan_type3 === void 0 ? void 0 : _e$scan_type3.toLowerCase().includes('service')) || ((_e$scan_type4 = e.scan_type) === null || _e$scan_type4 === void 0 ? void 0 : _e$scan_type4.toLowerCase().includes('version'));\n  }).length;\n  if (serviceScans > 0) {\n    indicators.push({\n      severity: 'medium',\n      icon: '🔧',\n      text: `${serviceScans} service enumeration attempt(s)`\n    });\n  }\n\n  // Default indicator if no specific threats\n  if (indicators.length === 0) {\n    indicators.push({\n      severity: 'info',\n      icon: 'ℹ️',\n      text: 'Basic reconnaissance activity detected'\n    });\n  }\n  return indicators.slice(0, 3); // Limit to 3 indicators\n};\nexport default NmapDetectionWidget;\nvar _c;\n$RefreshReg$(_c, \"NmapDetectionWidget\");","map":{"version":3,"names":["React","Bar","Doughnut","jsxDEV","_jsxDEV","NmapDetectionWidget","threatStats","combinedEvents","loading","className","children","fileName","_jsxFileName","lineNumber","columnNumber","nmapEvents","filter","event","_event$event_type","_event$user_agent","event_type","includes","scan_type","user_agent","toLowerCase","length","scanTypes","scanMethods","timeDistribution","sourceIPs","forEach","scanType","method","eventTime","Date","timestamp","hour","getHours","source_ip","scanTypesData","labels","Object","keys","map","type","replace","l","toUpperCase","datasets","data","values","backgroundColor","borderWidth","borderColor","hours","Array","from","_","i","timeData","h","label","chartOptions","responsive","maintainAspectRatio","plugins","legend","display","scales","x","ticks","color","maxTicksLimit","grid","y","doughnutOptions","position","usePointStyle","pointStyle","padding","font","size","totalScans","uniqueIPs","avgScansPerIP","toFixed","topScanner","entries","sort","a","b","oneHourAgo","now","recentScans","getThreatLevel","level","text","threatLevel","style","options","slice","count","getThreatIndicators","indicator","index","severity","icon","_c","indicators","aggressiveScans","e","_e$scan_type","push","reconScans","_e$scan_type2","Set","lastHour","serviceScans","_e$scan_type3","_e$scan_type4","$RefreshReg$"],"sources":["/home/demon/distributed-architecture/central-infrastructure/frontend/src/components/NmapDetectionWidget.js"],"sourcesContent":["import React from 'react';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport './NmapDetectionWidget.css';\n\nconst NmapDetectionWidget = ({ threatStats, combinedEvents = [], loading = false }) => {\n  if (loading) {\n    return (\n      <div className=\"nmap-widget loading\">\n        <div className=\"widget-header\">\n          <h3>Nmap Detection Analysis</h3>\n        </div>\n        <div className=\"loading-content\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading Nmap data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Filter Nmap-related events\n  const nmapEvents = combinedEvents.filter(event => \n    event.event_type?.includes('nmap') || \n    event.scan_type ||\n    event.user_agent?.toLowerCase().includes('nmap')\n  );\n\n  if (nmapEvents.length === 0) {\n    return (\n      <div className=\"nmap-widget empty\">\n        <div className=\"widget-header\">\n          <h3>Nmap Detection Analysis</h3>\n        </div>\n        <div className=\"empty-state\">\n          <span className=\"empty-icon\">🔍</span>\n          <p>No Nmap scans detected</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Analyze scan types\n  const scanTypes = {};\n  const scanMethods = {};\n  const timeDistribution = {};\n  const sourceIPs = {};\n\n  nmapEvents.forEach(event => {\n    // Scan types\n    const scanType = event.scan_type || 'unknown';\n    scanTypes[scanType] = (scanTypes[scanType] || 0) + 1;\n\n    // Scan methods (from event_type)\n    const method = event.event_type || 'unknown';\n    scanMethods[method] = (scanMethods[method] || 0) + 1;\n\n    // Time distribution (last 24 hours)\n    const eventTime = new Date(event.timestamp);\n    const hour = eventTime.getHours();\n    timeDistribution[hour] = (timeDistribution[hour] || 0) + 1;\n\n    // Source IPs\n    if (event.source_ip) {\n      sourceIPs[event.source_ip] = (sourceIPs[event.source_ip] || 0) + 1;\n    }\n  });\n\n  // Prepare scan types chart data\n  const scanTypesData = {\n    labels: Object.keys(scanTypes).map(type => \n      type.replace(/[-_]/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())\n    ),\n    datasets: [{\n      data: Object.values(scanTypes),\n      backgroundColor: [\n        '#dc3545', // Red\n        '#ffc107', // Yellow\n        '#28a745', // Green\n        '#17a2b8', // Cyan\n        '#6f42c1', // Purple\n        '#fd7e14'  // Orange\n      ],\n      borderWidth: 2,\n      borderColor: '#fff'\n    }]\n  };\n\n  // Prepare time distribution chart data\n  const hours = Array.from({length: 24}, (_, i) => i);\n  const timeData = {\n    labels: hours.map(h => `${h}:00`),\n    datasets: [{\n      label: 'Nmap Scans',\n      data: hours.map(h => timeDistribution[h] || 0),\n      backgroundColor: 'rgba(220, 53, 69, 0.8)',\n      borderColor: '#dc3545',\n      borderWidth: 1\n    }]\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      }\n    },\n    scales: {\n      x: {\n        ticks: { \n          color: '#64748b',\n          maxTicksLimit: 12\n        },\n        grid: { color: '#334155' }\n      },\n      y: {\n        ticks: { color: '#64748b' },\n        grid: { color: '#334155' }\n      }\n    }\n  };\n\n  const doughnutOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          color: '#cbd5e1',\n          usePointStyle: true,\n          pointStyle: 'circle',\n          padding: 10,\n          font: { size: 11 }\n        }\n      }\n    }\n  };\n\n  // Calculate statistics\n  const totalScans = nmapEvents.length;\n  const uniqueIPs = Object.keys(sourceIPs).length;\n  const avgScansPerIP = (totalScans / uniqueIPs).toFixed(1);\n  const topScanner = Object.entries(sourceIPs)\n    .sort(([,a], [,b]) => b - a)[0];\n\n  // Recent activity (last hour)\n  const oneHourAgo = new Date(Date.now() - 60 * 60 * 1000);\n  const recentScans = nmapEvents.filter(event => \n    new Date(event.timestamp) > oneHourAgo\n  ).length;\n\n  // Threat level assessment\n  const getThreatLevel = () => {\n    if (totalScans > 50) return { level: 'high', color: '#dc3545', text: 'High' };\n    if (totalScans > 20) return { level: 'medium', color: '#ffc107', text: 'Medium' };\n    if (totalScans > 5) return { level: 'low', color: '#28a745', text: 'Low' };\n    return { level: 'minimal', color: '#6c757d', text: 'Minimal' };\n  };\n\n  const threatLevel = getThreatLevel();\n\n  return (\n    <div className=\"nmap-widget\">\n      <div className=\"widget-header\">\n        <h3>Nmap Detection Analysis</h3>\n        <div className=\"widget-stats\">\n          <span className={`threat-level ${threatLevel.level}`} style={{color: threatLevel.color}}>\n            {threatLevel.text} Activity\n          </span>\n          <span className=\"total-scans\">{totalScans} scans</span>\n        </div>\n      </div>\n\n      <div className=\"widget-content\">\n        {/* Top Section: Summary Statistics */}\n        <div className=\"summary-section\">\n          <h4>Scan Overview</h4>\n          <div className=\"summary-stats\">\n            <div className=\"stat-card primary\">\n              <div className=\"stat-value\">{totalScans}</div>\n              <div className=\"stat-label\">Total Scans</div>\n            </div>\n            <div className=\"stat-card\">\n              <div className=\"stat-value\">{uniqueIPs}</div>\n              <div className=\"stat-label\">Unique IPs</div>\n            </div>\n            <div className=\"stat-card\">\n              <div className=\"stat-value\">{avgScansPerIP}</div>\n              <div className=\"stat-label\">Avg/IP</div>\n            </div>\n            <div className=\"stat-card\">\n              <div className=\"stat-value\">{recentScans}</div>\n              <div className=\"stat-label\">Last Hour</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Middle Section: Charts */}\n        <div className=\"charts-section\">\n          <div className=\"chart-item\">\n            <h4>Scan Types Distribution</h4>\n            <div className=\"chart-container small\">\n              <Doughnut data={scanTypesData} options={doughnutOptions} />\n            </div>\n          </div>\n\n          <div className=\"chart-item\">\n            <h4>24-Hour Activity Timeline</h4>\n            <div className=\"chart-container\">\n              <Bar data={timeData} options={chartOptions} />\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom Section: Details and Insights */}\n        <div className=\"details-section\">\n          <div className=\"detail-item\">\n            <h4>Top Scanner</h4>\n            {topScanner ? (\n              <div className=\"scanner-info\">\n                <span className=\"scanner-ip\">{topScanner[0]}</span>\n                <span className=\"scanner-count\">{topScanner[1]} scans</span>\n              </div>\n            ) : (\n              <span className=\"no-data\">No data</span>\n            )}\n          </div>\n\n          <div className=\"detail-item\">\n            <h4>Detection Signatures</h4>\n            <div className=\"signatures-list\">\n              {Object.entries(scanTypes).slice(0, 3).map(([type, count]) => (\n                <div key={type} className=\"signature-item\">\n                  <span className=\"signature-name\">\n                    {type.replace(/[-_]/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\n                  </span>\n                  <span className=\"signature-count\">{count}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"detail-item\">\n            <h4>Threat Indicators</h4>\n            <div className=\"indicators-list\">\n              {getThreatIndicators(nmapEvents, threatLevel.level).map((indicator, index) => (\n                <div key={index} className={`indicator-item ${indicator.severity}`}>\n                  <span className=\"indicator-icon\">{indicator.icon}</span>\n                  <span className=\"indicator-text\">{indicator.text}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Generate threat indicators based on Nmap activity\nconst getThreatIndicators = (nmapEvents, threatLevel) => {\n  const indicators = [];\n  \n  // Aggressive scans\n  const aggressiveScans = nmapEvents.filter(e => \n    e.event_type === 'nmap_aggressive' || \n    e.scan_type?.toLowerCase().includes('aggressive')\n  ).length;\n  \n  if (aggressiveScans > 0) {\n    indicators.push({\n      severity: 'high',\n      icon: '⚠️',\n      text: `${aggressiveScans} aggressive scan(s) detected`\n    });\n  }\n\n  // Reconnaissance patterns\n  const reconScans = nmapEvents.filter(e => \n    e.event_type === 'nmap_recon' || \n    e.scan_type?.toLowerCase().includes('recon')\n  ).length;\n  \n  if (reconScans > 10) {\n    indicators.push({\n      severity: 'medium',\n      icon: '🔍',\n      text: `High reconnaissance activity (${reconScans} scans)`\n    });\n  }\n\n  // Repeated targeting\n  const uniqueIPs = [...new Set(nmapEvents.map(e => e.source_ip))];\n  if (nmapEvents.length / uniqueIPs.length > 5) {\n    indicators.push({\n      severity: 'medium',\n      icon: '🎯',\n      text: 'Repeated targeting from same sources'\n    });\n  }\n\n  // Recent activity spike\n  const lastHour = nmapEvents.filter(e => \n    new Date(e.timestamp) > new Date(Date.now() - 60 * 60 * 1000)\n  ).length;\n  \n  if (lastHour > 5) {\n    indicators.push({\n      severity: 'high',\n      icon: '📈',\n      text: `Activity spike: ${lastHour} scans in last hour`\n    });\n  }\n\n  // Service enumeration\n  const serviceScans = nmapEvents.filter(e => \n    e.scan_type?.toLowerCase().includes('service') ||\n    e.scan_type?.toLowerCase().includes('version')\n  ).length;\n  \n  if (serviceScans > 0) {\n    indicators.push({\n      severity: 'medium',\n      icon: '🔧',\n      text: `${serviceScans} service enumeration attempt(s)`\n    });\n  }\n\n  // Default indicator if no specific threats\n  if (indicators.length === 0) {\n    indicators.push({\n      severity: 'info',\n      icon: 'ℹ️',\n      text: 'Basic reconnaissance activity detected'\n    });\n  }\n\n  return indicators.slice(0, 3); // Limit to 3 indicators\n};\n\nexport default NmapDetectionWidget;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}