{"ast":null,"code":"import React,{useState}from'react';import'./AttackTimeline.css';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const AttackTimeline=_ref=>{let{attackerIP,attackPath,onStepClick}=_ref;const[expandedSteps,setExpandedSteps]=useState(new Set());const toggleStep=stepId=>{const newExpanded=new Set(expandedSteps);if(newExpanded.has(stepId)){newExpanded.delete(stepId);}else{newExpanded.add(stepId);}setExpandedSteps(newExpanded);};const getStepIcon=attackType=>{switch(attackType){case'port_scan':return'🎯';case'nmap_detection':return'👁️';case'ping_sweep':return'📡';case'service_access':return'🛡️';case'syn_scan':return'⚡';case'udp_scan':return'⚡';case'ssh_attempt':return'🔐';case'ftp_attempt':return'📁';case'http_attempt':return'🌐';case'telnet_attempt':return'📞';case's7_attack':return'🏭';case'dcs_attack':return'⚙️';default:return'⚠️';}};const getStepColor=platform=>{switch(platform){case'Network':return'network';case'IT':return'it';case'OT':return'ot';default:return'unknown';}};const formatTimestamp=timestamp=>{if(!timestamp)return'Unknown';try{return new Date(timestamp).toLocaleString();}catch(error){return'Invalid date';}};const getStepDetails=attack=>{const details=[];if(attack.alertType==='port_scan'&&attack.details){var _attack$details$ports;details.push(`Ports: ${((_attack$details$ports=attack.details.ports)===null||_attack$details$ports===void 0?void 0:_attack$details$ports.join(', '))||'Unknown'}`);details.push(`Scan Type: ${attack.details.scanType||'Unknown'}`);details.push(`Duration: ${attack.details.duration||'Unknown'}`);}if(attack.alertType==='nmap_detection'&&attack.details){details.push(`Nmap Version: ${attack.details.nmapVersion||'Unknown'}`);details.push(`Scan Flags: ${attack.details.scanFlags||'Unknown'}`);details.push(`Target Ports: ${attack.details.targetPorts||'Unknown'}`);}if(attack.alertType==='service_access'&&attack.details){details.push(`Service: ${attack.details.service||'Unknown'}`);details.push(`Port: ${attack.details.port||'Unknown'}`);details.push(`Attempts: ${attack.details.attempts||'Unknown'}`);if(attack.details.credentials){details.push(`Credentials: ${attack.details.credentials.join(', ')}`);}}if(attack.type==='ssh_attempt'){var _attack$commands;details.push(`Username: ${attack.username||'Unknown'}`);details.push(`Password: ${attack.password||'Unknown'}`);details.push(`Commands: ${((_attack$commands=attack.commands)===null||_attack$commands===void 0?void 0:_attack$commands.length)||0} executed`);}if(attack.type==='ftp_attempt'){var _attack$filesAccessed;details.push(`Username: ${attack.username||'Unknown'}`);details.push(`Password: ${attack.password||'Unknown'}`);details.push(`Files Accessed: ${((_attack$filesAccessed=attack.filesAccessed)===null||_attack$filesAccessed===void 0?void 0:_attack$filesAccessed.length)||0}`);}return details;};// Flatten all attacks into a single timeline\nconst timelineSteps=[];attackPath.forEach((path,pathIndex)=>{path.attacks.forEach((attack,attackIndex)=>{timelineSteps.push({id:`${pathIndex}-${attackIndex}`,platform:path.platform,attack:attack,icon:path.icon,color:path.color,timestamp:attack.timestamp,attackType:attack.alertType||attack.type});});});// Sort by timestamp\ntimelineSteps.sort((a,b)=>new Date(a.timestamp)-new Date(b.timestamp));return/*#__PURE__*/_jsxs(\"div\",{className:\"attack-timeline\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"timeline-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Attack Timeline: \",attackerIP]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Complete attack path with \",timelineSteps.length,\" steps across \",attackPath.length,\" platforms\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"timeline-container\",children:timelineSteps.map((step,index)=>{var _step$attackType;return/*#__PURE__*/_jsxs(\"div\",{className:`timeline-step ${step.color}`,children:[index>0&&/*#__PURE__*/_jsx(\"div\",{className:\"timeline-connector\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"step-marker\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"step-icon\",children:getStepIcon(step.attackType)}),/*#__PURE__*/_jsx(\"div\",{className:\"step-number\",children:index+1})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"step-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"step-header\",onClick:()=>toggleStep(step.id),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"step-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"step-platform\",children:step.platform}),/*#__PURE__*/_jsx(\"span\",{className:\"step-type\",children:(_step$attackType=step.attackType)===null||_step$attackType===void 0?void 0:_step$attackType.replace('_',' ')}),/*#__PURE__*/_jsx(\"span\",{className:\"step-time\",children:formatTimestamp(step.timestamp)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"step-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary btn-sm\",onClick:e=>{e.stopPropagation();onStepClick(step);},children:\"\\uD83D\\uDD0D View Details\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary btn-sm\",children:expandedSteps.has(step.id)?'▼':'▶'})]})]}),expandedSteps.has(step.id)&&/*#__PURE__*/_jsxs(\"div\",{className:\"step-details\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"details-grid\",children:getStepDetails(step.attack).map((detail,detailIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"detail-label\",children:[detail.split(':')[0],\":\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"detail-value\",children:detail.split(':').slice(1).join(':')})]},detailIndex))}),/*#__PURE__*/_jsxs(\"div\",{className:\"step-actions-expanded\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:()=>onStepClick(step),children:\"\\uD83D\\uDCCA Full Analysis\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:()=>onStepClick({...step,view:'logs'}),children:\"\\uD83D\\uDCCB View Logs\"})]})]})]})]},step.id);})}),/*#__PURE__*/_jsx(\"div\",{className:\"timeline-summary\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Total Steps:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:timelineSteps.length})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Platforms:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:attackPath.length})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Duration:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:timelineSteps.length>1?`${Math.round((new Date(timelineSteps[timelineSteps.length-1].timestamp)-new Date(timelineSteps[0].timestamp))/60000)}m`:'N/A'})]})]})})]});};export default AttackTimeline;","map":{"version":3,"names":["React","useState","jsxs","_jsxs","jsx","_jsx","AttackTimeline","_ref","attackerIP","attackPath","onStepClick","expandedSteps","setExpandedSteps","Set","toggleStep","stepId","newExpanded","has","delete","add","getStepIcon","attackType","getStepColor","platform","formatTimestamp","timestamp","Date","toLocaleString","error","getStepDetails","attack","details","alertType","_attack$details$ports","push","ports","join","scanType","duration","nmapVersion","scanFlags","targetPorts","service","port","attempts","credentials","type","_attack$commands","username","password","commands","length","_attack$filesAccessed","filesAccessed","timelineSteps","forEach","path","pathIndex","attacks","attackIndex","id","icon","color","sort","a","b","className","children","map","step","index","_step$attackType","onClick","replace","e","stopPropagation","detail","detailIndex","split","slice","view","Math","round"],"sources":["/home/demon/distributed-architecture/central-infrastructure/frontend/src/components/AttackTimeline.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './AttackTimeline.css';\n\nconst AttackTimeline = ({ attackerIP, attackPath, onStepClick }) => {\n  const [expandedSteps, setExpandedSteps] = useState(new Set());\n\n  const toggleStep = (stepId) => {\n    const newExpanded = new Set(expandedSteps);\n    if (newExpanded.has(stepId)) {\n      newExpanded.delete(stepId);\n    } else {\n      newExpanded.add(stepId);\n    }\n    setExpandedSteps(newExpanded);\n  };\n\n  const getStepIcon = (attackType) => {\n    switch (attackType) {\n      case 'port_scan': return '🎯';\n      case 'nmap_detection': return '👁️';\n      case 'ping_sweep': return '📡';\n      case 'service_access': return '🛡️';\n      case 'syn_scan': return '⚡';\n      case 'udp_scan': return '⚡';\n      case 'ssh_attempt': return '🔐';\n      case 'ftp_attempt': return '📁';\n      case 'http_attempt': return '🌐';\n      case 'telnet_attempt': return '📞';\n      case 's7_attack': return '🏭';\n      case 'dcs_attack': return '⚙️';\n      default: return '⚠️';\n    }\n  };\n\n  const getStepColor = (platform) => {\n    switch (platform) {\n      case 'Network': return 'network';\n      case 'IT': return 'it';\n      case 'OT': return 'ot';\n      default: return 'unknown';\n    }\n  };\n\n  const formatTimestamp = (timestamp) => {\n    if (!timestamp) return 'Unknown';\n    try {\n      return new Date(timestamp).toLocaleString();\n    } catch (error) {\n      return 'Invalid date';\n    }\n  };\n\n  const getStepDetails = (attack) => {\n    const details = [];\n    \n    if (attack.alertType === 'port_scan' && attack.details) {\n      details.push(`Ports: ${attack.details.ports?.join(', ') || 'Unknown'}`);\n      details.push(`Scan Type: ${attack.details.scanType || 'Unknown'}`);\n      details.push(`Duration: ${attack.details.duration || 'Unknown'}`);\n    }\n    \n    if (attack.alertType === 'nmap_detection' && attack.details) {\n      details.push(`Nmap Version: ${attack.details.nmapVersion || 'Unknown'}`);\n      details.push(`Scan Flags: ${attack.details.scanFlags || 'Unknown'}`);\n      details.push(`Target Ports: ${attack.details.targetPorts || 'Unknown'}`);\n    }\n    \n    if (attack.alertType === 'service_access' && attack.details) {\n      details.push(`Service: ${attack.details.service || 'Unknown'}`);\n      details.push(`Port: ${attack.details.port || 'Unknown'}`);\n      details.push(`Attempts: ${attack.details.attempts || 'Unknown'}`);\n      if (attack.details.credentials) {\n        details.push(`Credentials: ${attack.details.credentials.join(', ')}`);\n      }\n    }\n\n    if (attack.type === 'ssh_attempt') {\n      details.push(`Username: ${attack.username || 'Unknown'}`);\n      details.push(`Password: ${attack.password || 'Unknown'}`);\n      details.push(`Commands: ${attack.commands?.length || 0} executed`);\n    }\n\n    if (attack.type === 'ftp_attempt') {\n      details.push(`Username: ${attack.username || 'Unknown'}`);\n      details.push(`Password: ${attack.password || 'Unknown'}`);\n      details.push(`Files Accessed: ${attack.filesAccessed?.length || 0}`);\n    }\n\n    return details;\n  };\n\n  // Flatten all attacks into a single timeline\n  const timelineSteps = [];\n  attackPath.forEach((path, pathIndex) => {\n    path.attacks.forEach((attack, attackIndex) => {\n      timelineSteps.push({\n        id: `${pathIndex}-${attackIndex}`,\n        platform: path.platform,\n        attack: attack,\n        icon: path.icon,\n        color: path.color,\n        timestamp: attack.timestamp,\n        attackType: attack.alertType || attack.type\n      });\n    });\n  });\n\n  // Sort by timestamp\n  timelineSteps.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n\n  return (\n    <div className=\"attack-timeline\">\n      <div className=\"timeline-header\">\n        <h3>Attack Timeline: {attackerIP}</h3>\n        <p>Complete attack path with {timelineSteps.length} steps across {attackPath.length} platforms</p>\n      </div>\n\n      <div className=\"timeline-container\">\n        {timelineSteps.map((step, index) => (\n          <div key={step.id} className={`timeline-step ${step.color}`}>\n            {/* Timeline connector */}\n            {index > 0 && <div className=\"timeline-connector\" />}\n            \n            {/* Step marker */}\n            <div className=\"step-marker\">\n              <div className=\"step-icon\">{getStepIcon(step.attackType)}</div>\n              <div className=\"step-number\">{index + 1}</div>\n            </div>\n\n            {/* Step content */}\n            <div className=\"step-content\">\n              <div className=\"step-header\" onClick={() => toggleStep(step.id)}>\n                <div className=\"step-info\">\n                  <span className=\"step-platform\">{step.platform}</span>\n                  <span className=\"step-type\">{step.attackType?.replace('_', ' ')}</span>\n                  <span className=\"step-time\">{formatTimestamp(step.timestamp)}</span>\n                </div>\n                <div className=\"step-actions\">\n                  <button \n                    className=\"btn btn-secondary btn-sm\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      onStepClick(step);\n                    }}\n                  >\n                    🔍 View Details\n                  </button>\n                  <button className=\"btn btn-secondary btn-sm\">\n                    {expandedSteps.has(step.id) ? '▼' : '▶'}\n                  </button>\n                </div>\n              </div>\n\n              {/* Expanded details */}\n              {expandedSteps.has(step.id) && (\n                <div className=\"step-details\">\n                  <div className=\"details-grid\">\n                    {getStepDetails(step.attack).map((detail, detailIndex) => (\n                      <div key={detailIndex} className=\"detail-item\">\n                        <span className=\"detail-label\">{detail.split(':')[0]}:</span>\n                        <span className=\"detail-value\">{detail.split(':').slice(1).join(':')}</span>\n                      </div>\n                    ))}\n                  </div>\n                  \n                  <div className=\"step-actions-expanded\">\n                    <button \n                      className=\"btn btn-primary\"\n                      onClick={() => onStepClick(step)}\n                    >\n                      📊 Full Analysis\n                    </button>\n                    <button \n                      className=\"btn btn-secondary\"\n                      onClick={() => onStepClick({ ...step, view: 'logs' })}\n                    >\n                      📋 View Logs\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Timeline summary */}\n      <div className=\"timeline-summary\">\n        <div className=\"summary-stats\">\n          <div className=\"stat-item\">\n            <span className=\"stat-label\">Total Steps:</span>\n            <span className=\"stat-value\">{timelineSteps.length}</span>\n          </div>\n          <div className=\"stat-item\">\n            <span className=\"stat-label\">Platforms:</span>\n            <span className=\"stat-value\">{attackPath.length}</span>\n          </div>\n          <div className=\"stat-item\">\n            <span className=\"stat-label\">Duration:</span>\n            <span className=\"stat-value\">\n              {timelineSteps.length > 1 \n                ? `${Math.round((new Date(timelineSteps[timelineSteps.length - 1].timestamp) - new Date(timelineSteps[0].timestamp)) / 60000)}m`\n                : 'N/A'\n              }\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AttackTimeline; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}