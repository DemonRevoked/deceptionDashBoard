{"ast":null,"code":"import React,{createContext,useContext}from'react';import useHealthMonitoring from'../hooks/useHealthMonitoring';import{jsx as _jsx}from\"react/jsx-runtime\";const HealthMonitoringContext=/*#__PURE__*/createContext(null);export const HealthMonitoringProvider=_ref=>{let{children}=_ref;const healthMonitoring=useHealthMonitoring({enableNotifications:true,autoStart:false// Disable auto-start to prevent resource exhaustion\n});return/*#__PURE__*/_jsx(HealthMonitoringContext.Provider,{value:healthMonitoring,children:children});};export const useHealthMonitoringContext=()=>{const context=useContext(HealthMonitoringContext);if(!context){throw new Error('useHealthMonitoringContext must be used within a HealthMonitoringProvider');}return context;};export default HealthMonitoringContext;","map":{"version":3,"names":["React","createContext","useContext","useHealthMonitoring","jsx","_jsx","HealthMonitoringContext","HealthMonitoringProvider","_ref","children","healthMonitoring","enableNotifications","autoStart","Provider","value","useHealthMonitoringContext","context","Error"],"sources":["/home/demon/distributed-architecture/central-infrastructure/frontend/src/contexts/HealthMonitoringContext.js"],"sourcesContent":["import React, { createContext, useContext } from 'react';\nimport useHealthMonitoring from '../hooks/useHealthMonitoring';\n\nconst HealthMonitoringContext = createContext(null);\n\nexport const HealthMonitoringProvider = ({ children }) => {\n  const healthMonitoring = useHealthMonitoring({\n    enableNotifications: true,\n    autoStart: false  // Disable auto-start to prevent resource exhaustion\n  });\n\n  return (\n    <HealthMonitoringContext.Provider value={healthMonitoring}>\n      {children}\n    </HealthMonitoringContext.Provider>\n  );\n};\n\nexport const useHealthMonitoringContext = () => {\n  const context = useContext(HealthMonitoringContext);\n  if (!context) {\n    throw new Error('useHealthMonitoringContext must be used within a HealthMonitoringProvider');\n  }\n  return context;\n};\n\nexport default HealthMonitoringContext; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,KAAQ,OAAO,CACxD,MAAO,CAAAC,mBAAmB,KAAM,8BAA8B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE/D,KAAM,CAAAC,uBAAuB,cAAGL,aAAa,CAAC,IAAI,CAAC,CAEnD,MAAO,MAAM,CAAAM,wBAAwB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACnD,KAAM,CAAAE,gBAAgB,CAAGP,mBAAmB,CAAC,CAC3CQ,mBAAmB,CAAE,IAAI,CACzBC,SAAS,CAAE,KAAO;AACpB,CAAC,CAAC,CAEF,mBACEP,IAAA,CAACC,uBAAuB,CAACO,QAAQ,EAACC,KAAK,CAAEJ,gBAAiB,CAAAD,QAAA,CACvDA,QAAQ,CACuB,CAAC,CAEvC,CAAC,CAED,MAAO,MAAM,CAAAM,0BAA0B,CAAGA,CAAA,GAAM,CAC9C,KAAM,CAAAC,OAAO,CAAGd,UAAU,CAACI,uBAAuB,CAAC,CACnD,GAAI,CAACU,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,2EAA2E,CAAC,CAC9F,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,cAAe,CAAAV,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}