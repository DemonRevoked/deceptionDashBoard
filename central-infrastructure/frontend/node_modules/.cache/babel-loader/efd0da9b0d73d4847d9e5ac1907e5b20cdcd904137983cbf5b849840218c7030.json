{"ast":null,"code":"var _jsxFileName = \"/home/demon/distributed-architecture/central-infrastructure/frontend/src/contexts/HealthMonitoringContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext } from 'react';\nimport useHealthMonitoring from '../hooks/useHealthMonitoring';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HealthMonitoringContext = /*#__PURE__*/createContext(null);\nexport const HealthMonitoringProvider = ({\n  children\n}) => {\n  _s();\n  const healthMonitoring = useHealthMonitoring({\n    enableNotifications: true,\n    autoStart: false // Disable auto-start to prevent resource exhaustion\n  });\n  return /*#__PURE__*/_jsxDEV(HealthMonitoringContext.Provider, {\n    value: healthMonitoring,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(HealthMonitoringProvider, \"7XZiRol3vqqsSLSiAF9HYCOdXf4=\", false, function () {\n  return [useHealthMonitoring];\n});\n_c = HealthMonitoringProvider;\nexport const useHealthMonitoringContext = () => {\n  _s2();\n  const context = useContext(HealthMonitoringContext);\n  if (!context) {\n    throw new Error('useHealthMonitoringContext must be used within a HealthMonitoringProvider');\n  }\n  return context;\n};\n_s2(useHealthMonitoringContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default HealthMonitoringContext;\nvar _c;\n$RefreshReg$(_c, \"HealthMonitoringProvider\");","map":{"version":3,"names":["React","createContext","useContext","useHealthMonitoring","jsxDEV","_jsxDEV","HealthMonitoringContext","HealthMonitoringProvider","children","_s","healthMonitoring","enableNotifications","autoStart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useHealthMonitoringContext","_s2","context","Error","$RefreshReg$"],"sources":["/home/demon/distributed-architecture/central-infrastructure/frontend/src/contexts/HealthMonitoringContext.js"],"sourcesContent":["import React, { createContext, useContext } from 'react';\nimport useHealthMonitoring from '../hooks/useHealthMonitoring';\n\nconst HealthMonitoringContext = createContext(null);\n\nexport const HealthMonitoringProvider = ({ children }) => {\n  const healthMonitoring = useHealthMonitoring({\n    enableNotifications: true,\n    autoStart: false  // Disable auto-start to prevent resource exhaustion\n  });\n\n  return (\n    <HealthMonitoringContext.Provider value={healthMonitoring}>\n      {children}\n    </HealthMonitoringContext.Provider>\n  );\n};\n\nexport const useHealthMonitoringContext = () => {\n  const context = useContext(HealthMonitoringContext);\n  if (!context) {\n    throw new Error('useHealthMonitoringContext must be used within a HealthMonitoringProvider');\n  }\n  return context;\n};\n\nexport default HealthMonitoringContext; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,OAAOC,mBAAmB,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,uBAAuB,gBAAGL,aAAa,CAAC,IAAI,CAAC;AAEnD,OAAO,MAAMM,wBAAwB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAMC,gBAAgB,GAAGP,mBAAmB,CAAC;IAC3CQ,mBAAmB,EAAE,IAAI;IACzBC,SAAS,EAAE,KAAK,CAAE;EACpB,CAAC,CAAC;EAEF,oBACEP,OAAA,CAACC,uBAAuB,CAACO,QAAQ;IAACC,KAAK,EAAEJ,gBAAiB;IAAAF,QAAA,EACvDA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACuB,CAAC;AAEvC,CAAC;AAACT,EAAA,CAXWF,wBAAwB;EAAA,QACVJ,mBAAmB;AAAA;AAAAgB,EAAA,GADjCZ,wBAAwB;AAarC,OAAO,MAAMa,0BAA0B,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC9C,MAAMC,OAAO,GAAGpB,UAAU,CAACI,uBAAuB,CAAC;EACnD,IAAI,CAACgB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,2EAA2E,CAAC;EAC9F;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,0BAA0B;AAQvC,eAAed,uBAAuB;AAAC,IAAAa,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}